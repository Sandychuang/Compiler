//grammars
0 Goal stmt_list 
1 stmt_list stmt_list stmt 
2 stmt_list stmt 
3 stmt var_def ; 
4 stmt func_def 
5 stmt if_exp 
6 stmt while_exp 
7 stmt sg_stmt ; 
8 sg_stmt var_assign 
9 sg_stmt calc_exp 
10 sg_stmt control_flow 
11 control_flow return calc_exp 
12 control_flow continue 
13 control_flow break 
14 var_def var_def , var 
15 var_def var_def , var = calc_exp 
16 var_def type_exp var 
17 var_def type_exp var = calc_exp 
18 var_assign var = calc_exp 
19 var_assign var += calc_exp 
20 var_assign var -= calc_exp 
21 var_assign var *= calc_exp 
22 var_assign var /= calc_exp 
23 type_exp int 
24 type_exp double 
25 type_exp bool 
26 type_exp string 
27 type_exp char 
28 type_exp var 
29 func_def type_exp var ( par_list ) { stmt_list } 
30 par_list par_list , type_exp var 
31 par_list type_exp var 
32 par_list e 
33 if_exp if_stmt 
34 if_exp if_stmt else else_stmt 
35 if_stmt if ( bool_exp ) { stmt_list } 
36 if_stmt if ( bool_exp ) sg_stmt ; 
37 else_stmt if_exp 
38 else_stmt { stmt_list } 
39 else_stmt sg_stmt ; 
40 while_exp while ( bool_exp ) { stmt_list } 
41 calc_exp bool_exp 
42 calc_exp str_exp 
43 str_exp str 
44 str_exp chr 
45 bool_exp bool_exp && cmp_exp 
46 bool_exp bool_exp || cmp_exp 
47 bool_exp ! cmp_exp 
48 bool_exp cmp_exp 
49 cmp_exp ( bool_exp ) 
50 cmp_exp add_exp > add_exp 
51 cmp_exp add_exp >= add_exp 
52 cmp_exp add_exp < add_exp 
53 cmp_exp add_exp <= add_exp 
54 cmp_exp add_exp == add_exp 
55 cmp_exp add_exp != add_exp 
56 cmp_exp add_exp 
57 cmp_exp true 
58 cmp_exp false 
59 add_exp add_exp + mul_exp 
60 add_exp add_exp - mul_exp 
61 add_exp - mul_exp 
62 add_exp mul_exp 
63 add_exp ++ var 
64 add_exp -- var 
65 add_exp var ++ 
66 add_exp var -- 
67 mul_exp mul_exp * pri_exp 
68 mul_exp mul_exp / pri_exp 
69 mul_exp pri_exp 
70 pri_exp number 
71 pri_exp ( add_exp ) 
72 pri_exp apply_exp 
73 pri_exp str_exp 
74 apply_exp apply_exp . var ( arg_list ) 
75 apply_exp apply_exp . var 
76 apply_exp var ( arg_list ) 
77 apply_exp var 
78 arg_list arg_list , calc_exp 
79 arg_list calc_exp 
80 arg_list e 

//AST
0 crtGoal $0
1 lnkStmtLst $1 $0
2 crtStmtLst $0
3 crtStmtVarDef $1
4 crtStmtFuncDef $0
5 crtStmtIfExp $0
6 crtStmtWhlExp $0
7 crtStmtSgStmt $1  
8 crtSgVarAssign $0 
9 crtSgCalcExp $0 
10 crtSgControlFlow $0
11 crtCtrFlwRtn $0 
12 crtCtrFlwCont $0 
13 crtCtrFlwBrk $0 
14 lnkVarDef $2 $0               
15 lnkVarDefC $4 $2 $0 
16 crtVarDef $1 $0
17 crtVarDefC $3 $2 $0
18 crtVarAsgC $2 $0
19 crtVarAsgAdd $2 $0
20 crtVarAsgSub $2 $0
21 crtVarAsgMul $2 $0
22 crtVarAsgDiv $2 $0
23 crtTpExpInt $0
24 crtTpExpDb $0
25 crtTpExpBl $0
26 crtTpExpStr $0
27 crtTpExpChr $0
28 crtTpExpVar $0
29 crtFncDef $7 $6 $4 $1  
30 lnkParLst $2 $0       
31 crtParLst $1 $0       
32 crtParLstE           
33 crtIfExpIf $0        
34 crtIfExpEls $2 $0    
35 crtIfStmtL $4 $1       
36 crtIfStmtS $4 $1          
37 crtElsStmtI $0         
38 crtElsStmtL $1       
39 crtElsStmtS $1       
40 crtWhlExp $4 $1    
41 crtCalcExpBl $0    
42 crtCalcExpStr $0   
43 crtStrS $0 
44 crtStrC $0 
45 crtBlExpAnd $2 $0           
46 crtBlExpOr $2 $0			 
47 crtBlExpN $0				 
48 crtBlExpCmp $0				 
49 crtCmpExpBl $1				 
50 crtCmpExpL $2 $0				 
51 crtCmpExpLE $2 $0			 
52 crtCmpExpS $2 $0		 
53 crtCmpExpSE $2 $0			 
54 crtCmpExpE $2 $0			 
55 crtCmpExpN $2 $0	
56 crtCmpAdd $0	
57 crtCmpExpTrue $0 
58 crtCmpExpFalse $0
59 crtAddExpAdd $2 $0		 
60 crtAddExpSub $2 $0			 
61 crtAddExpMns $0			 
62 crtAddExpMul $0			 
63 crtAddExpInc $0			 
64 crtAddExpDec $0			 
65 crtAddExpIncT $1			 
66 crtAddExpDecT $1		 
67 crtMulExpMul $2 $0		
68 crtMulExpDiv $2 $0		
69 crtMulExpPri $0		
70 crtPriExpNum $0		
71 crtPriExpAdd $1		
72 crtPriExpApp $0	
73 crtPriExpStr $0
74 lnkAppExp $5 $3 $1		
75 crtAppExpP $2 $0	
76 crtAppExpF $3 $1			
77 crtAppExpVar $0	
78 lnkArgLst $2 $0	
79 crtArgCalc $0	
80 crtArgLstE
//end
