//first set

arg_list :
var , e 
Goal :
double while break bool ! - type goto class int if -- data interface do ++ var return newtype ( typedef for continue number 
if_exp :
if 
par_list :
double , bool var e int 
pri_exp :
var ( number 
bool_exp :
++ ! var - ( number -- 
step_exp :
double ++ var ! bool - ( int number -- 
cmp_exp :
++ var - ( number -- 
func_def :
var 
while_exp :
while do 
type_exp :
double bool var int 
calc_exp :
++ var ! - ( number -- 
apply_exp :
var 
for_exp :
for 
stmt :
double while break bool ! - type goto class int if -- data interface do ++ var return newtype ( typedef for continue number 
var_assign :
double bool var int 
sg_stmt :
double ++ bool var ! - ( int number -- 
type_def :
data interface type newtype class typedef 
mul_exp :
var ( number 
control_flow :
break return goto continue 
else_stmt :
double ++ bool var ! - { ( int if number -- 
if_stmt :
if 
var_def :
double bool var int 
stmt_list :
double while break bool ! - type goto class int if -- data interface do ++ var return newtype ( typedef for continue number 
init_exp :
double var bool int 
add_exp :
++ var - ( number -- 

//all CCs

0 : 
Goal -> stmt_list 0 look_ahead: eof 
stmt_list -> stmt_list stmt 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

1 : reduce 0
Goal -> stmt_list 1 look_ahead: eof 
stmt_list -> stmt_list stmt 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

2 : reduce 2
stmt_list -> stmt 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

3 : 
stmt -> var_def ; 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
var_def -> var_def , var 1 look_ahead: ; , 

4 : 
stmt -> type_def ; 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

5 : reduce 5
stmt -> func_def 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

6 : reduce 6
stmt -> if_exp 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

7 : reduce 7
stmt -> while_exp 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

8 : reduce 8
stmt -> for_exp 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

9 : 
stmt -> sg_stmt ; 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

10 : 
stmt -> control_flow ; 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

11 : 
var_def -> type_exp var 1 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 1 look_ahead: ; , 

12 : 
type_def -> class var 1 look_ahead: ; 

13 : 
type_def -> data var 1 look_ahead: ; 

14 : 
type_def -> interface var 1 look_ahead: ; 

15 : 
type_def -> type var 1 look_ahead: ; 

16 : 
type_def -> newtype var 1 look_ahead: ; 

17 : 
type_def -> typedef var 1 look_ahead: ; 

18 : reduce 85
func_def -> var ( par_list ) { stmt_list } 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
type_exp -> var 1 look_ahead: var 
var_assign -> var = calc_exp 1 look_ahead: ; , 
var_assign -> var += calc_exp 1 look_ahead: ; , 
var_assign -> var -= calc_exp 1 look_ahead: ; , 
var_assign -> var *= calc_exp 1 look_ahead: ; , 
var_assign -> var /= calc_exp 1 look_ahead: ; , 
add_exp -> var ++ 1 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 1 look_ahead: >= < ; + - > <= == != 
pri_exp -> var 1 look_ahead: ; * + - / 
apply_exp -> var ( arg_list ) 1 look_ahead: ; * + - / . 
apply_exp -> var 1 look_ahead: ; * + - / . 
pri_exp -> var 1 look_ahead: >= < ; * + - > / <= == != 
apply_exp -> var ( arg_list ) 1 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var 1 look_ahead: >= < ; * + - > / <= . == != 

19 : reduce 40
if_exp -> if_stmt 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
if_exp -> if_stmt else else_stmt 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

20 : 
while_exp -> while ( bool_exp ) { stmt_list } 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

21 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

22 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

23 : reduce 11
sg_stmt -> var_assign 1 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 1 look_ahead: ; , 

24 : reduce 12
sg_stmt -> calc_exp 1 look_ahead: ; 

25 : reduce 13
control_flow -> continue 1 look_ahead: ; 

26 : 
control_flow -> return calc_exp 1 look_ahead: ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var 0 look_ahead: >= < ; * + - > / <= . == != 

27 : reduce 15
control_flow -> break 1 look_ahead: ; 

28 : 
control_flow -> goto var 1 look_ahead: ; 

29 : reduce 26
type_exp -> int 1 look_ahead: var 

30 : reduce 27
type_exp -> double 1 look_ahead: var 

31 : reduce 28
type_exp -> bool 1 look_ahead: var 

32 : 
if_stmt -> if ( bool_exp ) { stmt_list } 1 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 1 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 

33 : reduce 54
calc_exp -> add_exp 1 look_ahead: ; 
add_exp -> add_exp + mul_exp 1 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 1 look_ahead: >= < ; + - > <= == != 
cmp_exp -> add_exp > add_exp 1 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 1 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 1 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 1 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 1 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 1 look_ahead: || ; && 

34 : reduce 55
calc_exp -> bool_exp 1 look_ahead: ; 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || ; && 

35 : 
add_exp -> - mul_exp 1 look_ahead: >= < ; + - > <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var 0 look_ahead: >= < ; * + - > / <= . == != 

36 : reduce 70
add_exp -> mul_exp 1 look_ahead: >= < ; + - > <= == != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: ; * + - / 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < ; * + - > / <= == != 

37 : 
add_exp -> ++ var 1 look_ahead: >= < ; + - > <= == != 

38 : 
add_exp -> -- var 1 look_ahead: >= < ; + - > <= == != 

39 : 
bool_exp -> ! cmp_exp 1 look_ahead: || ; && 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

40 : reduce 59
bool_exp -> cmp_exp 1 look_ahead: || ; && 

41 : reduce 77
mul_exp -> pri_exp 1 look_ahead: ; * + - / 

42 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: || ; && 
pri_exp -> ( add_exp ) 1 look_ahead: ; * + - / 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < + - > <= == ) != 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 0 look_ahead: >= < * + - > / <= . == ) != 
pri_exp -> ( add_exp ) 1 look_ahead: >= < ; * + - > / <= == != 

43 : reduce 78
pri_exp -> number 1 look_ahead: ; * + - / 

44 : reduce 80
pri_exp -> apply_exp 1 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 1 look_ahead: ; * + - / . 

45 : reduce 1
stmt_list -> stmt_list stmt 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

46 : reduce 3
stmt -> var_def ; 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

47 : 
var_def -> var_def , var 2 look_ahead: ; , 

48 : reduce 4
stmt -> type_def ; 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

49 : reduce 9
stmt -> sg_stmt ; 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

50 : reduce 10
stmt -> control_flow ; 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

51 : reduce 18
var_def -> type_exp var 2 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 2 look_ahead: ; , 

52 : reduce 30
type_def -> class var 2 look_ahead: ; 

53 : reduce 31
type_def -> data var 2 look_ahead: ; 

54 : reduce 32
type_def -> interface var 2 look_ahead: ; 

55 : reduce 33
type_def -> type var 2 look_ahead: ; 

56 : reduce 34
type_def -> newtype var 2 look_ahead: ; 

57 : reduce 35
type_def -> typedef var 2 look_ahead: ; 

58 : 
func_def -> var ( par_list ) { stmt_list } 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
apply_exp -> var ( arg_list ) 2 look_ahead: ; * + - / . 
par_list -> par_list , type_exp var 0 look_ahead: , ) 
par_list -> type_exp var 0 look_ahead: , ) 
par_list -> e 0 look_ahead: , ) 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 

59 : 
var_assign -> var = calc_exp 2 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; , + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; , && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; , && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; , && 
bool_exp -> cmp_exp 0 look_ahead: || ; , && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; , && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; , && 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

60 : 
var_assign -> var += calc_exp 2 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; , + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; , && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; , && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; , && 
bool_exp -> cmp_exp 0 look_ahead: || ; , && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; , && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; , && 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

61 : 
var_assign -> var -= calc_exp 2 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; , + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; , && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; , && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; , && 
bool_exp -> cmp_exp 0 look_ahead: || ; , && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; , && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; , && 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

62 : 
var_assign -> var *= calc_exp 2 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; , + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; , && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; , && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; , && 
bool_exp -> cmp_exp 0 look_ahead: || ; , && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; , && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; , && 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

63 : 
var_assign -> var /= calc_exp 2 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; , + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; , && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; , && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; , && 
bool_exp -> cmp_exp 0 look_ahead: || ; , && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; , && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; , && 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

64 : reduce 73
add_exp -> var ++ 2 look_ahead: >= < ; + - > <= == != 

65 : reduce 74
add_exp -> var -- 2 look_ahead: >= < ; + - > <= == != 

66 : 
if_exp -> if_stmt else else_stmt 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
else_stmt -> if_stmt 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
else_stmt -> { stmt_list } 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
else_stmt -> sg_stmt ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

67 : 
while_exp -> while ( bool_exp ) { stmt_list } 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

68 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

69 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
init_exp -> var = calc_exp 0 look_ahead: ; 
init_exp -> type_exp var = calc_exp 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 

70 : 
var_assign -> var_assign , var = calc_exp 2 look_ahead: ; , 

71 : reduce 14
control_flow -> return calc_exp 2 look_ahead: ; 

72 : reduce 77
mul_exp -> pri_exp 1 look_ahead: >= < ; * + - > / <= == != 

73 : reduce 78
pri_exp -> number 1 look_ahead: >= < ; * + - > / <= == != 

74 : reduce 80
pri_exp -> apply_exp 1 look_ahead: >= < ; * + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> apply_exp . var 1 look_ahead: >= < ; * + - > / <= . == != 

75 : reduce 16
control_flow -> goto var 2 look_ahead: ; 

76 : 
if_stmt -> if ( bool_exp ) { stmt_list } 2 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 2 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

77 : 
add_exp -> add_exp + mul_exp 2 look_ahead: >= < ; + - > <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var 0 look_ahead: >= < ; * + - > / <= . == != 

78 : 
add_exp -> add_exp - mul_exp 2 look_ahead: >= < ; + - > <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var 0 look_ahead: >= < ; * + - > / <= . == != 

79 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; && + - 
add_exp -> - mul_exp 0 look_ahead: || ; && + - 
add_exp -> mul_exp 0 look_ahead: || ; && + - 
add_exp -> ++ var 0 look_ahead: || ; && + - 
add_exp -> -- var 0 look_ahead: || ; && + - 
add_exp -> var ++ 0 look_ahead: || ; && + - 
add_exp -> var -- 0 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

80 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; && + - 
add_exp -> - mul_exp 0 look_ahead: || ; && + - 
add_exp -> mul_exp 0 look_ahead: || ; && + - 
add_exp -> ++ var 0 look_ahead: || ; && + - 
add_exp -> -- var 0 look_ahead: || ; && + - 
add_exp -> var ++ 0 look_ahead: || ; && + - 
add_exp -> var -- 0 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

81 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; && + - 
add_exp -> - mul_exp 0 look_ahead: || ; && + - 
add_exp -> mul_exp 0 look_ahead: || ; && + - 
add_exp -> ++ var 0 look_ahead: || ; && + - 
add_exp -> -- var 0 look_ahead: || ; && + - 
add_exp -> var ++ 0 look_ahead: || ; && + - 
add_exp -> var -- 0 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

82 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; && + - 
add_exp -> - mul_exp 0 look_ahead: || ; && + - 
add_exp -> mul_exp 0 look_ahead: || ; && + - 
add_exp -> ++ var 0 look_ahead: || ; && + - 
add_exp -> -- var 0 look_ahead: || ; && + - 
add_exp -> var ++ 0 look_ahead: || ; && + - 
add_exp -> var -- 0 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

83 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; && + - 
add_exp -> - mul_exp 0 look_ahead: || ; && + - 
add_exp -> mul_exp 0 look_ahead: || ; && + - 
add_exp -> ++ var 0 look_ahead: || ; && + - 
add_exp -> -- var 0 look_ahead: || ; && + - 
add_exp -> var ++ 0 look_ahead: || ; && + - 
add_exp -> var -- 0 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

84 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; && + - 
add_exp -> - mul_exp 0 look_ahead: || ; && + - 
add_exp -> mul_exp 0 look_ahead: || ; && + - 
add_exp -> ++ var 0 look_ahead: || ; && + - 
add_exp -> -- var 0 look_ahead: || ; && + - 
add_exp -> var ++ 0 look_ahead: || ; && + - 
add_exp -> var -- 0 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

85 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: || ; && 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

86 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: || ; && 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

87 : reduce 69
add_exp -> - mul_exp 2 look_ahead: >= < ; + - > <= == != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < ; * + - > / <= == != 

88 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: ; * + - / 
mul_exp -> mul_exp * pri_exp 2 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var 0 look_ahead: >= < ; * + - > / <= . == != 

89 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 2 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> var 0 look_ahead: >= < ; * + - > / <= . == != 

90 : reduce 71
add_exp -> ++ var 2 look_ahead: >= < ; + - > <= == != 

91 : reduce 72
add_exp -> -- var 2 look_ahead: >= < ; + - > <= == != 

92 : reduce 58
bool_exp -> ! cmp_exp 2 look_ahead: || ; && 

93 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: || ; && 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

94 : 
pri_exp -> ( add_exp ) 2 look_ahead: ; * + - / 
add_exp -> add_exp + mul_exp 1 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 1 look_ahead: >= < + - > <= == ) != 
cmp_exp -> add_exp > add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: || && ) 
pri_exp -> ( add_exp ) 2 look_ahead: >= < ; * + - > / <= == != 

95 : 
bool_exp -> ! cmp_exp 1 look_ahead: || && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

96 : reduce 59
bool_exp -> cmp_exp 1 look_ahead: || && ) 

97 : 
add_exp -> - mul_exp 1 look_ahead: >= < + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 0 look_ahead: >= < * + - > / <= . == ) != 

98 : reduce 70
add_exp -> mul_exp 1 look_ahead: >= < + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < * + - > / <= == ) != 

99 : 
add_exp -> ++ var 1 look_ahead: >= < + - > <= == ) != 

100 : 
add_exp -> -- var 1 look_ahead: >= < + - > <= == ) != 

101 : reduce 85
add_exp -> var ++ 1 look_ahead: >= < + - > <= == ) != 
add_exp -> var -- 1 look_ahead: >= < + - > <= == ) != 
pri_exp -> var 1 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> var ( arg_list ) 1 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 1 look_ahead: >= < * + - > / <= . == ) != 

102 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: || && ) 
pri_exp -> ( add_exp ) 1 look_ahead: >= < * + - > / <= == ) != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < + - > <= == ) != 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 0 look_ahead: >= < * + - > / <= . == ) != 

103 : reduce 77
mul_exp -> pri_exp 1 look_ahead: >= < * + - > / <= == ) != 

104 : reduce 78
pri_exp -> number 1 look_ahead: >= < * + - > / <= == ) != 

105 : reduce 80
pri_exp -> apply_exp 1 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 1 look_ahead: >= < * + - > / <= . == ) != 

106 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 2 look_ahead: ; * + - / . 

107 : reduce 17
var_def -> var_def , var 3 look_ahead: ; , 

108 : 
var_assign -> type_exp var = calc_exp 3 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; , + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; , && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; , && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; , && 
bool_exp -> cmp_exp 0 look_ahead: || ; , && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * , + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * , + - / 
mul_exp -> pri_exp 0 look_ahead: ; * , + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; , && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; , && 
pri_exp -> number 0 look_ahead: ; * , + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * , + - / 
pri_exp -> apply_exp 0 look_ahead: ; * , + - / 
pri_exp -> var 0 look_ahead: ; * , + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * , + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * , + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * , + - / . 
apply_exp -> var 0 look_ahead: ; * , + - / . 

109 : 
func_def -> var ( par_list ) { stmt_list } 3 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
par_list -> par_list , type_exp var 1 look_ahead: , ) 

110 : 
apply_exp -> var ( arg_list ) 3 look_ahead: ; * + - / . 
arg_list -> arg_list , var 1 look_ahead: , ) 

111 : 
par_list -> type_exp var 1 look_ahead: , ) 

112 : reduce 88
par_list -> e 1 look_ahead: , ) 
arg_list -> e 1 look_ahead: , ) 

113 : reduce 29
arg_list -> var 1 look_ahead: , ) 
type_exp -> var 1 look_ahead: var 

114 : reduce 21
var_assign -> var = calc_exp 3 look_ahead: ; , 

115 : reduce 54
calc_exp -> add_exp 1 look_ahead: ; , 
add_exp -> add_exp + mul_exp 1 look_ahead: >= < ; , + - > <= == != 
add_exp -> add_exp - mul_exp 1 look_ahead: >= < ; , + - > <= == != 
cmp_exp -> add_exp > add_exp 1 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 1 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 1 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 1 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 1 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 1 look_ahead: || ; , && 

116 : reduce 55
calc_exp -> bool_exp 1 look_ahead: ; , 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || ; , && 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || ; , && 

117 : 
add_exp -> - mul_exp 1 look_ahead: >= < ; , + - > <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

118 : reduce 70
add_exp -> mul_exp 1 look_ahead: >= < ; , + - > <= == != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: ; * , + - / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: ; * , + - / 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < * > + - / <= == != 

119 : 
add_exp -> ++ var 1 look_ahead: >= < ; , + - > <= == != 

120 : 
add_exp -> -- var 1 look_ahead: >= < ; , + - > <= == != 

121 : reduce 85
add_exp -> var ++ 1 look_ahead: >= < ; , + - > <= == != 
add_exp -> var -- 1 look_ahead: >= < ; , + - > <= == != 
pri_exp -> var 1 look_ahead: ; * , + - / 
apply_exp -> var ( arg_list ) 1 look_ahead: ; * , + - / . 
apply_exp -> var 1 look_ahead: ; * , + - / . 
pri_exp -> var 1 look_ahead: >= < * > + - / <= == != 
apply_exp -> var ( arg_list ) 1 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 1 look_ahead: >= < * > + - / <= . == != 

122 : 
bool_exp -> ! cmp_exp 1 look_ahead: || ; , && 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; , && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

123 : reduce 59
bool_exp -> cmp_exp 1 look_ahead: || ; , && 

124 : reduce 77
mul_exp -> pri_exp 1 look_ahead: ; * , + - / 

125 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: || ; , && 
pri_exp -> ( add_exp ) 1 look_ahead: ; * , + - / 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < + - > <= == ) != 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 0 look_ahead: >= < * + - > / <= . == ) != 
pri_exp -> ( add_exp ) 1 look_ahead: >= < * > + - / <= == != 

126 : reduce 78
pri_exp -> number 1 look_ahead: ; * , + - / 

127 : reduce 80
pri_exp -> apply_exp 1 look_ahead: ; * , + - / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: ; * , + - / . 
apply_exp -> apply_exp . var 1 look_ahead: ; * , + - / . 

128 : reduce 22
var_assign -> var += calc_exp 3 look_ahead: ; , 

129 : reduce 23
var_assign -> var -= calc_exp 3 look_ahead: ; , 

130 : reduce 24
var_assign -> var *= calc_exp 3 look_ahead: ; , 

131 : reduce 25
var_assign -> var /= calc_exp 3 look_ahead: ; , 

132 : reduce 41
if_exp -> if_stmt else else_stmt 3 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

133 : reduce 44
else_stmt -> if_stmt 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

134 : 
else_stmt -> { stmt_list } 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

135 : 
else_stmt -> sg_stmt ; 1 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

136 : 
while_exp -> while ( bool_exp ) { stmt_list } 3 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

137 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 3 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

138 : reduce 2
stmt_list -> stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

139 : 
stmt -> var_def ; 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 1 look_ahead: ; , 

140 : 
stmt -> type_def ; 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

141 : reduce 5
stmt -> func_def 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

142 : reduce 6
stmt -> if_exp 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

143 : reduce 7
stmt -> while_exp 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

144 : reduce 8
stmt -> for_exp 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

145 : 
stmt -> sg_stmt ; 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

146 : 
stmt -> control_flow ; 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

147 : reduce 85
func_def -> var ( par_list ) { stmt_list } 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
type_exp -> var 1 look_ahead: var 
var_assign -> var = calc_exp 1 look_ahead: ; , 
var_assign -> var += calc_exp 1 look_ahead: ; , 
var_assign -> var -= calc_exp 1 look_ahead: ; , 
var_assign -> var *= calc_exp 1 look_ahead: ; , 
var_assign -> var /= calc_exp 1 look_ahead: ; , 
add_exp -> var ++ 1 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 1 look_ahead: >= < ; + - > <= == != 
pri_exp -> var 1 look_ahead: ; * + - / 
apply_exp -> var ( arg_list ) 1 look_ahead: ; * + - / . 
apply_exp -> var 1 look_ahead: ; * + - / . 
pri_exp -> var 1 look_ahead: >= < * > + - / <= == != 
apply_exp -> var ( arg_list ) 1 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 1 look_ahead: >= < * > + - / <= . == != 

148 : reduce 40
if_exp -> if_stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

149 : 
while_exp -> while ( bool_exp ) { stmt_list } 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

150 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

151 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

152 : 
if_stmt -> if ( bool_exp ) { stmt_list } 1 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 1 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 

153 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 3 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

154 : reduce 29
init_exp -> var = calc_exp 1 look_ahead: ; 
type_exp -> var 1 look_ahead: var 

155 : 
init_exp -> type_exp var = calc_exp 1 look_ahead: ; 

156 : 
var_assign -> var_assign , var = calc_exp 3 look_ahead: ; , 

157 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> apply_exp . var 2 look_ahead: >= < ; * + - > / <= . == != 

158 : 
if_stmt -> if ( bool_exp ) { stmt_list } 3 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 3 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

159 : reduce 67
add_exp -> add_exp + mul_exp 3 look_ahead: >= < ; + - > <= == != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < ; * + - > / <= == != 

160 : reduce 68
add_exp -> add_exp - mul_exp 3 look_ahead: >= < ; + - > <= == != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < ; * + - > / <= == != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < ; * + - > / <= == != 

161 : reduce 61
cmp_exp -> add_exp > add_exp 3 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; && + - 

162 : 
add_exp -> - mul_exp 1 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

163 : reduce 70
add_exp -> mul_exp 1 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || ; * && + - / 

164 : 
add_exp -> ++ var 1 look_ahead: || ; && + - 

165 : 
add_exp -> -- var 1 look_ahead: || ; && + - 

166 : reduce 85
add_exp -> var ++ 1 look_ahead: || ; && + - 
add_exp -> var -- 1 look_ahead: || ; && + - 
pri_exp -> var 1 look_ahead: || ; * && + - / 
apply_exp -> var ( arg_list ) 1 look_ahead: || ; * && + - / . 
apply_exp -> var 1 look_ahead: || ; * && + - / . 

167 : reduce 77
mul_exp -> pri_exp 1 look_ahead: || ; * && + - / 

168 : reduce 78
pri_exp -> number 1 look_ahead: || ; * && + - / 

169 : 
pri_exp -> ( add_exp ) 1 look_ahead: || ; * && + - / 
add_exp -> add_exp + mul_exp 0 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: + - ) 
add_exp -> - mul_exp 0 look_ahead: + - ) 
add_exp -> mul_exp 0 look_ahead: + - ) 
add_exp -> ++ var 0 look_ahead: + - ) 
add_exp -> -- var 0 look_ahead: + - ) 
add_exp -> var ++ 0 look_ahead: + - ) 
add_exp -> var -- 0 look_ahead: + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * + - / ) 
mul_exp -> pri_exp 0 look_ahead: * + - / ) 
pri_exp -> number 0 look_ahead: * + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * + - / ) 
pri_exp -> apply_exp 0 look_ahead: * + - / ) 
pri_exp -> var 0 look_ahead: * + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> var 0 look_ahead: * + - / . ) 

170 : reduce 80
pri_exp -> apply_exp 1 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 1 look_ahead: || ; * && + - / . 

171 : reduce 62
cmp_exp -> add_exp >= add_exp 3 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; && + - 

172 : reduce 63
cmp_exp -> add_exp < add_exp 3 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; && + - 

173 : reduce 64
cmp_exp -> add_exp <= add_exp 3 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; && + - 

174 : reduce 65
cmp_exp -> add_exp == add_exp 3 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; && + - 

175 : reduce 66
cmp_exp -> add_exp != add_exp 3 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; && + - 

176 : reduce 56
bool_exp -> bool_exp && cmp_exp 3 look_ahead: || ; && 

177 : reduce 57
bool_exp -> bool_exp || cmp_exp 3 look_ahead: || ; && 

178 : reduce 75
mul_exp -> mul_exp * pri_exp 3 look_ahead: ; * + - / 
mul_exp -> mul_exp * pri_exp 3 look_ahead: >= < ; * + - > / <= == != 

179 : reduce 76
mul_exp -> mul_exp / pri_exp 3 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 3 look_ahead: >= < ; * + - > / <= == != 

180 : reduce 60
cmp_exp -> ( bool_exp ) 3 look_ahead: || ; && 

181 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: || && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

182 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: || && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

183 : reduce 79
pri_exp -> ( add_exp ) 3 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 3 look_ahead: >= < ; * + - > / <= == != 

184 : 
add_exp -> add_exp + mul_exp 2 look_ahead: >= < + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 0 look_ahead: >= < * + - > / <= . == ) != 

185 : 
add_exp -> add_exp - mul_exp 2 look_ahead: >= < + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 0 look_ahead: >= < * + - > / <= . == ) != 

186 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || && + - ) 
add_exp -> - mul_exp 0 look_ahead: || && + - ) 
add_exp -> mul_exp 0 look_ahead: || && + - ) 
add_exp -> ++ var 0 look_ahead: || && + - ) 
add_exp -> -- var 0 look_ahead: || && + - ) 
add_exp -> var ++ 0 look_ahead: || && + - ) 
add_exp -> var -- 0 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

187 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || && + - ) 
add_exp -> - mul_exp 0 look_ahead: || && + - ) 
add_exp -> mul_exp 0 look_ahead: || && + - ) 
add_exp -> ++ var 0 look_ahead: || && + - ) 
add_exp -> -- var 0 look_ahead: || && + - ) 
add_exp -> var ++ 0 look_ahead: || && + - ) 
add_exp -> var -- 0 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

188 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || && + - ) 
add_exp -> - mul_exp 0 look_ahead: || && + - ) 
add_exp -> mul_exp 0 look_ahead: || && + - ) 
add_exp -> ++ var 0 look_ahead: || && + - ) 
add_exp -> -- var 0 look_ahead: || && + - ) 
add_exp -> var ++ 0 look_ahead: || && + - ) 
add_exp -> var -- 0 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

189 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || && + - ) 
add_exp -> - mul_exp 0 look_ahead: || && + - ) 
add_exp -> mul_exp 0 look_ahead: || && + - ) 
add_exp -> ++ var 0 look_ahead: || && + - ) 
add_exp -> -- var 0 look_ahead: || && + - ) 
add_exp -> var ++ 0 look_ahead: || && + - ) 
add_exp -> var -- 0 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

190 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || && + - ) 
add_exp -> - mul_exp 0 look_ahead: || && + - ) 
add_exp -> mul_exp 0 look_ahead: || && + - ) 
add_exp -> ++ var 0 look_ahead: || && + - ) 
add_exp -> -- var 0 look_ahead: || && + - ) 
add_exp -> var ++ 0 look_ahead: || && + - ) 
add_exp -> var -- 0 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

191 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || && + - ) 
add_exp -> - mul_exp 0 look_ahead: || && + - ) 
add_exp -> mul_exp 0 look_ahead: || && + - ) 
add_exp -> ++ var 0 look_ahead: || && + - ) 
add_exp -> -- var 0 look_ahead: || && + - ) 
add_exp -> var ++ 0 look_ahead: || && + - ) 
add_exp -> var -- 0 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

192 : reduce 58
bool_exp -> ! cmp_exp 2 look_ahead: || && ) 

193 : reduce 69
add_exp -> - mul_exp 2 look_ahead: >= < + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < * + - > / <= == ) != 

194 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 0 look_ahead: >= < * + - > / <= . == ) != 

195 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 0 look_ahead: >= < * + - > / <= . == ) != 

196 : reduce 71
add_exp -> ++ var 2 look_ahead: >= < + - > <= == ) != 

197 : reduce 72
add_exp -> -- var 2 look_ahead: >= < + - > <= == ) != 

198 : reduce 73
add_exp -> var ++ 2 look_ahead: >= < + - > <= == ) != 

199 : reduce 74
add_exp -> var -- 2 look_ahead: >= < + - > <= == ) != 

200 : 
apply_exp -> var ( arg_list ) 2 look_ahead: >= < * + - > / <= . == ) != 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

201 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: || && ) 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

202 : 
pri_exp -> ( add_exp ) 2 look_ahead: >= < * + - > / <= == ) != 
add_exp -> add_exp + mul_exp 1 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 1 look_ahead: >= < + - > <= == ) != 
cmp_exp -> add_exp > add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: || && ) 

203 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 2 look_ahead: >= < * + - > / <= . == ) != 

204 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 3 look_ahead: ; * + - / . 

205 : reduce 20
var_assign -> type_exp var = calc_exp 4 look_ahead: ; , 

206 : 
func_def -> var ( par_list ) { stmt_list } 4 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

207 : 
par_list -> par_list , type_exp var 2 look_ahead: , ) 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 

208 : reduce 84
apply_exp -> var ( arg_list ) 4 look_ahead: ; * + - / . 

209 : 
arg_list -> arg_list , var 2 look_ahead: , ) 

210 : reduce 38
par_list -> type_exp var 2 look_ahead: , ) 

211 : 
add_exp -> add_exp + mul_exp 2 look_ahead: >= < ; , + - > <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

212 : 
add_exp -> add_exp - mul_exp 2 look_ahead: >= < ; , + - > <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

213 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> mul_exp 0 look_ahead: || ; , && + - 
add_exp -> ++ var 0 look_ahead: || ; , && + - 
add_exp -> -- var 0 look_ahead: || ; , && + - 
add_exp -> var ++ 0 look_ahead: || ; , && + - 
add_exp -> var -- 0 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

214 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> mul_exp 0 look_ahead: || ; , && + - 
add_exp -> ++ var 0 look_ahead: || ; , && + - 
add_exp -> -- var 0 look_ahead: || ; , && + - 
add_exp -> var ++ 0 look_ahead: || ; , && + - 
add_exp -> var -- 0 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

215 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> mul_exp 0 look_ahead: || ; , && + - 
add_exp -> ++ var 0 look_ahead: || ; , && + - 
add_exp -> -- var 0 look_ahead: || ; , && + - 
add_exp -> var ++ 0 look_ahead: || ; , && + - 
add_exp -> var -- 0 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

216 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> mul_exp 0 look_ahead: || ; , && + - 
add_exp -> ++ var 0 look_ahead: || ; , && + - 
add_exp -> -- var 0 look_ahead: || ; , && + - 
add_exp -> var ++ 0 look_ahead: || ; , && + - 
add_exp -> var -- 0 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

217 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> mul_exp 0 look_ahead: || ; , && + - 
add_exp -> ++ var 0 look_ahead: || ; , && + - 
add_exp -> -- var 0 look_ahead: || ; , && + - 
add_exp -> var ++ 0 look_ahead: || ; , && + - 
add_exp -> var -- 0 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

218 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 0 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> - mul_exp 0 look_ahead: || ; , && + - 
add_exp -> mul_exp 0 look_ahead: || ; , && + - 
add_exp -> ++ var 0 look_ahead: || ; , && + - 
add_exp -> -- var 0 look_ahead: || ; , && + - 
add_exp -> var ++ 0 look_ahead: || ; , && + - 
add_exp -> var -- 0 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

219 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: || ; , && 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; , && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

220 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: || ; , && 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; , && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

221 : reduce 69
add_exp -> - mul_exp 2 look_ahead: >= < ; , + - > <= == != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < ; * , + - > / <= == != 

222 : reduce 77
mul_exp -> pri_exp 1 look_ahead: >= < ; * , + - > / <= == != 

223 : reduce 78
pri_exp -> number 1 look_ahead: >= < ; * , + - > / <= == != 

224 : 
pri_exp -> ( add_exp ) 1 look_ahead: >= < ; * , + - > / <= == != 
add_exp -> add_exp + mul_exp 0 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: + - ) 
add_exp -> - mul_exp 0 look_ahead: + - ) 
add_exp -> mul_exp 0 look_ahead: + - ) 
add_exp -> ++ var 0 look_ahead: + - ) 
add_exp -> -- var 0 look_ahead: + - ) 
add_exp -> var ++ 0 look_ahead: + - ) 
add_exp -> var -- 0 look_ahead: + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * + - / ) 
mul_exp -> pri_exp 0 look_ahead: * + - / ) 
pri_exp -> number 0 look_ahead: * + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * + - / ) 
pri_exp -> apply_exp 0 look_ahead: * + - / ) 
pri_exp -> var 0 look_ahead: * + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> var 0 look_ahead: * + - / . ) 

225 : reduce 80
pri_exp -> apply_exp 1 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 1 look_ahead: >= , + - > . != < ; * / <= == 

226 : reduce 85
pri_exp -> var 1 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> var ( arg_list ) 1 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 1 look_ahead: >= , + - > . != < ; * / <= == 

227 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: ; * , + - / 
mul_exp -> mul_exp * pri_exp 2 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

228 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: ; * , + - / 
mul_exp -> mul_exp / pri_exp 2 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

229 : reduce 71
add_exp -> ++ var 2 look_ahead: >= < ; , + - > <= == != 

230 : reduce 72
add_exp -> -- var 2 look_ahead: >= < ; , + - > <= == != 

231 : reduce 73
add_exp -> var ++ 2 look_ahead: >= < ; , + - > <= == != 

232 : reduce 74
add_exp -> var -- 2 look_ahead: >= < ; , + - > <= == != 

233 : 
apply_exp -> var ( arg_list ) 2 look_ahead: ; * , + - / . 
apply_exp -> var ( arg_list ) 2 look_ahead: >= < * > + - / <= . == != 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

234 : reduce 58
bool_exp -> ! cmp_exp 2 look_ahead: || ; , && 

235 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: || ; , && 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

236 : 
pri_exp -> ( add_exp ) 2 look_ahead: ; * , + - / 
add_exp -> add_exp + mul_exp 1 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 1 look_ahead: >= < + - > <= == ) != 
cmp_exp -> add_exp > add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: || && ) 
pri_exp -> ( add_exp ) 2 look_ahead: >= < * > + - / <= == != 

237 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: ; * , + - / . 
apply_exp -> apply_exp . var 2 look_ahead: ; * , + - / . 

238 : 
else_stmt -> { stmt_list } 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

239 : reduce 46
else_stmt -> sg_stmt ; 2 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

240 : 
while_exp -> while ( bool_exp ) { stmt_list } 4 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

241 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 4 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

242 : reduce 1
stmt_list -> stmt_list stmt 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

243 : reduce 3
stmt -> var_def ; 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

244 : reduce 4
stmt -> type_def ; 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

245 : reduce 9
stmt -> sg_stmt ; 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

246 : reduce 10
stmt -> control_flow ; 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

247 : 
func_def -> var ( par_list ) { stmt_list } 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
apply_exp -> var ( arg_list ) 2 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 2 look_ahead: >= < * > + - / <= . == != 
par_list -> par_list , type_exp var 0 look_ahead: , ) 
par_list -> type_exp var 0 look_ahead: , ) 
par_list -> e 0 look_ahead: , ) 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 

248 : 
if_exp -> if_stmt else else_stmt 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
else_stmt -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
else_stmt -> { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
else_stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

249 : 
while_exp -> while ( bool_exp ) { stmt_list } 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

250 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

251 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
init_exp -> var = calc_exp 0 look_ahead: ; 
init_exp -> type_exp var = calc_exp 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 

252 : 
if_stmt -> if ( bool_exp ) { stmt_list } 2 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 2 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

253 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 4 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

254 : 
init_exp -> var = calc_exp 2 look_ahead: ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

255 : 
init_exp -> type_exp var = calc_exp 2 look_ahead: ; 

256 : 
var_assign -> var_assign , var = calc_exp 4 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; , + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; , + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; , && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; , && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; , && 
bool_exp -> cmp_exp 0 look_ahead: || ; , && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * , + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * , + - / 
mul_exp -> pri_exp 0 look_ahead: ; * , + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; , && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; , && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; , && 
pri_exp -> number 0 look_ahead: ; * , + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * , + - / 
pri_exp -> apply_exp 0 look_ahead: ; * , + - / 
pri_exp -> var 0 look_ahead: ; * , + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * , + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * , + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * , + - / . 
apply_exp -> var 0 look_ahead: ; * , + - / . 

257 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: >= < ; * + - > / <= . == != 
apply_exp -> apply_exp . var 3 look_ahead: >= < ; * + - > / <= . == != 

258 : 
if_stmt -> if ( bool_exp ) { stmt_list } 4 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 4 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

259 : 
add_exp -> add_exp + mul_exp 2 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

260 : 
add_exp -> add_exp - mul_exp 2 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

261 : reduce 69
add_exp -> - mul_exp 2 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || ; * && + - / 

262 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

263 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: || ; * && + - / 
pri_exp -> number 0 look_ahead: || ; * && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * && + - / 
pri_exp -> var 0 look_ahead: || ; * && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * && + - / . 
apply_exp -> var 0 look_ahead: || ; * && + - / . 

264 : reduce 71
add_exp -> ++ var 2 look_ahead: || ; && + - 

265 : reduce 72
add_exp -> -- var 2 look_ahead: || ; && + - 

266 : reduce 73
add_exp -> var ++ 2 look_ahead: || ; && + - 

267 : reduce 74
add_exp -> var -- 2 look_ahead: || ; && + - 

268 : 
apply_exp -> var ( arg_list ) 2 look_ahead: || ; * && + - / . 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

269 : 
pri_exp -> ( add_exp ) 2 look_ahead: || ; * && + - / 
add_exp -> add_exp + mul_exp 1 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: + - ) 

270 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 2 look_ahead: || ; * && + - / . 

271 : reduce 56
bool_exp -> bool_exp && cmp_exp 3 look_ahead: || && ) 

272 : reduce 57
bool_exp -> bool_exp || cmp_exp 3 look_ahead: || && ) 

273 : reduce 67
add_exp -> add_exp + mul_exp 3 look_ahead: >= < + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < * + - > / <= == ) != 

274 : reduce 68
add_exp -> add_exp - mul_exp 3 look_ahead: >= < + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < * + - > / <= == ) != 

275 : reduce 61
cmp_exp -> add_exp > add_exp 3 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || && + - ) 

276 : 
add_exp -> - mul_exp 1 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

277 : reduce 70
add_exp -> mul_exp 1 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || * && + - / ) 

278 : 
add_exp -> ++ var 1 look_ahead: || && + - ) 

279 : 
add_exp -> -- var 1 look_ahead: || && + - ) 

280 : reduce 85
add_exp -> var ++ 1 look_ahead: || && + - ) 
add_exp -> var -- 1 look_ahead: || && + - ) 
pri_exp -> var 1 look_ahead: || * && + - / ) 
apply_exp -> var ( arg_list ) 1 look_ahead: || * && + - / . ) 
apply_exp -> var 1 look_ahead: || * && + - / . ) 

281 : reduce 77
mul_exp -> pri_exp 1 look_ahead: || * && + - / ) 

282 : reduce 78
pri_exp -> number 1 look_ahead: || * && + - / ) 

283 : 
pri_exp -> ( add_exp ) 1 look_ahead: || * && + - / ) 
add_exp -> add_exp + mul_exp 0 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: + - ) 
add_exp -> - mul_exp 0 look_ahead: + - ) 
add_exp -> mul_exp 0 look_ahead: + - ) 
add_exp -> ++ var 0 look_ahead: + - ) 
add_exp -> -- var 0 look_ahead: + - ) 
add_exp -> var ++ 0 look_ahead: + - ) 
add_exp -> var -- 0 look_ahead: + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * + - / ) 
mul_exp -> pri_exp 0 look_ahead: * + - / ) 
pri_exp -> number 0 look_ahead: * + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * + - / ) 
pri_exp -> apply_exp 0 look_ahead: * + - / ) 
pri_exp -> var 0 look_ahead: * + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> var 0 look_ahead: * + - / . ) 

284 : reduce 80
pri_exp -> apply_exp 1 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 1 look_ahead: || * && + - / . ) 

285 : reduce 62
cmp_exp -> add_exp >= add_exp 3 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || && + - ) 

286 : reduce 63
cmp_exp -> add_exp < add_exp 3 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || && + - ) 

287 : reduce 64
cmp_exp -> add_exp <= add_exp 3 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || && + - ) 

288 : reduce 65
cmp_exp -> add_exp == add_exp 3 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || && + - ) 

289 : reduce 66
cmp_exp -> add_exp != add_exp 3 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || && + - ) 

290 : reduce 75
mul_exp -> mul_exp * pri_exp 3 look_ahead: >= < * + - > / <= == ) != 

291 : reduce 76
mul_exp -> mul_exp / pri_exp 3 look_ahead: >= < * + - > / <= == ) != 

292 : 
apply_exp -> var ( arg_list ) 3 look_ahead: >= < * + - > / <= . == ) != 
arg_list -> arg_list , var 1 look_ahead: , ) 

293 : reduce 60
cmp_exp -> ( bool_exp ) 3 look_ahead: || && ) 

294 : reduce 79
pri_exp -> ( add_exp ) 3 look_ahead: >= < * + - > / <= == ) != 

295 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 3 look_ahead: >= < * + - > / <= . == ) != 

296 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: ; * + - / . 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

297 : 
func_def -> var ( par_list ) { stmt_list } 5 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

298 : 
par_list -> par_list , type_exp var 3 look_ahead: , ) 

299 : reduce 86
arg_list -> arg_list , var 3 look_ahead: , ) 

300 : reduce 67
add_exp -> add_exp + mul_exp 3 look_ahead: >= < ; , + - > <= == != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < ; * , + - > / <= == != 

301 : reduce 68
add_exp -> add_exp - mul_exp 3 look_ahead: >= < ; , + - > <= == != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < ; * , + - > / <= == != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < ; * , + - > / <= == != 

302 : reduce 61
cmp_exp -> add_exp > add_exp 3 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; , && + - 

303 : 
add_exp -> - mul_exp 1 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

304 : reduce 70
add_exp -> mul_exp 1 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || ; * , && + - / 

305 : 
add_exp -> ++ var 1 look_ahead: || ; , && + - 

306 : 
add_exp -> -- var 1 look_ahead: || ; , && + - 

307 : reduce 85
add_exp -> var ++ 1 look_ahead: || ; , && + - 
add_exp -> var -- 1 look_ahead: || ; , && + - 
pri_exp -> var 1 look_ahead: || ; * , && + - / 
apply_exp -> var ( arg_list ) 1 look_ahead: || ; * , && + - / . 
apply_exp -> var 1 look_ahead: || ; * , && + - / . 

308 : reduce 77
mul_exp -> pri_exp 1 look_ahead: || ; * , && + - / 

309 : reduce 78
pri_exp -> number 1 look_ahead: || ; * , && + - / 

310 : 
pri_exp -> ( add_exp ) 1 look_ahead: || ; * , && + - / 
add_exp -> add_exp + mul_exp 0 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: + - ) 
add_exp -> - mul_exp 0 look_ahead: + - ) 
add_exp -> mul_exp 0 look_ahead: + - ) 
add_exp -> ++ var 0 look_ahead: + - ) 
add_exp -> -- var 0 look_ahead: + - ) 
add_exp -> var ++ 0 look_ahead: + - ) 
add_exp -> var -- 0 look_ahead: + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * + - / ) 
mul_exp -> pri_exp 0 look_ahead: * + - / ) 
pri_exp -> number 0 look_ahead: * + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * + - / ) 
pri_exp -> apply_exp 0 look_ahead: * + - / ) 
pri_exp -> var 0 look_ahead: * + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> var 0 look_ahead: * + - / . ) 

311 : reduce 80
pri_exp -> apply_exp 1 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 1 look_ahead: || ; * , && + - / . 

312 : reduce 62
cmp_exp -> add_exp >= add_exp 3 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; , && + - 

313 : reduce 63
cmp_exp -> add_exp < add_exp 3 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; , && + - 

314 : reduce 64
cmp_exp -> add_exp <= add_exp 3 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; , && + - 

315 : reduce 65
cmp_exp -> add_exp == add_exp 3 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; , && + - 

316 : reduce 66
cmp_exp -> add_exp != add_exp 3 look_ahead: || ; , && 
add_exp -> add_exp + mul_exp 1 look_ahead: || ; , && + - 
add_exp -> add_exp - mul_exp 1 look_ahead: || ; , && + - 

317 : reduce 56
bool_exp -> bool_exp && cmp_exp 3 look_ahead: || ; , && 

318 : reduce 57
bool_exp -> bool_exp || cmp_exp 3 look_ahead: || ; , && 

319 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

320 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> number 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < ; * , + - > / <= == != 
pri_exp -> var 0 look_ahead: >= < ; * , + - > / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . != < ; * / <= == 

321 : 
pri_exp -> ( add_exp ) 2 look_ahead: >= < ; * , + - > / <= == != 
add_exp -> add_exp + mul_exp 1 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: + - ) 

322 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 2 look_ahead: >= , + - > . != < ; * / <= == 

323 : 
apply_exp -> var ( arg_list ) 2 look_ahead: >= , + - > . != < ; * / <= == 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

324 : reduce 75
mul_exp -> mul_exp * pri_exp 3 look_ahead: ; * , + - / 
mul_exp -> mul_exp * pri_exp 3 look_ahead: >= < * > + - / <= == != 

325 : reduce 76
mul_exp -> mul_exp / pri_exp 3 look_ahead: ; * , + - / 
mul_exp -> mul_exp / pri_exp 3 look_ahead: >= < * > + - / <= == != 

326 : 
apply_exp -> var ( arg_list ) 3 look_ahead: ; * , + - / . 
apply_exp -> var ( arg_list ) 3 look_ahead: >= < * > + - / <= . == != 
arg_list -> arg_list , var 1 look_ahead: , ) 

327 : reduce 60
cmp_exp -> ( bool_exp ) 3 look_ahead: || ; , && 

328 : reduce 79
pri_exp -> ( add_exp ) 3 look_ahead: ; * , + - / 
pri_exp -> ( add_exp ) 3 look_ahead: >= < * > + - / <= == != 

329 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: ; * , + - / . 
apply_exp -> apply_exp . var 3 look_ahead: ; * , + - / . 

330 : reduce 45
else_stmt -> { stmt_list } 3 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

331 : 
while_exp -> while ( bool_exp ) { stmt_list } 5 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

332 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 5 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

333 : 
func_def -> var ( par_list ) { stmt_list } 3 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
par_list -> par_list , type_exp var 1 look_ahead: , ) 

334 : reduce 41
if_exp -> if_stmt else else_stmt 3 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

335 : reduce 44
else_stmt -> if_stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

336 : 
else_stmt -> { stmt_list } 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

337 : 
else_stmt -> sg_stmt ; 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

338 : 
while_exp -> while ( bool_exp ) { stmt_list } 3 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

339 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 3 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

340 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 3 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

341 : 
if_stmt -> if ( bool_exp ) { stmt_list } 3 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 3 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

342 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 5 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || ; && 

343 : reduce 50
init_exp -> var = calc_exp 3 look_ahead: ; 

344 : 
init_exp -> type_exp var = calc_exp 3 look_ahead: ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

345 : reduce 19
var_assign -> var_assign , var = calc_exp 5 look_ahead: ; , 

346 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: >= < ; * + - > / <= . == != 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

347 : 
if_stmt -> if ( bool_exp ) { stmt_list } 5 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

348 : 
if_stmt -> if ( bool_exp ) sg_stmt ; 5 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 

349 : reduce 67
add_exp -> add_exp + mul_exp 3 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || ; * && + - / 

350 : reduce 68
add_exp -> add_exp - mul_exp 3 look_ahead: || ; && + - 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || ; * && + - / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || ; * && + - / 

351 : reduce 75
mul_exp -> mul_exp * pri_exp 3 look_ahead: || ; * && + - / 

352 : reduce 76
mul_exp -> mul_exp / pri_exp 3 look_ahead: || ; * && + - / 

353 : 
apply_exp -> var ( arg_list ) 3 look_ahead: || ; * && + - / . 
arg_list -> arg_list , var 1 look_ahead: , ) 

354 : reduce 79
pri_exp -> ( add_exp ) 3 look_ahead: || ; * && + - / 

355 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: || ; * && + - / . 
apply_exp -> apply_exp . var 3 look_ahead: || ; * && + - / . 

356 : 
add_exp -> add_exp + mul_exp 2 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

357 : 
add_exp -> add_exp - mul_exp 2 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

358 : reduce 69
add_exp -> - mul_exp 2 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || * && + - / ) 

359 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

360 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: || * && + - / ) 
pri_exp -> number 0 look_ahead: || * && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * && + - / ) 
pri_exp -> var 0 look_ahead: || * && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * && + - / . ) 
apply_exp -> var 0 look_ahead: || * && + - / . ) 

361 : reduce 71
add_exp -> ++ var 2 look_ahead: || && + - ) 

362 : reduce 72
add_exp -> -- var 2 look_ahead: || && + - ) 

363 : reduce 73
add_exp -> var ++ 2 look_ahead: || && + - ) 

364 : reduce 74
add_exp -> var -- 2 look_ahead: || && + - ) 

365 : 
apply_exp -> var ( arg_list ) 2 look_ahead: || * && + - / . ) 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

366 : 
pri_exp -> ( add_exp ) 2 look_ahead: || * && + - / ) 
add_exp -> add_exp + mul_exp 1 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: + - ) 

367 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 2 look_ahead: || * && + - / . ) 

368 : reduce 84
apply_exp -> var ( arg_list ) 4 look_ahead: >= < * + - > / <= . == ) != 

369 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: >= < * + - > / <= . == ) != 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

370 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: ; * + - / . 
arg_list -> arg_list , var 1 look_ahead: , ) 

371 : 
func_def -> var ( par_list ) { stmt_list } 6 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

372 : reduce 37
par_list -> par_list , type_exp var 4 look_ahead: , ) 

373 : 
add_exp -> add_exp + mul_exp 2 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

374 : 
add_exp -> add_exp - mul_exp 2 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || ; * , && + - / 
mul_exp -> pri_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

375 : reduce 69
add_exp -> - mul_exp 2 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || ; * , && + - / 

376 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

377 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: || ; * , && + - / 
pri_exp -> number 0 look_ahead: || ; * , && + - / 
pri_exp -> ( add_exp ) 0 look_ahead: || ; * , && + - / 
pri_exp -> apply_exp 0 look_ahead: || ; * , && + - / 
pri_exp -> var 0 look_ahead: || ; * , && + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 0 look_ahead: || ; * , && + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: || ; * , && + - / . 
apply_exp -> var 0 look_ahead: || ; * , && + - / . 

378 : reduce 71
add_exp -> ++ var 2 look_ahead: || ; , && + - 

379 : reduce 72
add_exp -> -- var 2 look_ahead: || ; , && + - 

380 : reduce 73
add_exp -> var ++ 2 look_ahead: || ; , && + - 

381 : reduce 74
add_exp -> var -- 2 look_ahead: || ; , && + - 

382 : 
apply_exp -> var ( arg_list ) 2 look_ahead: || ; * , && + - / . 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

383 : 
pri_exp -> ( add_exp ) 2 look_ahead: || ; * , && + - / 
add_exp -> add_exp + mul_exp 1 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: + - ) 

384 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 2 look_ahead: || ; * , && + - / . 

385 : reduce 75
mul_exp -> mul_exp * pri_exp 3 look_ahead: >= < ; * , + - > / <= == != 

386 : reduce 76
mul_exp -> mul_exp / pri_exp 3 look_ahead: >= < ; * , + - > / <= == != 

387 : reduce 79
pri_exp -> ( add_exp ) 3 look_ahead: >= < ; * , + - > / <= == != 

388 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: >= , + - > . != < ; * / <= == 
apply_exp -> apply_exp . var 3 look_ahead: >= , + - > . != < ; * / <= == 

389 : 
apply_exp -> var ( arg_list ) 3 look_ahead: >= , + - > . != < ; * / <= == 
arg_list -> arg_list , var 1 look_ahead: , ) 

390 : reduce 84
apply_exp -> var ( arg_list ) 4 look_ahead: ; * , + - / . 
apply_exp -> var ( arg_list ) 4 look_ahead: >= < * > + - / <= . == != 

391 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: ; * , + - / . 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

392 : 
while_exp -> while ( bool_exp ) { stmt_list } 6 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

393 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 6 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

394 : 
func_def -> var ( par_list ) { stmt_list } 4 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

395 : 
else_stmt -> { stmt_list } 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

396 : reduce 46
else_stmt -> sg_stmt ; 2 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

397 : 
while_exp -> while ( bool_exp ) { stmt_list } 4 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

398 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 4 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

399 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 4 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

400 : 
if_stmt -> if ( bool_exp ) { stmt_list } 4 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 4 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

401 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 6 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
step_exp -> var_assign 0 look_ahead: ) 
step_exp -> calc_exp 0 look_ahead: ) 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ) 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ) 
var_assign -> var = calc_exp 0 look_ahead: , ) 
var_assign -> var += calc_exp 0 look_ahead: , ) 
var_assign -> var -= calc_exp 0 look_ahead: , ) 
var_assign -> var *= calc_exp 0 look_ahead: , ) 
var_assign -> var /= calc_exp 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: ) 
calc_exp -> bool_exp 0 look_ahead: ) 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < + - > <= == ) != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * + - / ) 
mul_exp -> pri_exp 0 look_ahead: * + - / ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
pri_exp -> number 0 look_ahead: * + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * + - / ) 
pri_exp -> apply_exp 0 look_ahead: * + - / ) 
pri_exp -> var 0 look_ahead: * + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> var 0 look_ahead: * + - / . ) 

402 : reduce 51
init_exp -> type_exp var = calc_exp 4 look_ahead: ; 

403 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: >= < ; * + - > / <= . == != 
arg_list -> arg_list , var 1 look_ahead: , ) 

404 : 
if_stmt -> if ( bool_exp ) { stmt_list } 6 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

405 : reduce 43
if_stmt -> if ( bool_exp ) sg_stmt ; 6 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 

406 : reduce 84
apply_exp -> var ( arg_list ) 4 look_ahead: || ; * && + - / . 

407 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: || ; * && + - / . 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

408 : reduce 67
add_exp -> add_exp + mul_exp 3 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || * && + - / ) 

409 : reduce 68
add_exp -> add_exp - mul_exp 3 look_ahead: || && + - ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || * && + - / ) 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || * && + - / ) 

410 : reduce 75
mul_exp -> mul_exp * pri_exp 3 look_ahead: || * && + - / ) 

411 : reduce 76
mul_exp -> mul_exp / pri_exp 3 look_ahead: || * && + - / ) 

412 : 
apply_exp -> var ( arg_list ) 3 look_ahead: || * && + - / . ) 
arg_list -> arg_list , var 1 look_ahead: , ) 

413 : reduce 79
pri_exp -> ( add_exp ) 3 look_ahead: || * && + - / ) 

414 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: || * && + - / . ) 
apply_exp -> apply_exp . var 3 look_ahead: || * && + - / . ) 

415 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: >= < * + - > / <= . == ) != 
arg_list -> arg_list , var 1 look_ahead: , ) 

416 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: ; * + - / . 

417 : reduce 36
func_def -> var ( par_list ) { stmt_list } 7 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

418 : reduce 67
add_exp -> add_exp + mul_exp 3 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || ; * , && + - / 

419 : reduce 68
add_exp -> add_exp - mul_exp 3 look_ahead: || ; , && + - 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || ; * , && + - / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || ; * , && + - / 

420 : reduce 75
mul_exp -> mul_exp * pri_exp 3 look_ahead: || ; * , && + - / 

421 : reduce 76
mul_exp -> mul_exp / pri_exp 3 look_ahead: || ; * , && + - / 

422 : 
apply_exp -> var ( arg_list ) 3 look_ahead: || ; * , && + - / . 
arg_list -> arg_list , var 1 look_ahead: , ) 

423 : reduce 79
pri_exp -> ( add_exp ) 3 look_ahead: || ; * , && + - / 

424 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: || ; * , && + - / . 
apply_exp -> apply_exp . var 3 look_ahead: || ; * , && + - / . 

425 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: >= , + - > . != < ; * / <= == 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

426 : reduce 84
apply_exp -> var ( arg_list ) 4 look_ahead: >= , + - > . != < ; * / <= == 

427 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: ; * , + - / . 
arg_list -> arg_list , var 1 look_ahead: , ) 

428 : reduce 47
while_exp -> while ( bool_exp ) { stmt_list } 7 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

429 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 7 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

430 : 
func_def -> var ( par_list ) { stmt_list } 5 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

431 : reduce 45
else_stmt -> { stmt_list } 3 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

432 : 
while_exp -> while ( bool_exp ) { stmt_list } 5 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

433 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 5 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

434 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 5 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || ; && 

435 : 
if_stmt -> if ( bool_exp ) { stmt_list } 5 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

436 : 
if_stmt -> if ( bool_exp ) sg_stmt ; 5 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 

437 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 7 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

438 : reduce 52
step_exp -> var_assign 1 look_ahead: ) 
var_assign -> var_assign , var = calc_exp 1 look_ahead: , ) 

439 : reduce 53
step_exp -> calc_exp 1 look_ahead: ) 

440 : 
var_assign -> type_exp var = calc_exp 1 look_ahead: , ) 

441 : reduce 85
var_assign -> var = calc_exp 1 look_ahead: , ) 
var_assign -> var += calc_exp 1 look_ahead: , ) 
var_assign -> var -= calc_exp 1 look_ahead: , ) 
var_assign -> var *= calc_exp 1 look_ahead: , ) 
var_assign -> var /= calc_exp 1 look_ahead: , ) 
type_exp -> var 1 look_ahead: var 
add_exp -> var ++ 1 look_ahead: >= < + - > <= == ) != 
add_exp -> var -- 1 look_ahead: >= < + - > <= == ) != 
pri_exp -> var 1 look_ahead: * + - / ) 
apply_exp -> var ( arg_list ) 1 look_ahead: * + - / . ) 
apply_exp -> var 1 look_ahead: * + - / . ) 

442 : reduce 54
calc_exp -> add_exp 1 look_ahead: ) 
add_exp -> add_exp + mul_exp 1 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 1 look_ahead: >= < + - > <= == ) != 
cmp_exp -> add_exp > add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: || && ) 

443 : reduce 55
calc_exp -> bool_exp 1 look_ahead: ) 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

444 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: >= < ; * + - > / <= . == != 

445 : reduce 42
if_stmt -> if ( bool_exp ) { stmt_list } 7 look_ahead: double while eof bool type class -- data interface do ++ else ( for break ! - goto int if var return newtype typedef continue number 

446 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: || ; * && + - / . 
arg_list -> arg_list , var 1 look_ahead: , ) 

447 : reduce 84
apply_exp -> var ( arg_list ) 4 look_ahead: || * && + - / . ) 

448 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: || * && + - / . ) 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

449 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: >= < * + - > / <= . == ) != 

450 : reduce 84
apply_exp -> var ( arg_list ) 4 look_ahead: || ; * , && + - / . 

451 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: || ; * , && + - / . 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

452 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: >= , + - > . != < ; * / <= == 
arg_list -> arg_list , var 1 look_ahead: , ) 

453 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: ; * , + - / . 

454 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 8 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

455 : 
func_def -> var ( par_list ) { stmt_list } 6 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

456 : 
while_exp -> while ( bool_exp ) { stmt_list } 6 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

457 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 6 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

458 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 6 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
step_exp -> var_assign 0 look_ahead: ) 
step_exp -> calc_exp 0 look_ahead: ) 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ) 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ) 
var_assign -> var = calc_exp 0 look_ahead: , ) 
var_assign -> var += calc_exp 0 look_ahead: , ) 
var_assign -> var -= calc_exp 0 look_ahead: , ) 
var_assign -> var *= calc_exp 0 look_ahead: , ) 
var_assign -> var /= calc_exp 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: ) 
calc_exp -> bool_exp 0 look_ahead: ) 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < + - > <= == ) != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * + - / ) 
mul_exp -> pri_exp 0 look_ahead: * + - / ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
pri_exp -> number 0 look_ahead: * + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * + - / ) 
pri_exp -> apply_exp 0 look_ahead: * + - / ) 
pri_exp -> var 0 look_ahead: * + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> var 0 look_ahead: * + - / . ) 

459 : 
if_stmt -> if ( bool_exp ) { stmt_list } 6 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

460 : reduce 43
if_stmt -> if ( bool_exp ) sg_stmt ; 6 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 

461 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 8 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

462 : 
var_assign -> var_assign , var = calc_exp 2 look_ahead: , ) 

463 : 
var_assign -> type_exp var = calc_exp 2 look_ahead: , ) 

464 : 
var_assign -> var = calc_exp 2 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < , + - > <= == ) != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || , && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || , && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || , && ) 
bool_exp -> cmp_exp 0 look_ahead: || , && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> pri_exp 0 look_ahead: * , + - / ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || , && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || , && ) 
pri_exp -> number 0 look_ahead: * , + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * , + - / ) 
pri_exp -> apply_exp 0 look_ahead: * , + - / ) 
pri_exp -> var 0 look_ahead: * , + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * , + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> var 0 look_ahead: * , + - / . ) 

465 : 
var_assign -> var += calc_exp 2 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < , + - > <= == ) != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || , && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || , && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || , && ) 
bool_exp -> cmp_exp 0 look_ahead: || , && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> pri_exp 0 look_ahead: * , + - / ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || , && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || , && ) 
pri_exp -> number 0 look_ahead: * , + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * , + - / ) 
pri_exp -> apply_exp 0 look_ahead: * , + - / ) 
pri_exp -> var 0 look_ahead: * , + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * , + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> var 0 look_ahead: * , + - / . ) 

466 : 
var_assign -> var -= calc_exp 2 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < , + - > <= == ) != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || , && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || , && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || , && ) 
bool_exp -> cmp_exp 0 look_ahead: || , && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> pri_exp 0 look_ahead: * , + - / ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || , && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || , && ) 
pri_exp -> number 0 look_ahead: * , + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * , + - / ) 
pri_exp -> apply_exp 0 look_ahead: * , + - / ) 
pri_exp -> var 0 look_ahead: * , + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * , + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> var 0 look_ahead: * , + - / . ) 

467 : 
var_assign -> var *= calc_exp 2 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < , + - > <= == ) != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || , && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || , && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || , && ) 
bool_exp -> cmp_exp 0 look_ahead: || , && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> pri_exp 0 look_ahead: * , + - / ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || , && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || , && ) 
pri_exp -> number 0 look_ahead: * , + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * , + - / ) 
pri_exp -> apply_exp 0 look_ahead: * , + - / ) 
pri_exp -> var 0 look_ahead: * , + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * , + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> var 0 look_ahead: * , + - / . ) 

468 : 
var_assign -> var /= calc_exp 2 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < , + - > <= == ) != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || , && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || , && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || , && ) 
bool_exp -> cmp_exp 0 look_ahead: || , && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> pri_exp 0 look_ahead: * , + - / ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || , && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || , && ) 
pri_exp -> number 0 look_ahead: * , + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * , + - / ) 
pri_exp -> apply_exp 0 look_ahead: * , + - / ) 
pri_exp -> var 0 look_ahead: * , + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * , + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> var 0 look_ahead: * , + - / . ) 

469 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: || ; * && + - / . 

470 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: || * && + - / . ) 
arg_list -> arg_list , var 1 look_ahead: , ) 

471 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: || ; * , && + - / . 
arg_list -> arg_list , var 1 look_ahead: , ) 

472 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: >= , + - > . != < ; * / <= == 

473 : reduce 48
while_exp -> do { stmt_list } while ( bool_exp ) ; 9 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

474 : reduce 36
func_def -> var ( par_list ) { stmt_list } 7 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

475 : reduce 47
while_exp -> while ( bool_exp ) { stmt_list } 7 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

476 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 7 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

477 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 7 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

478 : reduce 42
if_stmt -> if ( bool_exp ) { stmt_list } 7 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 

479 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 9 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

480 : 
var_assign -> var_assign , var = calc_exp 3 look_ahead: , ) 

481 : 
var_assign -> type_exp var = calc_exp 3 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < , + - > <= == ) != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || , && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || , && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || , && ) 
bool_exp -> cmp_exp 0 look_ahead: || , && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> pri_exp 0 look_ahead: * , + - / ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || , && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || , && ) 
pri_exp -> number 0 look_ahead: * , + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * , + - / ) 
pri_exp -> apply_exp 0 look_ahead: * , + - / ) 
pri_exp -> var 0 look_ahead: * , + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * , + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> var 0 look_ahead: * , + - / . ) 

482 : reduce 21
var_assign -> var = calc_exp 3 look_ahead: , ) 

483 : reduce 54
calc_exp -> add_exp 1 look_ahead: , ) 
add_exp -> add_exp + mul_exp 1 look_ahead: >= < , + - > <= == ) != 
add_exp -> add_exp - mul_exp 1 look_ahead: >= < , + - > <= == ) != 
cmp_exp -> add_exp > add_exp 1 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: || , && ) 

484 : reduce 55
calc_exp -> bool_exp 1 look_ahead: , ) 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || , && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || , && ) 

485 : 
add_exp -> - mul_exp 1 look_ahead: >= < , + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * , + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * , + - > / <= == ) != 
mul_exp -> pri_exp 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * , + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . ) != < * / <= == 

486 : reduce 70
add_exp -> mul_exp 1 look_ahead: >= < , + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: * , + - / ) 
mul_exp -> mul_exp / pri_exp 1 look_ahead: * , + - / ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < * + - > / <= == ) != 

487 : 
add_exp -> ++ var 1 look_ahead: >= < , + - > <= == ) != 

488 : 
add_exp -> -- var 1 look_ahead: >= < , + - > <= == ) != 

489 : reduce 85
add_exp -> var ++ 1 look_ahead: >= < , + - > <= == ) != 
add_exp -> var -- 1 look_ahead: >= < , + - > <= == ) != 
pri_exp -> var 1 look_ahead: * , + - / ) 
apply_exp -> var ( arg_list ) 1 look_ahead: * , + - / . ) 
apply_exp -> var 1 look_ahead: * , + - / . ) 
pri_exp -> var 1 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> var ( arg_list ) 1 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 1 look_ahead: >= < * + - > / <= . == ) != 

490 : 
bool_exp -> ! cmp_exp 1 look_ahead: || , && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || , && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

491 : reduce 59
bool_exp -> cmp_exp 1 look_ahead: || , && ) 

492 : reduce 77
mul_exp -> pri_exp 1 look_ahead: * , + - / ) 

493 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: || , && ) 
pri_exp -> ( add_exp ) 1 look_ahead: * , + - / ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || && ) 
bool_exp -> cmp_exp 0 look_ahead: || && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < + - > <= == ) != 
cmp_exp -> ( bool_exp ) 0 look_ahead: || && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
mul_exp -> pri_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * + - > / <= . == ) != 
apply_exp -> var 0 look_ahead: >= < * + - > / <= . == ) != 
pri_exp -> ( add_exp ) 1 look_ahead: >= < * > + - / <= == != 

494 : reduce 78
pri_exp -> number 1 look_ahead: * , + - / ) 

495 : reduce 80
pri_exp -> apply_exp 1 look_ahead: * , + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 1 look_ahead: * , + - / . ) 

496 : reduce 22
var_assign -> var += calc_exp 3 look_ahead: , ) 

497 : reduce 23
var_assign -> var -= calc_exp 3 look_ahead: , ) 

498 : reduce 24
var_assign -> var *= calc_exp 3 look_ahead: , ) 

499 : reduce 25
var_assign -> var /= calc_exp 3 look_ahead: , ) 

500 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: || * && + - / . ) 

501 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: || ; * , && + - / . 

502 : 
while_exp -> do { stmt_list } while ( bool_exp ) ; 8 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

503 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 8 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

504 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 10 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

505 : 
var_assign -> var_assign , var = calc_exp 4 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> - mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> mul_exp 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> ++ var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> -- var 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var ++ 0 look_ahead: >= < , + - > <= == ) != 
add_exp -> var -- 0 look_ahead: >= < , + - > <= == ) != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || , && ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || , && ) 
bool_exp -> ! cmp_exp 0 look_ahead: || , && ) 
bool_exp -> cmp_exp 0 look_ahead: || , && ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * , + - / ) 
mul_exp -> pri_exp 0 look_ahead: * , + - / ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || , && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || , && ) 
pri_exp -> number 0 look_ahead: * , + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * , + - / ) 
pri_exp -> apply_exp 0 look_ahead: * , + - / ) 
pri_exp -> var 0 look_ahead: * , + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * , + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> var 0 look_ahead: * , + - / . ) 

506 : reduce 20
var_assign -> type_exp var = calc_exp 4 look_ahead: , ) 

507 : 
add_exp -> add_exp + mul_exp 2 look_ahead: >= < , + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * , + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * , + - > / <= == ) != 
mul_exp -> pri_exp 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * , + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . ) != < * / <= == 

508 : 
add_exp -> add_exp - mul_exp 2 look_ahead: >= < , + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * , + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * , + - > / <= == ) != 
mul_exp -> pri_exp 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * , + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . ) != < * / <= == 

509 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> mul_exp 0 look_ahead: || , && + - ) 
add_exp -> ++ var 0 look_ahead: || , && + - ) 
add_exp -> -- var 0 look_ahead: || , && + - ) 
add_exp -> var ++ 0 look_ahead: || , && + - ) 
add_exp -> var -- 0 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

510 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> mul_exp 0 look_ahead: || , && + - ) 
add_exp -> ++ var 0 look_ahead: || , && + - ) 
add_exp -> -- var 0 look_ahead: || , && + - ) 
add_exp -> var ++ 0 look_ahead: || , && + - ) 
add_exp -> var -- 0 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

511 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> mul_exp 0 look_ahead: || , && + - ) 
add_exp -> ++ var 0 look_ahead: || , && + - ) 
add_exp -> -- var 0 look_ahead: || , && + - ) 
add_exp -> var ++ 0 look_ahead: || , && + - ) 
add_exp -> var -- 0 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

512 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> mul_exp 0 look_ahead: || , && + - ) 
add_exp -> ++ var 0 look_ahead: || , && + - ) 
add_exp -> -- var 0 look_ahead: || , && + - ) 
add_exp -> var ++ 0 look_ahead: || , && + - ) 
add_exp -> var -- 0 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

513 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> mul_exp 0 look_ahead: || , && + - ) 
add_exp -> ++ var 0 look_ahead: || , && + - ) 
add_exp -> -- var 0 look_ahead: || , && + - ) 
add_exp -> var ++ 0 look_ahead: || , && + - ) 
add_exp -> var -- 0 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

514 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> - mul_exp 0 look_ahead: || , && + - ) 
add_exp -> mul_exp 0 look_ahead: || , && + - ) 
add_exp -> ++ var 0 look_ahead: || , && + - ) 
add_exp -> -- var 0 look_ahead: || , && + - ) 
add_exp -> var ++ 0 look_ahead: || , && + - ) 
add_exp -> var -- 0 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

515 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: || , && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || , && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

516 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: || , && ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: || , && ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: || , && ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> mul_exp 0 look_ahead: >= < > + - <= == != 
add_exp -> ++ var 0 look_ahead: >= < > + - <= == != 
add_exp -> -- var 0 look_ahead: >= < > + - <= == != 
add_exp -> var ++ 0 look_ahead: >= < > + - <= == != 
add_exp -> var -- 0 look_ahead: >= < > + - <= == != 
mul_exp -> mul_exp * pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> mul_exp / pri_exp 0 look_ahead: >= < * > + - / <= == != 
mul_exp -> pri_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> number 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> apply_exp 0 look_ahead: >= < * > + - / <= == != 
pri_exp -> var 0 look_ahead: >= < * > + - / <= == != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> apply_exp . var 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var ( arg_list ) 0 look_ahead: >= < * > + - / <= . == != 
apply_exp -> var 0 look_ahead: >= < * > + - / <= . == != 

517 : reduce 69
add_exp -> - mul_exp 2 look_ahead: >= < , + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < * , + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < * , + - > / <= == ) != 

518 : reduce 77
mul_exp -> pri_exp 1 look_ahead: >= < * , + - > / <= == ) != 

519 : reduce 78
pri_exp -> number 1 look_ahead: >= < * , + - > / <= == ) != 

520 : 
pri_exp -> ( add_exp ) 1 look_ahead: >= < * , + - > / <= == ) != 
add_exp -> add_exp + mul_exp 0 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: + - ) 
add_exp -> - mul_exp 0 look_ahead: + - ) 
add_exp -> mul_exp 0 look_ahead: + - ) 
add_exp -> ++ var 0 look_ahead: + - ) 
add_exp -> -- var 0 look_ahead: + - ) 
add_exp -> var ++ 0 look_ahead: + - ) 
add_exp -> var -- 0 look_ahead: + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * + - / ) 
mul_exp -> pri_exp 0 look_ahead: * + - / ) 
pri_exp -> number 0 look_ahead: * + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * + - / ) 
pri_exp -> apply_exp 0 look_ahead: * + - / ) 
pri_exp -> var 0 look_ahead: * + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> var 0 look_ahead: * + - / . ) 

521 : reduce 80
pri_exp -> apply_exp 1 look_ahead: >= < * , + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> apply_exp . var 1 look_ahead: >= , + - > . ) != < * / <= == 

522 : reduce 85
pri_exp -> var 1 look_ahead: >= < * , + - > / <= == ) != 
apply_exp -> var ( arg_list ) 1 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var 1 look_ahead: >= , + - > . ) != < * / <= == 

523 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: * , + - / ) 
pri_exp -> number 0 look_ahead: * , + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * , + - / ) 
pri_exp -> apply_exp 0 look_ahead: * , + - / ) 
pri_exp -> var 0 look_ahead: * , + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * , + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> var 0 look_ahead: * , + - / . ) 

524 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: * , + - / ) 
pri_exp -> number 0 look_ahead: * , + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * , + - / ) 
pri_exp -> apply_exp 0 look_ahead: * , + - / ) 
pri_exp -> var 0 look_ahead: * , + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * , + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * , + - / . ) 
apply_exp -> var 0 look_ahead: * , + - / . ) 

525 : reduce 71
add_exp -> ++ var 2 look_ahead: >= < , + - > <= == ) != 

526 : reduce 72
add_exp -> -- var 2 look_ahead: >= < , + - > <= == ) != 

527 : reduce 73
add_exp -> var ++ 2 look_ahead: >= < , + - > <= == ) != 

528 : reduce 74
add_exp -> var -- 2 look_ahead: >= < , + - > <= == ) != 

529 : 
apply_exp -> var ( arg_list ) 2 look_ahead: * , + - / . ) 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

530 : reduce 58
bool_exp -> ! cmp_exp 2 look_ahead: || , && ) 

531 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: || , && ) 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: || && ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: || && ) 

532 : 
pri_exp -> ( add_exp ) 2 look_ahead: * , + - / ) 
add_exp -> add_exp + mul_exp 1 look_ahead: >= < + - > <= == ) != 
add_exp -> add_exp - mul_exp 1 look_ahead: >= < + - > <= == ) != 
cmp_exp -> add_exp > add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: || && ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: || && ) 
pri_exp -> ( add_exp ) 2 look_ahead: >= < * > + - / <= == != 

533 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 2 look_ahead: * , + - / . ) 

534 : reduce 48
while_exp -> do { stmt_list } while ( bool_exp ) ; 9 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

535 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 9 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

536 : reduce 49
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 11 look_ahead: double while eof bool type class -- data interface do ++ ( for break ! - goto int if var return newtype typedef continue number 

537 : reduce 19
var_assign -> var_assign , var = calc_exp 5 look_ahead: , ) 

538 : reduce 67
add_exp -> add_exp + mul_exp 3 look_ahead: >= < , + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < * , + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < * , + - > / <= == ) != 

539 : reduce 68
add_exp -> add_exp - mul_exp 3 look_ahead: >= < , + - > <= == ) != 
mul_exp -> mul_exp * pri_exp 1 look_ahead: >= < * , + - > / <= == ) != 
mul_exp -> mul_exp / pri_exp 1 look_ahead: >= < * , + - > / <= == ) != 

540 : reduce 61
cmp_exp -> add_exp > add_exp 3 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || , && + - ) 

541 : 
add_exp -> - mul_exp 1 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

542 : reduce 70
add_exp -> mul_exp 1 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || * , && + - / ) 

543 : 
add_exp -> ++ var 1 look_ahead: || , && + - ) 

544 : 
add_exp -> -- var 1 look_ahead: || , && + - ) 

545 : reduce 85
add_exp -> var ++ 1 look_ahead: || , && + - ) 
add_exp -> var -- 1 look_ahead: || , && + - ) 
pri_exp -> var 1 look_ahead: || * , && + - / ) 
apply_exp -> var ( arg_list ) 1 look_ahead: || * , && + - / . ) 
apply_exp -> var 1 look_ahead: || * , && + - / . ) 

546 : reduce 77
mul_exp -> pri_exp 1 look_ahead: || * , && + - / ) 

547 : reduce 78
pri_exp -> number 1 look_ahead: || * , && + - / ) 

548 : 
pri_exp -> ( add_exp ) 1 look_ahead: || * , && + - / ) 
add_exp -> add_exp + mul_exp 0 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 0 look_ahead: + - ) 
add_exp -> - mul_exp 0 look_ahead: + - ) 
add_exp -> mul_exp 0 look_ahead: + - ) 
add_exp -> ++ var 0 look_ahead: + - ) 
add_exp -> -- var 0 look_ahead: + - ) 
add_exp -> var ++ 0 look_ahead: + - ) 
add_exp -> var -- 0 look_ahead: + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: * + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: * + - / ) 
mul_exp -> pri_exp 0 look_ahead: * + - / ) 
pri_exp -> number 0 look_ahead: * + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: * + - / ) 
pri_exp -> apply_exp 0 look_ahead: * + - / ) 
pri_exp -> var 0 look_ahead: * + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: * + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: * + - / . ) 
apply_exp -> var 0 look_ahead: * + - / . ) 

549 : reduce 80
pri_exp -> apply_exp 1 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 1 look_ahead: || * , && + - / . ) 

550 : reduce 62
cmp_exp -> add_exp >= add_exp 3 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || , && + - ) 

551 : reduce 63
cmp_exp -> add_exp < add_exp 3 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || , && + - ) 

552 : reduce 64
cmp_exp -> add_exp <= add_exp 3 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || , && + - ) 

553 : reduce 65
cmp_exp -> add_exp == add_exp 3 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || , && + - ) 

554 : reduce 66
cmp_exp -> add_exp != add_exp 3 look_ahead: || , && ) 
add_exp -> add_exp + mul_exp 1 look_ahead: || , && + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: || , && + - ) 

555 : reduce 56
bool_exp -> bool_exp && cmp_exp 3 look_ahead: || , && ) 

556 : reduce 57
bool_exp -> bool_exp || cmp_exp 3 look_ahead: || , && ) 

557 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * , + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . ) != < * / <= == 

558 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> number 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> ( add_exp ) 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> apply_exp 0 look_ahead: >= < * , + - > / <= == ) != 
pri_exp -> var 0 look_ahead: >= < * , + - > / <= == ) != 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> apply_exp . var 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> var 0 look_ahead: >= , + - > . ) != < * / <= == 

559 : 
pri_exp -> ( add_exp ) 2 look_ahead: >= < * , + - > / <= == ) != 
add_exp -> add_exp + mul_exp 1 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: + - ) 

560 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> apply_exp . var 2 look_ahead: >= , + - > . ) != < * / <= == 

561 : 
apply_exp -> var ( arg_list ) 2 look_ahead: >= , + - > . ) != < * / <= == 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

562 : reduce 75
mul_exp -> mul_exp * pri_exp 3 look_ahead: * , + - / ) 

563 : reduce 76
mul_exp -> mul_exp / pri_exp 3 look_ahead: * , + - / ) 

564 : 
apply_exp -> var ( arg_list ) 3 look_ahead: * , + - / . ) 
arg_list -> arg_list , var 1 look_ahead: , ) 

565 : reduce 60
cmp_exp -> ( bool_exp ) 3 look_ahead: || , && ) 

566 : reduce 79
pri_exp -> ( add_exp ) 3 look_ahead: * , + - / ) 
pri_exp -> ( add_exp ) 3 look_ahead: >= < * > + - / <= == != 

567 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: * , + - / . ) 
apply_exp -> apply_exp . var 3 look_ahead: * , + - / . ) 

568 : 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 10 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt_list -> stmt_list stmt 1 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> var_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> type_def ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> func_def 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> if_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> while_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> for_exp 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
stmt -> control_flow ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
type_def -> class var 0 look_ahead: ; 
type_def -> data var 0 look_ahead: ; 
type_def -> interface var 0 look_ahead: ; 
type_def -> type var 0 look_ahead: ; 
type_def -> newtype var 0 look_ahead: ; 
type_def -> typedef var 0 look_ahead: ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
if_exp -> if_stmt else else_stmt 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
while_exp -> do { stmt_list } while ( bool_exp ) ; 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
control_flow -> goto var 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: double while bool type class -- data interface do ++ else ( for break ! - goto int if var return } newtype typedef continue number 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> add_exp - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> - mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> mul_exp 0 look_ahead: >= < ; + - > <= == != 
add_exp -> ++ var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> -- var 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var ++ 0 look_ahead: >= < ; + - > <= == != 
add_exp -> var -- 0 look_ahead: >= < ; + - > <= == != 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: || ; && 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: || ; && 
bool_exp -> ! cmp_exp 0 look_ahead: || ; && 
bool_exp -> cmp_exp 0 look_ahead: || ; && 
mul_exp -> mul_exp * pri_exp 0 look_ahead: ; * + - / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: ; * + - / 
mul_exp -> pri_exp 0 look_ahead: ; * + - / 
cmp_exp -> ( bool_exp ) 0 look_ahead: || ; && 
cmp_exp -> add_exp > add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp >= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp < add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp <= add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp == add_exp 0 look_ahead: || ; && 
cmp_exp -> add_exp != add_exp 0 look_ahead: || ; && 
pri_exp -> number 0 look_ahead: ; * + - / 
pri_exp -> ( add_exp ) 0 look_ahead: ; * + - / 
pri_exp -> apply_exp 0 look_ahead: ; * + - / 
pri_exp -> var 0 look_ahead: ; * + - / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> apply_exp . var 0 look_ahead: ; * + - / . 
apply_exp -> var ( arg_list ) 0 look_ahead: ; * + - / . 
apply_exp -> var 0 look_ahead: ; * + - / . 

569 : 
add_exp -> add_exp + mul_exp 2 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

570 : 
add_exp -> add_exp - mul_exp 2 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 0 look_ahead: || * , && + - / ) 
mul_exp -> pri_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

571 : reduce 69
add_exp -> - mul_exp 2 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || * , && + - / ) 

572 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

573 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: || * , && + - / ) 
pri_exp -> number 0 look_ahead: || * , && + - / ) 
pri_exp -> ( add_exp ) 0 look_ahead: || * , && + - / ) 
pri_exp -> apply_exp 0 look_ahead: || * , && + - / ) 
pri_exp -> var 0 look_ahead: || * , && + - / ) 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 0 look_ahead: || * , && + - / . ) 
apply_exp -> var ( arg_list ) 0 look_ahead: || * , && + - / . ) 
apply_exp -> var 0 look_ahead: || * , && + - / . ) 

574 : reduce 71
add_exp -> ++ var 2 look_ahead: || , && + - ) 

575 : reduce 72
add_exp -> -- var 2 look_ahead: || , && + - ) 

576 : reduce 73
add_exp -> var ++ 2 look_ahead: || , && + - ) 

577 : reduce 74
add_exp -> var -- 2 look_ahead: || , && + - ) 

578 : 
apply_exp -> var ( arg_list ) 2 look_ahead: || * , && + - / . ) 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

579 : 
pri_exp -> ( add_exp ) 2 look_ahead: || * , && + - / ) 
add_exp -> add_exp + mul_exp 1 look_ahead: + - ) 
add_exp -> add_exp - mul_exp 1 look_ahead: + - ) 

580 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 2 look_ahead: || * , && + - / . ) 

581 : reduce 75
mul_exp -> mul_exp * pri_exp 3 look_ahead: >= < * , + - > / <= == ) != 

582 : reduce 76
mul_exp -> mul_exp / pri_exp 3 look_ahead: >= < * , + - > / <= == ) != 

583 : reduce 79
pri_exp -> ( add_exp ) 3 look_ahead: >= < * , + - > / <= == ) != 

584 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: >= , + - > . ) != < * / <= == 
apply_exp -> apply_exp . var 3 look_ahead: >= , + - > . ) != < * / <= == 

585 : 
apply_exp -> var ( arg_list ) 3 look_ahead: >= , + - > . ) != < * / <= == 
arg_list -> arg_list , var 1 look_ahead: , ) 

586 : reduce 84
apply_exp -> var ( arg_list ) 4 look_ahead: * , + - / . ) 

587 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: * , + - / . ) 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

588 : reduce 49
for_exp -> for ( init_exp ; bool_exp ; step_exp ) { stmt_list } 11 look_ahead: double while bool type class -- data interface do ++ ( for break ! - goto int if var return } newtype typedef continue number 

589 : reduce 67
add_exp -> add_exp + mul_exp 3 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || * , && + - / ) 

590 : reduce 68
add_exp -> add_exp - mul_exp 3 look_ahead: || , && + - ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: || * , && + - / ) 
mul_exp -> mul_exp / pri_exp 1 look_ahead: || * , && + - / ) 

591 : reduce 75
mul_exp -> mul_exp * pri_exp 3 look_ahead: || * , && + - / ) 

592 : reduce 76
mul_exp -> mul_exp / pri_exp 3 look_ahead: || * , && + - / ) 

593 : 
apply_exp -> var ( arg_list ) 3 look_ahead: || * , && + - / . ) 
arg_list -> arg_list , var 1 look_ahead: , ) 

594 : reduce 79
pri_exp -> ( add_exp ) 3 look_ahead: || * , && + - / ) 

595 : reduce 83
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: || * , && + - / . ) 
apply_exp -> apply_exp . var 3 look_ahead: || * , && + - / . ) 

596 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: >= , + - > . ) != < * / <= == 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

597 : reduce 84
apply_exp -> var ( arg_list ) 4 look_ahead: >= , + - > . ) != < * / <= == 

598 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: * , + - / . ) 
arg_list -> arg_list , var 1 look_ahead: , ) 

599 : reduce 84
apply_exp -> var ( arg_list ) 4 look_ahead: || * , && + - / . ) 

600 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: || * , && + - / . ) 
arg_list -> arg_list , var 0 look_ahead: , ) 
arg_list -> var 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 

601 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: >= , + - > . ) != < * / <= == 
arg_list -> arg_list , var 1 look_ahead: , ) 

602 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: * , + - / . ) 

603 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: || * , && + - / . ) 
arg_list -> arg_list , var 1 look_ahead: , ) 

604 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: >= , + - > . ) != < * / <= == 

605 : reduce 82
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: || * , && + - / . ) 

//end
