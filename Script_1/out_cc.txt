//first set

Goal :
var bool break if ++ str - -- char ! number while ( continue return double int string 
if_exp :
if 
type_exp :
var bool double char int string 
sg_stmt :
var bool break ++ str - -- char ! number ( continue return double int string 
if_stmt :
if 
arg_list :
var e , 
stmt :
var bool break if ++ str - -- char ! number while ( continue return double int string 
str_exp :
var ++ str - -- number ( 
calc_exp :
var ++ str - -- ! number ( 
control_flow :
break continue return 
cmp_exp :
var ++ - -- number ( 
type_def :

apply_exp :
var 
var_assign :
var bool double char int string 
bool_exp :
var ++ - -- ! number ( 
else_stmt :
var bool break if ++ str - -- char ! number ( continue return { double int string 
pri_exp :
var number ( 
func_def :
var 
while_exp :
while 
var_def :
var bool double char int string 
stmt_list :
var bool break if ++ str - -- char ! number while ( continue return double int string 
add_exp :
var ++ - -- number ( 
par_list :
var bool e double char , int string 
mul_exp :
var number ( 

//all CCs

0 : 
Goal -> stmt_list 0 look_ahead: eof 
stmt_list -> stmt_list stmt 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt_list -> stmt 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt -> var_def ; 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt -> func_def 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt -> if_exp 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt -> while_exp 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
if_exp -> if_stmt 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

1 : reduce 0
Goal -> stmt_list 1 look_ahead: eof 
stmt_list -> stmt_list stmt 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt -> var_def ; 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt -> func_def 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt -> if_exp 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt -> while_exp 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
if_exp -> if_stmt 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

2 : reduce 2
stmt_list -> stmt 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

3 : 
stmt -> var_def ; 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
var_def -> var_def , var 1 look_ahead: ; , 

4 : reduce 4
stmt -> func_def 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

5 : reduce 5
stmt -> if_exp 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

6 : reduce 6
stmt -> while_exp 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

7 : 
stmt -> sg_stmt ; 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

8 : 
var_def -> type_exp var 1 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 1 look_ahead: ; , 

9 : reduce 76
func_def -> var ( par_list ) { stmt_list } 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
type_exp -> var 1 look_ahead: var 
var_assign -> var = calc_exp 1 look_ahead: ; , 
var_assign -> var += calc_exp 1 look_ahead: ; , 
var_assign -> var -= calc_exp 1 look_ahead: ; , 
var_assign -> var *= calc_exp 1 look_ahead: ; , 
var_assign -> var /= calc_exp 1 look_ahead: ; , 
add_exp -> var ++ 1 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 1 look_ahead: + > >= ; - < != <= == 
pri_exp -> var 1 look_ahead: + * / ; - 
apply_exp -> var ( arg_list ) 1 look_ahead: + * / . ; - 
apply_exp -> var 1 look_ahead: + * / . ; - 
pri_exp -> var 1 look_ahead: + > >= * / ; - < != <= == 
apply_exp -> var ( arg_list ) 1 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var 1 look_ahead: + > >= * / . ; - < != <= == 

10 : reduce 33
if_exp -> if_stmt 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
if_exp -> if_stmt else else_stmt 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

11 : 
while_exp -> while ( bool_exp ) { stmt_list } 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

12 : reduce 8
sg_stmt -> var_assign 1 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 1 look_ahead: ; , 

13 : reduce 9
sg_stmt -> calc_exp 1 look_ahead: ; 

14 : reduce 10
sg_stmt -> control_flow 1 look_ahead: ; 

15 : reduce 23
type_exp -> int 1 look_ahead: var 

16 : reduce 24
type_exp -> double 1 look_ahead: var 

17 : reduce 25
type_exp -> bool 1 look_ahead: var 

18 : reduce 26
type_exp -> string 1 look_ahead: var 

19 : reduce 27
type_exp -> char 1 look_ahead: var 

20 : 
if_stmt -> if ( bool_exp ) { stmt_list } 1 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 1 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 

21 : reduce 41
calc_exp -> add_exp 1 look_ahead: ; 
add_exp -> add_exp + mul_exp 1 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 1 look_ahead: + > >= ; - < != <= == 
str_exp -> add_exp + str_exp 1 look_ahead: + ; 
cmp_exp -> add_exp > add_exp 1 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 1 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 1 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 1 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 1 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 1 look_ahead: ; && || 

22 : reduce 42
calc_exp -> bool_exp 1 look_ahead: ; 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: ; && || 

23 : reduce 43
calc_exp -> str_exp 1 look_ahead: ; 
str_exp -> str_exp + add_exp 1 look_ahead: + ; 

24 : 
control_flow -> return calc_exp 1 look_ahead: ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ; - < != <= == 

25 : reduce 12
control_flow -> continue 1 look_ahead: ; 

26 : reduce 13
control_flow -> break 1 look_ahead: ; 

27 : 
add_exp -> - mul_exp 1 look_ahead: + > >= ; - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ; - < != <= == 

28 : reduce 61
add_exp -> mul_exp 1 look_ahead: + > >= ; - < != <= == 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ; - 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ; - < != <= == 

29 : 
add_exp -> ++ var 1 look_ahead: + > >= ; - < != <= == 

30 : 
add_exp -> -- var 1 look_ahead: + > >= ; - < != <= == 

31 : 
bool_exp -> ! cmp_exp 1 look_ahead: ; && || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

32 : reduce 50
bool_exp -> cmp_exp 1 look_ahead: ; && || 

33 : reduce 46
str_exp -> str 1 look_ahead: + ; 

34 : reduce 68
mul_exp -> pri_exp 1 look_ahead: + * / ; - 

35 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: ; && || 
pri_exp -> ( add_exp ) 1 look_ahead: + * / ; - 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ) && || 
bool_exp -> ! cmp_exp 0 look_ahead: ) && || 
bool_exp -> cmp_exp 0 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ) - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ) - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ) - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ) - < != <= == 
cmp_exp -> ( bool_exp ) 0 look_ahead: ) && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ) && || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ) - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ) - < != <= == 
pri_exp -> ( add_exp ) 1 look_ahead: + > >= * / ; - < != <= == 

36 : reduce 69
pri_exp -> number 1 look_ahead: + * / ; - 

37 : reduce 71
pri_exp -> apply_exp 1 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 1 look_ahead: + * / . ; - 

38 : reduce 1
stmt_list -> stmt_list stmt 2 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

39 : reduce 3
stmt -> var_def ; 2 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

40 : 
var_def -> var_def , var 2 look_ahead: ; , 

41 : reduce 7
stmt -> sg_stmt ; 2 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

42 : reduce 15
var_def -> type_exp var 2 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 2 look_ahead: ; , 

43 : 
func_def -> var ( par_list ) { stmt_list } 2 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
apply_exp -> var ( arg_list ) 2 look_ahead: + * / . ; - 
par_list -> par_list , type_exp var 0 look_ahead: ) , 
par_list -> type_exp var 0 look_ahead: ) , 
par_list -> e 0 look_ahead: ) , 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 

44 : 
var_assign -> var = calc_exp 2 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
calc_exp -> str_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == , 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && , || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && , || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && , || 
bool_exp -> cmp_exp 0 look_ahead: ; && , || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; , 
str_exp -> add_exp + str_exp 0 look_ahead: + ; , 
str_exp -> str 0 look_ahead: + ; , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && , || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && , || 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 0 look_ahead: + * - < > >= / . ; != <= == , 

45 : 
var_assign -> var += calc_exp 2 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
calc_exp -> str_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == , 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && , || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && , || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && , || 
bool_exp -> cmp_exp 0 look_ahead: ; && , || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; , 
str_exp -> add_exp + str_exp 0 look_ahead: + ; , 
str_exp -> str 0 look_ahead: + ; , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && , || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && , || 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 0 look_ahead: + * - < > >= / . ; != <= == , 

46 : 
var_assign -> var -= calc_exp 2 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
calc_exp -> str_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == , 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && , || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && , || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && , || 
bool_exp -> cmp_exp 0 look_ahead: ; && , || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; , 
str_exp -> add_exp + str_exp 0 look_ahead: + ; , 
str_exp -> str 0 look_ahead: + ; , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && , || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && , || 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 0 look_ahead: + * - < > >= / . ; != <= == , 

47 : 
var_assign -> var *= calc_exp 2 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
calc_exp -> str_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == , 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && , || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && , || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && , || 
bool_exp -> cmp_exp 0 look_ahead: ; && , || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; , 
str_exp -> add_exp + str_exp 0 look_ahead: + ; , 
str_exp -> str 0 look_ahead: + ; , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && , || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && , || 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 0 look_ahead: + * - < > >= / . ; != <= == , 

48 : 
var_assign -> var /= calc_exp 2 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
calc_exp -> str_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == , 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && , || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && , || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && , || 
bool_exp -> cmp_exp 0 look_ahead: ; && , || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; , 
str_exp -> add_exp + str_exp 0 look_ahead: + ; , 
str_exp -> str 0 look_ahead: + ; , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && , || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && , || 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 0 look_ahead: + * - < > >= / . ; != <= == , 

49 : reduce 64
add_exp -> var ++ 2 look_ahead: + > >= ; - < != <= == 

50 : reduce 65
add_exp -> var -- 2 look_ahead: + > >= ; - < != <= == 

51 : 
if_exp -> if_stmt else else_stmt 2 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
else_stmt -> if_exp 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
else_stmt -> { stmt_list } 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
else_stmt -> sg_stmt ; 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
if_exp -> if_stmt 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

52 : 
while_exp -> while ( bool_exp ) { stmt_list } 2 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ) && || 
bool_exp -> ! cmp_exp 0 look_ahead: ) && || 
bool_exp -> cmp_exp 0 look_ahead: ) && || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ) && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

53 : 
var_assign -> var_assign , var = calc_exp 2 look_ahead: ; , 

54 : 
if_stmt -> if ( bool_exp ) { stmt_list } 2 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 2 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ) && || 
bool_exp -> ! cmp_exp 0 look_ahead: ) && || 
bool_exp -> cmp_exp 0 look_ahead: ) && || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ) && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

55 : 
add_exp -> add_exp + mul_exp 2 look_ahead: + > >= ; - < != <= == 
str_exp -> add_exp + str_exp 2 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == 
add_exp -> add_exp + mul_exp 0 look_ahead: + - 
add_exp -> add_exp - mul_exp 0 look_ahead: + - 
add_exp -> - mul_exp 0 look_ahead: + - 
add_exp -> mul_exp 0 look_ahead: + - 
add_exp -> ++ var 0 look_ahead: + - 
add_exp -> -- var 0 look_ahead: + - 
add_exp -> var ++ 0 look_ahead: + - 
add_exp -> var -- 0 look_ahead: + - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ; - < != <= == 

56 : 
add_exp -> add_exp - mul_exp 2 look_ahead: + > >= ; - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ; - < != <= == 

57 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - || 
add_exp -> - mul_exp 0 look_ahead: + ; && - || 
add_exp -> mul_exp 0 look_ahead: + ; && - || 
add_exp -> ++ var 0 look_ahead: + ; && - || 
add_exp -> -- var 0 look_ahead: + ; && - || 
add_exp -> var ++ 0 look_ahead: + ; && - || 
add_exp -> var -- 0 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

58 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - || 
add_exp -> - mul_exp 0 look_ahead: + ; && - || 
add_exp -> mul_exp 0 look_ahead: + ; && - || 
add_exp -> ++ var 0 look_ahead: + ; && - || 
add_exp -> -- var 0 look_ahead: + ; && - || 
add_exp -> var ++ 0 look_ahead: + ; && - || 
add_exp -> var -- 0 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

59 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - || 
add_exp -> - mul_exp 0 look_ahead: + ; && - || 
add_exp -> mul_exp 0 look_ahead: + ; && - || 
add_exp -> ++ var 0 look_ahead: + ; && - || 
add_exp -> -- var 0 look_ahead: + ; && - || 
add_exp -> var ++ 0 look_ahead: + ; && - || 
add_exp -> var -- 0 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

60 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - || 
add_exp -> - mul_exp 0 look_ahead: + ; && - || 
add_exp -> mul_exp 0 look_ahead: + ; && - || 
add_exp -> ++ var 0 look_ahead: + ; && - || 
add_exp -> -- var 0 look_ahead: + ; && - || 
add_exp -> var ++ 0 look_ahead: + ; && - || 
add_exp -> var -- 0 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

61 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - || 
add_exp -> - mul_exp 0 look_ahead: + ; && - || 
add_exp -> mul_exp 0 look_ahead: + ; && - || 
add_exp -> ++ var 0 look_ahead: + ; && - || 
add_exp -> -- var 0 look_ahead: + ; && - || 
add_exp -> var ++ 0 look_ahead: + ; && - || 
add_exp -> var -- 0 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

62 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - || 
add_exp -> - mul_exp 0 look_ahead: + ; && - || 
add_exp -> mul_exp 0 look_ahead: + ; && - || 
add_exp -> ++ var 0 look_ahead: + ; && - || 
add_exp -> -- var 0 look_ahead: + ; && - || 
add_exp -> var ++ 0 look_ahead: + ; && - || 
add_exp -> var -- 0 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

63 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: ; && || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

64 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: ; && || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

65 : 
str_exp -> str_exp + add_exp 2 look_ahead: + ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; - 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; - 
add_exp -> - mul_exp 0 look_ahead: + ; - 
add_exp -> mul_exp 0 look_ahead: + ; - 
add_exp -> ++ var 0 look_ahead: + ; - 
add_exp -> -- var 0 look_ahead: + ; - 
add_exp -> var ++ 0 look_ahead: + ; - 
add_exp -> var -- 0 look_ahead: + ; - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

66 : reduce 11
control_flow -> return calc_exp 2 look_ahead: ; 

67 : reduce 68
mul_exp -> pri_exp 1 look_ahead: + > >= * / ; - < != <= == 

68 : reduce 69
pri_exp -> number 1 look_ahead: + > >= * / ; - < != <= == 

69 : reduce 71
pri_exp -> apply_exp 1 look_ahead: + > >= * / ; - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> apply_exp . var 1 look_ahead: + > >= * / . ; - < != <= == 

70 : reduce 60
add_exp -> - mul_exp 2 look_ahead: + > >= ; - < != <= == 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ; - < != <= == 

71 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: + * / ; - 
mul_exp -> mul_exp * pri_exp 2 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ; - < != <= == 

72 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 2 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ; - < != <= == 

73 : reduce 62
add_exp -> ++ var 2 look_ahead: + > >= ; - < != <= == 

74 : reduce 63
add_exp -> -- var 2 look_ahead: + > >= ; - < != <= == 

75 : reduce 49
bool_exp -> ! cmp_exp 2 look_ahead: ; && || 

76 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: ; && || 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: ) && || 

77 : 
pri_exp -> ( add_exp ) 2 look_ahead: + * / ; - 
add_exp -> add_exp + mul_exp 1 look_ahead: + > >= ) - < != <= == 
add_exp -> add_exp - mul_exp 1 look_ahead: + > >= ) - < != <= == 
cmp_exp -> add_exp > add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 1 look_ahead: ) && || 
pri_exp -> ( add_exp ) 2 look_ahead: + > >= * / ; - < != <= == 

78 : 
bool_exp -> ! cmp_exp 1 look_ahead: ) && || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ) && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

79 : reduce 50
bool_exp -> cmp_exp 1 look_ahead: ) && || 

80 : 
add_exp -> - mul_exp 1 look_ahead: + > >= ) - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ) - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ) - < != <= == 

81 : reduce 61
add_exp -> mul_exp 1 look_ahead: + > >= ) - < != <= == 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ) - < != <= == 

82 : 
add_exp -> ++ var 1 look_ahead: + > >= ) - < != <= == 

83 : 
add_exp -> -- var 1 look_ahead: + > >= ) - < != <= == 

84 : reduce 76
add_exp -> var ++ 1 look_ahead: + > >= ) - < != <= == 
add_exp -> var -- 1 look_ahead: + > >= ) - < != <= == 
pri_exp -> var 1 look_ahead: + > >= * / ) - < != <= == 
apply_exp -> var ( arg_list ) 1 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var 1 look_ahead: + > >= * / . ) - < != <= == 

85 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: ) && || 
pri_exp -> ( add_exp ) 1 look_ahead: + > >= * / ) - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ) && || 
bool_exp -> ! cmp_exp 0 look_ahead: ) && || 
bool_exp -> cmp_exp 0 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ) - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ) - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ) - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ) - < != <= == 
cmp_exp -> ( bool_exp ) 0 look_ahead: ) && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ) && || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ) - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ) - < != <= == 

86 : reduce 68
mul_exp -> pri_exp 1 look_ahead: + > >= * / ) - < != <= == 

87 : reduce 69
pri_exp -> number 1 look_ahead: + > >= * / ) - < != <= == 

88 : reduce 71
pri_exp -> apply_exp 1 look_ahead: + > >= * / ) - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 1 look_ahead: + > >= * / . ) - < != <= == 

89 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 2 look_ahead: + * / . ; - 

90 : reduce 14
var_def -> var_def , var 3 look_ahead: ; , 

91 : 
var_assign -> type_exp var = calc_exp 3 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
calc_exp -> str_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == , 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && , || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && , || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && , || 
bool_exp -> cmp_exp 0 look_ahead: ; && , || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; , 
str_exp -> add_exp + str_exp 0 look_ahead: + ; , 
str_exp -> str 0 look_ahead: + ; , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - , 
mul_exp -> pri_exp 0 look_ahead: + * / ; - , 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && , || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && , || 
pri_exp -> number 0 look_ahead: + * / ; - , 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - , 
pri_exp -> apply_exp 0 look_ahead: + * / ; - , 
pri_exp -> var 0 look_ahead: + * / ; - , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - , 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - , 
apply_exp -> var 0 look_ahead: + * / . ; - , 

92 : 
func_def -> var ( par_list ) { stmt_list } 3 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
par_list -> par_list , type_exp var 1 look_ahead: ) , 

93 : 
apply_exp -> var ( arg_list ) 3 look_ahead: + * / . ; - 
arg_list -> arg_list , var 1 look_ahead: ) , 

94 : 
par_list -> type_exp var 1 look_ahead: ) , 

95 : reduce 79
par_list -> e 1 look_ahead: ) , 
arg_list -> e 1 look_ahead: ) , 

96 : reduce 28
arg_list -> var 1 look_ahead: ) , 
type_exp -> var 1 look_ahead: var 

97 : reduce 18
var_assign -> var = calc_exp 3 look_ahead: ; , 

98 : reduce 41
calc_exp -> add_exp 1 look_ahead: ; , 
add_exp -> add_exp + mul_exp 1 look_ahead: + > >= ; - < != <= == , 
add_exp -> add_exp - mul_exp 1 look_ahead: + > >= ; - < != <= == , 
str_exp -> add_exp + str_exp 1 look_ahead: + ; , 
cmp_exp -> add_exp > add_exp 1 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 1 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 1 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 1 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 1 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 1 look_ahead: ; && , || 

99 : reduce 42
calc_exp -> bool_exp 1 look_ahead: ; , 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: ; && , || 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: ; && , || 

100 : reduce 43
calc_exp -> str_exp 1 look_ahead: ; , 
str_exp -> str_exp + add_exp 1 look_ahead: + ; , 

101 : 
add_exp -> - mul_exp 1 look_ahead: + > >= ; - < != <= == , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 0 look_ahead: + * - < > >= / . ; != <= == , 

102 : reduce 61
add_exp -> mul_exp 1 look_ahead: + > >= ; - < != <= == , 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ; - , 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ; - , 

103 : 
add_exp -> ++ var 1 look_ahead: + > >= ; - < != <= == , 

104 : 
add_exp -> -- var 1 look_ahead: + > >= ; - < != <= == , 

105 : reduce 76
add_exp -> var ++ 1 look_ahead: + > >= ; - < != <= == , 
add_exp -> var -- 1 look_ahead: + > >= ; - < != <= == , 
pri_exp -> var 1 look_ahead: + * / ; - , 
apply_exp -> var ( arg_list ) 1 look_ahead: + * / . ; - , 
apply_exp -> var 1 look_ahead: + * / . ; - , 

106 : 
bool_exp -> ! cmp_exp 1 look_ahead: ; && , || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && , || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

107 : reduce 50
bool_exp -> cmp_exp 1 look_ahead: ; && , || 

108 : reduce 46
str_exp -> str 1 look_ahead: + ; , 

109 : reduce 68
mul_exp -> pri_exp 1 look_ahead: + * / ; - , 

110 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: ; && , || 
pri_exp -> ( add_exp ) 1 look_ahead: + * / ; - , 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ) && || 
bool_exp -> ! cmp_exp 0 look_ahead: ) && || 
bool_exp -> cmp_exp 0 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ) - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ) - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ) - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ) - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ) - < != <= == 
cmp_exp -> ( bool_exp ) 0 look_ahead: ) && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ) && || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ) - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ) - < != <= == 
pri_exp -> ( add_exp ) 1 look_ahead: > >= + * / - < != <= == 

111 : reduce 69
pri_exp -> number 1 look_ahead: + * / ; - , 

112 : reduce 71
pri_exp -> apply_exp 1 look_ahead: + * / ; - , 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: + * / . ; - , 
apply_exp -> apply_exp . var 1 look_ahead: + * / . ; - , 

113 : reduce 19
var_assign -> var += calc_exp 3 look_ahead: ; , 

114 : reduce 20
var_assign -> var -= calc_exp 3 look_ahead: ; , 

115 : reduce 21
var_assign -> var *= calc_exp 3 look_ahead: ; , 

116 : reduce 22
var_assign -> var /= calc_exp 3 look_ahead: ; , 

117 : reduce 34
if_exp -> if_stmt else else_stmt 3 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

118 : reduce 37
else_stmt -> if_exp 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

119 : 
else_stmt -> { stmt_list } 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt_list -> stmt_list stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

120 : 
else_stmt -> sg_stmt ; 1 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

121 : 
while_exp -> while ( bool_exp ) { stmt_list } 3 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: ) && || 

122 : 
var_assign -> var_assign , var = calc_exp 3 look_ahead: ; , 

123 : 
if_stmt -> if ( bool_exp ) { stmt_list } 3 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 3 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: ) && || 

124 : reduce 61
add_exp -> add_exp + mul_exp 3 look_ahead: + > >= ; - < != <= == 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ; - < != <= == 
add_exp -> mul_exp 1 look_ahead: + - 

125 : reduce 45
str_exp -> add_exp + str_exp 3 look_ahead: + ; 
str_exp -> str_exp + add_exp 1 look_ahead: + ; 

126 : reduce 59
add_exp -> add_exp - mul_exp 3 look_ahead: + > >= ; - < != <= == 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ; - < != <= == 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ; - < != <= == 

127 : reduce 52
cmp_exp -> add_exp > add_exp 3 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - || 

128 : 
add_exp -> - mul_exp 1 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

129 : reduce 61
add_exp -> mul_exp 1 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ; && - || 

130 : 
add_exp -> ++ var 1 look_ahead: + ; && - || 

131 : 
add_exp -> -- var 1 look_ahead: + ; && - || 

132 : reduce 76
add_exp -> var ++ 1 look_ahead: + ; && - || 
add_exp -> var -- 1 look_ahead: + ; && - || 
pri_exp -> var 1 look_ahead: + * / ; && - || 
apply_exp -> var ( arg_list ) 1 look_ahead: + * / . ; && - || 
apply_exp -> var 1 look_ahead: + * / . ; && - || 

133 : reduce 68
mul_exp -> pri_exp 1 look_ahead: + * / ; && - || 

134 : reduce 69
pri_exp -> number 1 look_ahead: + * / ; && - || 

135 : 
pri_exp -> ( add_exp ) 1 look_ahead: + * / ; && - || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ) - 
add_exp -> add_exp - mul_exp 0 look_ahead: + ) - 
add_exp -> - mul_exp 0 look_ahead: + ) - 
add_exp -> mul_exp 0 look_ahead: + ) - 
add_exp -> ++ var 0 look_ahead: + ) - 
add_exp -> -- var 0 look_ahead: + ) - 
add_exp -> var ++ 0 look_ahead: + ) - 
add_exp -> var -- 0 look_ahead: + ) - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) - 
mul_exp -> pri_exp 0 look_ahead: + * / ) - 
pri_exp -> number 0 look_ahead: + * / ) - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) - 
pri_exp -> apply_exp 0 look_ahead: + * / ) - 
pri_exp -> var 0 look_ahead: + * / ) - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) - 
apply_exp -> var 0 look_ahead: + * / . ) - 

136 : reduce 71
pri_exp -> apply_exp 1 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 1 look_ahead: + * / . ; && - || 

137 : reduce 53
cmp_exp -> add_exp >= add_exp 3 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - || 

138 : reduce 54
cmp_exp -> add_exp < add_exp 3 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - || 

139 : reduce 55
cmp_exp -> add_exp <= add_exp 3 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - || 

140 : reduce 56
cmp_exp -> add_exp == add_exp 3 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - || 

141 : reduce 57
cmp_exp -> add_exp != add_exp 3 look_ahead: ; && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - || 

142 : reduce 47
bool_exp -> bool_exp && cmp_exp 3 look_ahead: ; && || 

143 : reduce 48
bool_exp -> bool_exp || cmp_exp 3 look_ahead: ; && || 

144 : reduce 44
str_exp -> str_exp + add_exp 3 look_ahead: + ; 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; - 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; - 

145 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> apply_exp . var 2 look_ahead: + > >= * / . ; - < != <= == 

146 : reduce 66
mul_exp -> mul_exp * pri_exp 3 look_ahead: + * / ; - 
mul_exp -> mul_exp * pri_exp 3 look_ahead: + > >= * / ; - < != <= == 

147 : reduce 67
mul_exp -> mul_exp / pri_exp 3 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 3 look_ahead: + > >= * / ; - < != <= == 

148 : reduce 51
cmp_exp -> ( bool_exp ) 3 look_ahead: ; && || 

149 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: ) && || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ) && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

150 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: ) && || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ) && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

151 : reduce 70
pri_exp -> ( add_exp ) 3 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 3 look_ahead: + > >= * / ; - < != <= == 

152 : 
add_exp -> add_exp + mul_exp 2 look_ahead: + > >= ) - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ) - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ) - < != <= == 

153 : 
add_exp -> add_exp - mul_exp 2 look_ahead: + > >= ) - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ) - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ) - < != <= == 

154 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ) && - || 
add_exp -> - mul_exp 0 look_ahead: + ) && - || 
add_exp -> mul_exp 0 look_ahead: + ) && - || 
add_exp -> ++ var 0 look_ahead: + ) && - || 
add_exp -> -- var 0 look_ahead: + ) && - || 
add_exp -> var ++ 0 look_ahead: + ) && - || 
add_exp -> var -- 0 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

155 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ) && - || 
add_exp -> - mul_exp 0 look_ahead: + ) && - || 
add_exp -> mul_exp 0 look_ahead: + ) && - || 
add_exp -> ++ var 0 look_ahead: + ) && - || 
add_exp -> -- var 0 look_ahead: + ) && - || 
add_exp -> var ++ 0 look_ahead: + ) && - || 
add_exp -> var -- 0 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

156 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ) && - || 
add_exp -> - mul_exp 0 look_ahead: + ) && - || 
add_exp -> mul_exp 0 look_ahead: + ) && - || 
add_exp -> ++ var 0 look_ahead: + ) && - || 
add_exp -> -- var 0 look_ahead: + ) && - || 
add_exp -> var ++ 0 look_ahead: + ) && - || 
add_exp -> var -- 0 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

157 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ) && - || 
add_exp -> - mul_exp 0 look_ahead: + ) && - || 
add_exp -> mul_exp 0 look_ahead: + ) && - || 
add_exp -> ++ var 0 look_ahead: + ) && - || 
add_exp -> -- var 0 look_ahead: + ) && - || 
add_exp -> var ++ 0 look_ahead: + ) && - || 
add_exp -> var -- 0 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

158 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ) && - || 
add_exp -> - mul_exp 0 look_ahead: + ) && - || 
add_exp -> mul_exp 0 look_ahead: + ) && - || 
add_exp -> ++ var 0 look_ahead: + ) && - || 
add_exp -> -- var 0 look_ahead: + ) && - || 
add_exp -> var ++ 0 look_ahead: + ) && - || 
add_exp -> var -- 0 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

159 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ) && - || 
add_exp -> - mul_exp 0 look_ahead: + ) && - || 
add_exp -> mul_exp 0 look_ahead: + ) && - || 
add_exp -> ++ var 0 look_ahead: + ) && - || 
add_exp -> -- var 0 look_ahead: + ) && - || 
add_exp -> var ++ 0 look_ahead: + ) && - || 
add_exp -> var -- 0 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

160 : reduce 49
bool_exp -> ! cmp_exp 2 look_ahead: ) && || 

161 : reduce 60
add_exp -> - mul_exp 2 look_ahead: + > >= ) - < != <= == 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ) - < != <= == 

162 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ) - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ) - < != <= == 

163 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> number 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ) - < != <= == 
pri_exp -> var 0 look_ahead: + > >= * / ) - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> var 0 look_ahead: + > >= * / . ) - < != <= == 

164 : reduce 62
add_exp -> ++ var 2 look_ahead: + > >= ) - < != <= == 

165 : reduce 63
add_exp -> -- var 2 look_ahead: + > >= ) - < != <= == 

166 : reduce 64
add_exp -> var ++ 2 look_ahead: + > >= ) - < != <= == 

167 : reduce 65
add_exp -> var -- 2 look_ahead: + > >= ) - < != <= == 

168 : 
apply_exp -> var ( arg_list ) 2 look_ahead: + > >= * / . ) - < != <= == 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

169 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: ) && || 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: ) && || 

170 : 
pri_exp -> ( add_exp ) 2 look_ahead: + > >= * / ) - < != <= == 
add_exp -> add_exp + mul_exp 1 look_ahead: + > >= ) - < != <= == 
add_exp -> add_exp - mul_exp 1 look_ahead: + > >= ) - < != <= == 
cmp_exp -> add_exp > add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 1 look_ahead: ) && || 

171 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 2 look_ahead: + > >= * / . ) - < != <= == 

172 : reduce 74
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 3 look_ahead: + * / . ; - 

173 : reduce 17
var_assign -> type_exp var = calc_exp 4 look_ahead: ; , 

174 : 
func_def -> var ( par_list ) { stmt_list } 4 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

175 : 
par_list -> par_list , type_exp var 2 look_ahead: ) , 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 

176 : reduce 75
apply_exp -> var ( arg_list ) 4 look_ahead: + * / . ; - 

177 : 
arg_list -> arg_list , var 2 look_ahead: ) , 

178 : reduce 31
par_list -> type_exp var 2 look_ahead: ) , 

179 : 
add_exp -> add_exp + mul_exp 2 look_ahead: + > >= ; - < != <= == , 
str_exp -> add_exp + str_exp 2 look_ahead: + ; , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
str_exp -> str_exp + add_exp 0 look_ahead: + ; , 
str_exp -> add_exp + str_exp 0 look_ahead: + ; , 
str_exp -> str 0 look_ahead: + ; , 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == , 
add_exp -> add_exp + mul_exp 0 look_ahead: + - 
add_exp -> add_exp - mul_exp 0 look_ahead: + - 
add_exp -> - mul_exp 0 look_ahead: + - 
add_exp -> mul_exp 0 look_ahead: + - 
add_exp -> ++ var 0 look_ahead: + - 
add_exp -> -- var 0 look_ahead: + - 
add_exp -> var ++ 0 look_ahead: + - 
add_exp -> var -- 0 look_ahead: + - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 0 look_ahead: + * - < > >= / . ; != <= == , 

180 : 
add_exp -> add_exp - mul_exp 2 look_ahead: + > >= ; - < != <= == , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> pri_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 0 look_ahead: + * - < > >= / . ; != <= == , 

181 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> mul_exp 0 look_ahead: + ; && - , || 
add_exp -> ++ var 0 look_ahead: + ; && - , || 
add_exp -> -- var 0 look_ahead: + ; && - , || 
add_exp -> var ++ 0 look_ahead: + ; && - , || 
add_exp -> var -- 0 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

182 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> mul_exp 0 look_ahead: + ; && - , || 
add_exp -> ++ var 0 look_ahead: + ; && - , || 
add_exp -> -- var 0 look_ahead: + ; && - , || 
add_exp -> var ++ 0 look_ahead: + ; && - , || 
add_exp -> var -- 0 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

183 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> mul_exp 0 look_ahead: + ; && - , || 
add_exp -> ++ var 0 look_ahead: + ; && - , || 
add_exp -> -- var 0 look_ahead: + ; && - , || 
add_exp -> var ++ 0 look_ahead: + ; && - , || 
add_exp -> var -- 0 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

184 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> mul_exp 0 look_ahead: + ; && - , || 
add_exp -> ++ var 0 look_ahead: + ; && - , || 
add_exp -> -- var 0 look_ahead: + ; && - , || 
add_exp -> var ++ 0 look_ahead: + ; && - , || 
add_exp -> var -- 0 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

185 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> mul_exp 0 look_ahead: + ; && - , || 
add_exp -> ++ var 0 look_ahead: + ; && - , || 
add_exp -> -- var 0 look_ahead: + ; && - , || 
add_exp -> var ++ 0 look_ahead: + ; && - , || 
add_exp -> var -- 0 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

186 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> - mul_exp 0 look_ahead: + ; && - , || 
add_exp -> mul_exp 0 look_ahead: + ; && - , || 
add_exp -> ++ var 0 look_ahead: + ; && - , || 
add_exp -> -- var 0 look_ahead: + ; && - , || 
add_exp -> var ++ 0 look_ahead: + ; && - , || 
add_exp -> var -- 0 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

187 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: ; && , || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && , || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

188 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: ; && , || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && , || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

189 : 
str_exp -> str_exp + add_exp 2 look_ahead: + ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: + ; - , 
add_exp -> add_exp - mul_exp 0 look_ahead: + ; - , 
add_exp -> - mul_exp 0 look_ahead: + ; - , 
add_exp -> mul_exp 0 look_ahead: + ; - , 
add_exp -> ++ var 0 look_ahead: + ; - , 
add_exp -> -- var 0 look_ahead: + ; - , 
add_exp -> var ++ 0 look_ahead: + ; - , 
add_exp -> var -- 0 look_ahead: + ; - , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - , 
mul_exp -> pri_exp 0 look_ahead: + * / ; - , 
pri_exp -> number 0 look_ahead: + * / ; - , 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - , 
pri_exp -> apply_exp 0 look_ahead: + * / ; - , 
pri_exp -> var 0 look_ahead: + * / ; - , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - , 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - , 
apply_exp -> var 0 look_ahead: + * / . ; - , 

190 : reduce 60
add_exp -> - mul_exp 2 look_ahead: + > >= ; - < != <= == , 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ; - < != <= == , 

191 : reduce 68
mul_exp -> pri_exp 1 look_ahead: + > >= * / ; - < != <= == , 

192 : reduce 69
pri_exp -> number 1 look_ahead: + > >= * / ; - < != <= == , 

193 : 
pri_exp -> ( add_exp ) 1 look_ahead: + > >= * / ; - < != <= == , 
add_exp -> add_exp + mul_exp 0 look_ahead: + ) - 
add_exp -> add_exp - mul_exp 0 look_ahead: + ) - 
add_exp -> - mul_exp 0 look_ahead: + ) - 
add_exp -> mul_exp 0 look_ahead: + ) - 
add_exp -> ++ var 0 look_ahead: + ) - 
add_exp -> -- var 0 look_ahead: + ) - 
add_exp -> var ++ 0 look_ahead: + ) - 
add_exp -> var -- 0 look_ahead: + ) - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) - 
mul_exp -> pri_exp 0 look_ahead: + * / ) - 
pri_exp -> number 0 look_ahead: + * / ) - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) - 
pri_exp -> apply_exp 0 look_ahead: + * / ) - 
pri_exp -> var 0 look_ahead: + * / ) - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) - 
apply_exp -> var 0 look_ahead: + * / . ) - 

194 : reduce 71
pri_exp -> apply_exp 1 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 1 look_ahead: + * - < > >= / . ; != <= == , 

195 : reduce 76
pri_exp -> var 1 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> var ( arg_list ) 1 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 1 look_ahead: + * - < > >= / . ; != <= == , 
add_exp -> var ++ 1 look_ahead: + - 
add_exp -> var -- 1 look_ahead: + - 

196 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: + * / ; - , 
pri_exp -> number 0 look_ahead: + * / ; - , 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - , 
pri_exp -> apply_exp 0 look_ahead: + * / ; - , 
pri_exp -> var 0 look_ahead: + * / ; - , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - , 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - , 
apply_exp -> var 0 look_ahead: + * / . ; - , 

197 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: + * / ; - , 
pri_exp -> number 0 look_ahead: + * / ; - , 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - , 
pri_exp -> apply_exp 0 look_ahead: + * / ; - , 
pri_exp -> var 0 look_ahead: + * / ; - , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - , 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - , 
apply_exp -> var 0 look_ahead: + * / . ; - , 

198 : reduce 62
add_exp -> ++ var 2 look_ahead: + > >= ; - < != <= == , 

199 : reduce 63
add_exp -> -- var 2 look_ahead: + > >= ; - < != <= == , 

200 : reduce 64
add_exp -> var ++ 2 look_ahead: + > >= ; - < != <= == , 

201 : reduce 65
add_exp -> var -- 2 look_ahead: + > >= ; - < != <= == , 

202 : 
apply_exp -> var ( arg_list ) 2 look_ahead: + * / . ; - , 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

203 : reduce 49
bool_exp -> ! cmp_exp 2 look_ahead: ; && , || 

204 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: ; && , || 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: ) && || 

205 : 
pri_exp -> ( add_exp ) 2 look_ahead: + * / ; - , 
add_exp -> add_exp + mul_exp 1 look_ahead: + > >= ) - < != <= == 
add_exp -> add_exp - mul_exp 1 look_ahead: + > >= ) - < != <= == 
cmp_exp -> add_exp > add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 1 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 1 look_ahead: ) && || 
pri_exp -> ( add_exp ) 2 look_ahead: > >= + * / - < != <= == 

206 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: + * / . ; - , 
apply_exp -> apply_exp . var 2 look_ahead: + * / . ; - , 

207 : 
else_stmt -> { stmt_list } 2 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt_list -> stmt_list stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

208 : reduce 2
stmt_list -> stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

209 : 
stmt -> var_def ; 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 1 look_ahead: ; , 

210 : reduce 4
stmt -> func_def 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

211 : reduce 5
stmt -> if_exp 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

212 : reduce 6
stmt -> while_exp 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

213 : 
stmt -> sg_stmt ; 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

214 : reduce 76
func_def -> var ( par_list ) { stmt_list } 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
type_exp -> var 1 look_ahead: var 
var_assign -> var = calc_exp 1 look_ahead: ; , 
var_assign -> var += calc_exp 1 look_ahead: ; , 
var_assign -> var -= calc_exp 1 look_ahead: ; , 
var_assign -> var *= calc_exp 1 look_ahead: ; , 
var_assign -> var /= calc_exp 1 look_ahead: ; , 
add_exp -> var ++ 1 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 1 look_ahead: + > >= ; - < != <= == 
pri_exp -> var 1 look_ahead: + * / ; - 
apply_exp -> var ( arg_list ) 1 look_ahead: + * / . ; - 
apply_exp -> var 1 look_ahead: + * / . ; - 

215 : reduce 33
if_exp -> if_stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

216 : 
while_exp -> while ( bool_exp ) { stmt_list } 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

217 : 
if_stmt -> if ( bool_exp ) { stmt_list } 1 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 1 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 

218 : reduce 39
else_stmt -> sg_stmt ; 2 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

219 : 
while_exp -> while ( bool_exp ) { stmt_list } 4 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

220 : 
var_assign -> var_assign , var = calc_exp 4 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; , 
calc_exp -> bool_exp 0 look_ahead: ; , 
calc_exp -> str_exp 0 look_ahead: ; , 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == , 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == , 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && , || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && , || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && , || 
bool_exp -> cmp_exp 0 look_ahead: ; && , || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; , 
str_exp -> add_exp + str_exp 0 look_ahead: + ; , 
str_exp -> str 0 look_ahead: + ; , 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - , 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - , 
mul_exp -> pri_exp 0 look_ahead: + * / ; - , 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && , || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && , || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && , || 
pri_exp -> number 0 look_ahead: + * / ; - , 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - , 
pri_exp -> apply_exp 0 look_ahead: + * / ; - , 
pri_exp -> var 0 look_ahead: + * / ; - , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - , 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - , 
apply_exp -> var 0 look_ahead: + * / . ; - , 

221 : 
if_stmt -> if ( bool_exp ) { stmt_list } 4 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 4 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

222 : 
add_exp -> add_exp + mul_exp 2 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

223 : 
add_exp -> add_exp - mul_exp 2 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

224 : reduce 60
add_exp -> - mul_exp 2 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ; && - || 

225 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

226 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: + * / ; && - || 
pri_exp -> number 0 look_ahead: + * / ; && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - || 
pri_exp -> var 0 look_ahead: + * / ; && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - || 
apply_exp -> var 0 look_ahead: + * / . ; && - || 

227 : reduce 62
add_exp -> ++ var 2 look_ahead: + ; && - || 

228 : reduce 63
add_exp -> -- var 2 look_ahead: + ; && - || 

229 : reduce 64
add_exp -> var ++ 2 look_ahead: + ; && - || 

230 : reduce 65
add_exp -> var -- 2 look_ahead: + ; && - || 

231 : 
apply_exp -> var ( arg_list ) 2 look_ahead: + * / . ; && - || 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

232 : 
pri_exp -> ( add_exp ) 2 look_ahead: + * / ; && - || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ) - 
add_exp -> add_exp - mul_exp 1 look_ahead: + ) - 

233 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 2 look_ahead: + * / . ; && - || 

234 : reduce 74
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: + > >= * / . ; - < != <= == 
apply_exp -> apply_exp . var 3 look_ahead: + > >= * / . ; - < != <= == 

235 : reduce 47
bool_exp -> bool_exp && cmp_exp 3 look_ahead: ) && || 

236 : reduce 48
bool_exp -> bool_exp || cmp_exp 3 look_ahead: ) && || 

237 : reduce 58
add_exp -> add_exp + mul_exp 3 look_ahead: + > >= ) - < != <= == 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ) - < != <= == 

238 : reduce 59
add_exp -> add_exp - mul_exp 3 look_ahead: + > >= ) - < != <= == 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ) - < != <= == 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ) - < != <= == 

239 : reduce 52
cmp_exp -> add_exp > add_exp 3 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ) && - || 

240 : 
add_exp -> - mul_exp 1 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

241 : reduce 61
add_exp -> mul_exp 1 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ) && - || 

242 : 
add_exp -> ++ var 1 look_ahead: + ) && - || 

243 : 
add_exp -> -- var 1 look_ahead: + ) && - || 

244 : reduce 76
add_exp -> var ++ 1 look_ahead: + ) && - || 
add_exp -> var -- 1 look_ahead: + ) && - || 
pri_exp -> var 1 look_ahead: + * / ) && - || 
apply_exp -> var ( arg_list ) 1 look_ahead: + * / . ) && - || 
apply_exp -> var 1 look_ahead: + * / . ) && - || 

245 : reduce 68
mul_exp -> pri_exp 1 look_ahead: + * / ) && - || 

246 : reduce 69
pri_exp -> number 1 look_ahead: + * / ) && - || 

247 : 
pri_exp -> ( add_exp ) 1 look_ahead: + * / ) && - || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ) - 
add_exp -> add_exp - mul_exp 0 look_ahead: + ) - 
add_exp -> - mul_exp 0 look_ahead: + ) - 
add_exp -> mul_exp 0 look_ahead: + ) - 
add_exp -> ++ var 0 look_ahead: + ) - 
add_exp -> -- var 0 look_ahead: + ) - 
add_exp -> var ++ 0 look_ahead: + ) - 
add_exp -> var -- 0 look_ahead: + ) - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) - 
mul_exp -> pri_exp 0 look_ahead: + * / ) - 
pri_exp -> number 0 look_ahead: + * / ) - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) - 
pri_exp -> apply_exp 0 look_ahead: + * / ) - 
pri_exp -> var 0 look_ahead: + * / ) - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) - 
apply_exp -> var 0 look_ahead: + * / . ) - 

248 : reduce 71
pri_exp -> apply_exp 1 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 1 look_ahead: + * / . ) && - || 

249 : reduce 53
cmp_exp -> add_exp >= add_exp 3 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ) && - || 

250 : reduce 54
cmp_exp -> add_exp < add_exp 3 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ) && - || 

251 : reduce 55
cmp_exp -> add_exp <= add_exp 3 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ) && - || 

252 : reduce 56
cmp_exp -> add_exp == add_exp 3 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ) && - || 

253 : reduce 57
cmp_exp -> add_exp != add_exp 3 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ) && - || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ) && - || 

254 : reduce 66
mul_exp -> mul_exp * pri_exp 3 look_ahead: + > >= * / ) - < != <= == 

255 : reduce 67
mul_exp -> mul_exp / pri_exp 3 look_ahead: + > >= * / ) - < != <= == 

256 : 
apply_exp -> var ( arg_list ) 3 look_ahead: + > >= * / . ) - < != <= == 
arg_list -> arg_list , var 1 look_ahead: ) , 

257 : reduce 51
cmp_exp -> ( bool_exp ) 3 look_ahead: ) && || 

258 : reduce 70
pri_exp -> ( add_exp ) 3 look_ahead: + > >= * / ) - < != <= == 

259 : reduce 74
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: + > >= * / . ) - < != <= == 
apply_exp -> apply_exp . var 3 look_ahead: + > >= * / . ) - < != <= == 

260 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: + * / . ; - 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

261 : 
func_def -> var ( par_list ) { stmt_list } 5 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt_list -> stmt_list stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

262 : 
par_list -> par_list , type_exp var 3 look_ahead: ) , 

263 : reduce 77
arg_list -> arg_list , var 3 look_ahead: ) , 

264 : reduce 61
add_exp -> add_exp + mul_exp 3 look_ahead: + > >= ; - < != <= == , 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ; - < != <= == , 
add_exp -> mul_exp 1 look_ahead: + - 

265 : reduce 45
str_exp -> add_exp + str_exp 3 look_ahead: + ; , 
str_exp -> str_exp + add_exp 1 look_ahead: + ; , 

266 : reduce 59
add_exp -> add_exp - mul_exp 3 look_ahead: + > >= ; - < != <= == , 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + > >= * / ; - < != <= == , 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + > >= * / ; - < != <= == , 

267 : reduce 52
cmp_exp -> add_exp > add_exp 3 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - , || 

268 : 
add_exp -> - mul_exp 1 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

269 : reduce 61
add_exp -> mul_exp 1 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ; && - , || 

270 : 
add_exp -> ++ var 1 look_ahead: + ; && - , || 

271 : 
add_exp -> -- var 1 look_ahead: + ; && - , || 

272 : reduce 76
add_exp -> var ++ 1 look_ahead: + ; && - , || 
add_exp -> var -- 1 look_ahead: + ; && - , || 
pri_exp -> var 1 look_ahead: + * / ; && - , || 
apply_exp -> var ( arg_list ) 1 look_ahead: + * / . ; && - , || 
apply_exp -> var 1 look_ahead: + * / . ; && - , || 

273 : reduce 68
mul_exp -> pri_exp 1 look_ahead: + * / ; && - , || 

274 : reduce 69
pri_exp -> number 1 look_ahead: + * / ; && - , || 

275 : 
pri_exp -> ( add_exp ) 1 look_ahead: + * / ; && - , || 
add_exp -> add_exp + mul_exp 0 look_ahead: + ) - 
add_exp -> add_exp - mul_exp 0 look_ahead: + ) - 
add_exp -> - mul_exp 0 look_ahead: + ) - 
add_exp -> mul_exp 0 look_ahead: + ) - 
add_exp -> ++ var 0 look_ahead: + ) - 
add_exp -> -- var 0 look_ahead: + ) - 
add_exp -> var ++ 0 look_ahead: + ) - 
add_exp -> var -- 0 look_ahead: + ) - 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) - 
mul_exp -> pri_exp 0 look_ahead: + * / ) - 
pri_exp -> number 0 look_ahead: + * / ) - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) - 
pri_exp -> apply_exp 0 look_ahead: + * / ) - 
pri_exp -> var 0 look_ahead: + * / ) - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) - 
apply_exp -> var 0 look_ahead: + * / . ) - 

276 : reduce 71
pri_exp -> apply_exp 1 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 1 look_ahead: + * / . ; && - , || 

277 : reduce 53
cmp_exp -> add_exp >= add_exp 3 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - , || 

278 : reduce 54
cmp_exp -> add_exp < add_exp 3 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - , || 

279 : reduce 55
cmp_exp -> add_exp <= add_exp 3 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - , || 

280 : reduce 56
cmp_exp -> add_exp == add_exp 3 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - , || 

281 : reduce 57
cmp_exp -> add_exp != add_exp 3 look_ahead: ; && , || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; && - , || 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; && - , || 

282 : reduce 47
bool_exp -> bool_exp && cmp_exp 3 look_ahead: ; && , || 

283 : reduce 48
bool_exp -> bool_exp || cmp_exp 3 look_ahead: ; && , || 

284 : reduce 44
str_exp -> str_exp + add_exp 3 look_ahead: + ; , 
add_exp -> add_exp + mul_exp 1 look_ahead: + ; - , 
add_exp -> add_exp - mul_exp 1 look_ahead: + ; - , 

285 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 0 look_ahead: + * - < > >= / . ; != <= == , 

286 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> number 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> ( add_exp ) 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> apply_exp 0 look_ahead: + > >= * / ; - < != <= == , 
pri_exp -> var 0 look_ahead: + > >= * / ; - < != <= == , 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var ( arg_list ) 0 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> var 0 look_ahead: + * - < > >= / . ; != <= == , 

287 : 
pri_exp -> ( add_exp ) 2 look_ahead: + > >= * / ; - < != <= == , 
add_exp -> add_exp + mul_exp 1 look_ahead: + ) - 
add_exp -> add_exp - mul_exp 1 look_ahead: + ) - 

288 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 2 look_ahead: + * - < > >= / . ; != <= == , 

289 : 
apply_exp -> var ( arg_list ) 2 look_ahead: + * - < > >= / . ; != <= == , 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

290 : reduce 66
mul_exp -> mul_exp * pri_exp 3 look_ahead: + * / ; - , 

291 : reduce 67
mul_exp -> mul_exp / pri_exp 3 look_ahead: + * / ; - , 

292 : 
apply_exp -> var ( arg_list ) 3 look_ahead: + * / . ; - , 
arg_list -> arg_list , var 1 look_ahead: ) , 

293 : reduce 51
cmp_exp -> ( bool_exp ) 3 look_ahead: ; && , || 

294 : reduce 70
pri_exp -> ( add_exp ) 3 look_ahead: + * / ; - , 
pri_exp -> ( add_exp ) 3 look_ahead: > >= + * / - < != <= == 

295 : reduce 74
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: + * / . ; - , 
apply_exp -> apply_exp . var 3 look_ahead: + * / . ; - , 

296 : reduce 38
else_stmt -> { stmt_list } 3 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

297 : reduce 1
stmt_list -> stmt_list stmt 2 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

298 : reduce 3
stmt -> var_def ; 2 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

299 : reduce 7
stmt -> sg_stmt ; 2 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

300 : 
func_def -> var ( par_list ) { stmt_list } 2 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
apply_exp -> var ( arg_list ) 2 look_ahead: + * / . ; - 
par_list -> par_list , type_exp var 0 look_ahead: ) , 
par_list -> type_exp var 0 look_ahead: ) , 
par_list -> e 0 look_ahead: ) , 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 

301 : 
if_exp -> if_stmt else else_stmt 2 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
else_stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
else_stmt -> { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
else_stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

302 : 
while_exp -> while ( bool_exp ) { stmt_list } 2 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ) && || 
bool_exp -> ! cmp_exp 0 look_ahead: ) && || 
bool_exp -> cmp_exp 0 look_ahead: ) && || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ) && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

303 : 
if_stmt -> if ( bool_exp ) { stmt_list } 2 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 2 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ) && || 
bool_exp -> ! cmp_exp 0 look_ahead: ) && || 
bool_exp -> cmp_exp 0 look_ahead: ) && || 
cmp_exp -> ( bool_exp ) 0 look_ahead: ) && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ) && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ) && || 
add_exp -> add_exp + mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> - mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> mul_exp 0 look_ahead: > >= + - < != <= == 
add_exp -> ++ var 0 look_ahead: > >= + - < != <= == 
add_exp -> -- var 0 look_ahead: > >= + - < != <= == 
add_exp -> var ++ 0 look_ahead: > >= + - < != <= == 
add_exp -> var -- 0 look_ahead: > >= + - < != <= == 
mul_exp -> mul_exp * pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> mul_exp / pri_exp 0 look_ahead: > >= + * / - < != <= == 
mul_exp -> pri_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> number 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> ( add_exp ) 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> apply_exp 0 look_ahead: > >= + * / - < != <= == 
pri_exp -> var 0 look_ahead: > >= + * / - < != <= == 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> apply_exp . var 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var ( arg_list ) 0 look_ahead: > >= + * / . - < != <= == 
apply_exp -> var 0 look_ahead: > >= + * / . - < != <= == 

304 : 
while_exp -> while ( bool_exp ) { stmt_list } 5 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt_list -> stmt_list stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

305 : reduce 16
var_assign -> var_assign , var = calc_exp 5 look_ahead: ; , 

306 : 
if_stmt -> if ( bool_exp ) { stmt_list } 5 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
stmt_list -> stmt_list stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

307 : 
if_stmt -> if ( bool_exp ) sg_stmt ; 5 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 

308 : reduce 58
add_exp -> add_exp + mul_exp 3 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ; && - || 

309 : reduce 59
add_exp -> add_exp - mul_exp 3 look_ahead: + ; && - || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ; && - || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ; && - || 

310 : reduce 66
mul_exp -> mul_exp * pri_exp 3 look_ahead: + * / ; && - || 

311 : reduce 67
mul_exp -> mul_exp / pri_exp 3 look_ahead: + * / ; && - || 

312 : 
apply_exp -> var ( arg_list ) 3 look_ahead: + * / . ; && - || 
arg_list -> arg_list , var 1 look_ahead: ) , 

313 : reduce 70
pri_exp -> ( add_exp ) 3 look_ahead: + * / ; && - || 

314 : reduce 74
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: + * / . ; && - || 
apply_exp -> apply_exp . var 3 look_ahead: + * / . ; && - || 

315 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: + > >= * / . ; - < != <= == 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

316 : 
add_exp -> add_exp + mul_exp 2 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

317 : 
add_exp -> add_exp - mul_exp 2 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ) && - || 
mul_exp -> pri_exp 0 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

318 : reduce 60
add_exp -> - mul_exp 2 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ) && - || 

319 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

320 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: + * / ) && - || 
pri_exp -> number 0 look_ahead: + * / ) && - || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ) && - || 
pri_exp -> apply_exp 0 look_ahead: + * / ) && - || 
pri_exp -> var 0 look_ahead: + * / ) && - || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ) && - || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ) && - || 
apply_exp -> var 0 look_ahead: + * / . ) && - || 

321 : reduce 62
add_exp -> ++ var 2 look_ahead: + ) && - || 

322 : reduce 63
add_exp -> -- var 2 look_ahead: + ) && - || 

323 : reduce 64
add_exp -> var ++ 2 look_ahead: + ) && - || 

324 : reduce 65
add_exp -> var -- 2 look_ahead: + ) && - || 

325 : 
apply_exp -> var ( arg_list ) 2 look_ahead: + * / . ) && - || 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

326 : 
pri_exp -> ( add_exp ) 2 look_ahead: + * / ) && - || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ) - 
add_exp -> add_exp - mul_exp 1 look_ahead: + ) - 

327 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 2 look_ahead: + * / . ) && - || 

328 : reduce 75
apply_exp -> var ( arg_list ) 4 look_ahead: + > >= * / . ) - < != <= == 

329 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: + > >= * / . ) - < != <= == 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

330 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: + * / . ; - 
arg_list -> arg_list , var 1 look_ahead: ) , 

331 : 
func_def -> var ( par_list ) { stmt_list } 6 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt_list -> stmt_list stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

332 : reduce 30
par_list -> par_list , type_exp var 4 look_ahead: ) , 

333 : 
add_exp -> add_exp + mul_exp 2 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

334 : 
add_exp -> add_exp - mul_exp 2 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; && - , || 
mul_exp -> pri_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

335 : reduce 60
add_exp -> - mul_exp 2 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ; && - , || 

336 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

337 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: + * / ; && - , || 
pri_exp -> number 0 look_ahead: + * / ; && - , || 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; && - , || 
pri_exp -> apply_exp 0 look_ahead: + * / ; && - , || 
pri_exp -> var 0 look_ahead: + * / ; && - , || 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; && - , || 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; && - , || 
apply_exp -> var 0 look_ahead: + * / . ; && - , || 

338 : reduce 62
add_exp -> ++ var 2 look_ahead: + ; && - , || 

339 : reduce 63
add_exp -> -- var 2 look_ahead: + ; && - , || 

340 : reduce 64
add_exp -> var ++ 2 look_ahead: + ; && - , || 

341 : reduce 65
add_exp -> var -- 2 look_ahead: + ; && - , || 

342 : 
apply_exp -> var ( arg_list ) 2 look_ahead: + * / . ; && - , || 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

343 : 
pri_exp -> ( add_exp ) 2 look_ahead: + * / ; && - , || 
add_exp -> add_exp + mul_exp 1 look_ahead: + ) - 
add_exp -> add_exp - mul_exp 1 look_ahead: + ) - 

344 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 2 look_ahead: + * / . ; && - , || 

345 : reduce 66
mul_exp -> mul_exp * pri_exp 3 look_ahead: + > >= * / ; - < != <= == , 

346 : reduce 67
mul_exp -> mul_exp / pri_exp 3 look_ahead: + > >= * / ; - < != <= == , 

347 : reduce 70
pri_exp -> ( add_exp ) 3 look_ahead: + > >= * / ; - < != <= == , 

348 : reduce 74
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: + * - < > >= / . ; != <= == , 
apply_exp -> apply_exp . var 3 look_ahead: + * - < > >= / . ; != <= == , 

349 : 
apply_exp -> var ( arg_list ) 3 look_ahead: + * - < > >= / . ; != <= == , 
arg_list -> arg_list , var 1 look_ahead: ) , 

350 : reduce 75
apply_exp -> var ( arg_list ) 4 look_ahead: + * / . ; - , 

351 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: + * / . ; - , 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

352 : 
func_def -> var ( par_list ) { stmt_list } 3 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
par_list -> par_list , type_exp var 1 look_ahead: ) , 

353 : reduce 34
if_exp -> if_stmt else else_stmt 3 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

354 : reduce 37
else_stmt -> if_exp 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

355 : 
else_stmt -> { stmt_list } 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt_list stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

356 : 
else_stmt -> sg_stmt ; 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

357 : 
while_exp -> while ( bool_exp ) { stmt_list } 3 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: ) && || 

358 : 
if_stmt -> if ( bool_exp ) { stmt_list } 3 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 3 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: ) && || 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: ) && || 

359 : 
while_exp -> while ( bool_exp ) { stmt_list } 6 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 
stmt_list -> stmt_list stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

360 : 
if_stmt -> if ( bool_exp ) { stmt_list } 6 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 
stmt_list -> stmt_list stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

361 : reduce 36
if_stmt -> if ( bool_exp ) sg_stmt ; 6 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 

362 : reduce 75
apply_exp -> var ( arg_list ) 4 look_ahead: + * / . ; && - || 

363 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: + * / . ; && - || 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

364 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: + > >= * / . ; - < != <= == 
arg_list -> arg_list , var 1 look_ahead: ) , 

365 : reduce 58
add_exp -> add_exp + mul_exp 3 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ) && - || 

366 : reduce 59
add_exp -> add_exp - mul_exp 3 look_ahead: + ) && - || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ) && - || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ) && - || 

367 : reduce 66
mul_exp -> mul_exp * pri_exp 3 look_ahead: + * / ) && - || 

368 : reduce 67
mul_exp -> mul_exp / pri_exp 3 look_ahead: + * / ) && - || 

369 : 
apply_exp -> var ( arg_list ) 3 look_ahead: + * / . ) && - || 
arg_list -> arg_list , var 1 look_ahead: ) , 

370 : reduce 70
pri_exp -> ( add_exp ) 3 look_ahead: + * / ) && - || 

371 : reduce 74
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: + * / . ) && - || 
apply_exp -> apply_exp . var 3 look_ahead: + * / . ) && - || 

372 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: + > >= * / . ) - < != <= == 
arg_list -> arg_list , var 1 look_ahead: ) , 

373 : reduce 73
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: + * / . ; - 

374 : reduce 29
func_def -> var ( par_list ) { stmt_list } 7 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

375 : reduce 58
add_exp -> add_exp + mul_exp 3 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ; && - , || 

376 : reduce 59
add_exp -> add_exp - mul_exp 3 look_ahead: + ; && - , || 
mul_exp -> mul_exp * pri_exp 1 look_ahead: + * / ; && - , || 
mul_exp -> mul_exp / pri_exp 1 look_ahead: + * / ; && - , || 

377 : reduce 66
mul_exp -> mul_exp * pri_exp 3 look_ahead: + * / ; && - , || 

378 : reduce 67
mul_exp -> mul_exp / pri_exp 3 look_ahead: + * / ; && - , || 

379 : 
apply_exp -> var ( arg_list ) 3 look_ahead: + * / . ; && - , || 
arg_list -> arg_list , var 1 look_ahead: ) , 

380 : reduce 70
pri_exp -> ( add_exp ) 3 look_ahead: + * / ; && - , || 

381 : reduce 74
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: + * / . ; && - , || 
apply_exp -> apply_exp . var 3 look_ahead: + * / . ; && - , || 

382 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: + * - < > >= / . ; != <= == , 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

383 : reduce 75
apply_exp -> var ( arg_list ) 4 look_ahead: + * - < > >= / . ; != <= == , 

384 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: + * / . ; - , 
arg_list -> arg_list , var 1 look_ahead: ) , 

385 : 
func_def -> var ( par_list ) { stmt_list } 4 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

386 : 
else_stmt -> { stmt_list } 2 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt_list stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

387 : reduce 39
else_stmt -> sg_stmt ; 2 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

388 : 
while_exp -> while ( bool_exp ) { stmt_list } 4 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

389 : 
if_stmt -> if ( bool_exp ) { stmt_list } 4 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 4 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

390 : reduce 40
while_exp -> while ( bool_exp ) { stmt_list } 7 look_ahead: var bool break eof if ++ str - -- char ! number while ( continue return double int string 

391 : reduce 35
if_stmt -> if ( bool_exp ) { stmt_list } 7 look_ahead: var bool break else eof if ++ str - -- char ! number while ( continue return double int string 

392 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: + * / . ; && - || 
arg_list -> arg_list , var 1 look_ahead: ) , 

393 : reduce 73
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: + > >= * / . ; - < != <= == 

394 : reduce 75
apply_exp -> var ( arg_list ) 4 look_ahead: + * / . ) && - || 

395 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: + * / . ) && - || 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

396 : reduce 73
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: + > >= * / . ) - < != <= == 

397 : reduce 75
apply_exp -> var ( arg_list ) 4 look_ahead: + * / . ; && - , || 

398 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: + * / . ; && - , || 
arg_list -> arg_list , var 0 look_ahead: ) , 
arg_list -> var 0 look_ahead: ) , 
arg_list -> e 0 look_ahead: ) , 

399 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: + * - < > >= / . ; != <= == , 
arg_list -> arg_list , var 1 look_ahead: ) , 

400 : reduce 73
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: + * / . ; - , 

401 : 
func_def -> var ( par_list ) { stmt_list } 5 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt_list stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

402 : reduce 38
else_stmt -> { stmt_list } 3 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

403 : 
while_exp -> while ( bool_exp ) { stmt_list } 5 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt_list stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

404 : 
if_stmt -> if ( bool_exp ) { stmt_list } 5 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt_list stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

405 : 
if_stmt -> if ( bool_exp ) sg_stmt ; 5 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 

406 : reduce 73
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: + * / . ; && - || 

407 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: + * / . ) && - || 
arg_list -> arg_list , var 1 look_ahead: ) , 

408 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: + * / . ; && - , || 
arg_list -> arg_list , var 1 look_ahead: ) , 

409 : reduce 73
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: + * - < > >= / . ; != <= == , 

410 : 
func_def -> var ( par_list ) { stmt_list } 6 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt_list stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

411 : 
while_exp -> while ( bool_exp ) { stmt_list } 6 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt_list stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

412 : 
if_stmt -> if ( bool_exp ) { stmt_list } 6 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
stmt_list -> stmt_list stmt 1 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> var_def ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> func_def 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> if_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> while_exp 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
stmt -> sg_stmt ; 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
var_def -> var_def , var 0 look_ahead: ; , 
var_def -> type_exp var 0 look_ahead: ; , 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
if_exp -> if_stmt else else_stmt 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 
var_assign -> var_assign , var = calc_exp 0 look_ahead: ; , 
var_assign -> type_exp var = calc_exp 0 look_ahead: ; , 
var_assign -> var = calc_exp 0 look_ahead: ; , 
var_assign -> var += calc_exp 0 look_ahead: ; , 
var_assign -> var -= calc_exp 0 look_ahead: ; , 
var_assign -> var *= calc_exp 0 look_ahead: ; , 
var_assign -> var /= calc_exp 0 look_ahead: ; , 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> add_exp - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> - mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> mul_exp 0 look_ahead: + > >= ; - < != <= == 
add_exp -> ++ var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> -- var 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var ++ 0 look_ahead: + > >= ; - < != <= == 
add_exp -> var -- 0 look_ahead: + > >= ; - < != <= == 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: ; && || 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: ; && || 
bool_exp -> ! cmp_exp 0 look_ahead: ; && || 
bool_exp -> cmp_exp 0 look_ahead: ; && || 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: + * / ; - 
mul_exp -> mul_exp / pri_exp 0 look_ahead: + * / ; - 
mul_exp -> pri_exp 0 look_ahead: + * / ; - 
cmp_exp -> ( bool_exp ) 0 look_ahead: ; && || 
cmp_exp -> add_exp > add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp >= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp < add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp <= add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp == add_exp 0 look_ahead: ; && || 
cmp_exp -> add_exp != add_exp 0 look_ahead: ; && || 
pri_exp -> number 0 look_ahead: + * / ; - 
pri_exp -> ( add_exp ) 0 look_ahead: + * / ; - 
pri_exp -> apply_exp 0 look_ahead: + * / ; - 
pri_exp -> var 0 look_ahead: + * / ; - 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> apply_exp . var 0 look_ahead: + * / . ; - 
apply_exp -> var ( arg_list ) 0 look_ahead: + * / . ; - 
apply_exp -> var 0 look_ahead: + * / . ; - 

413 : reduce 36
if_stmt -> if ( bool_exp ) sg_stmt ; 6 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 

414 : reduce 73
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: + * / . ) && - || 

415 : reduce 73
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: + * / . ; && - , || 

416 : reduce 29
func_def -> var ( par_list ) { stmt_list } 7 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

417 : reduce 40
while_exp -> while ( bool_exp ) { stmt_list } 7 look_ahead: var bool break if ++ str - -- char ! number while ( continue return double } int string 

418 : reduce 35
if_stmt -> if ( bool_exp ) { stmt_list } 7 look_ahead: var bool break else if ++ str - -- char ! number while ( continue return double } int string 

//end
