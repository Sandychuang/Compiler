//first set

Goal :
char bool - break if number ! false chr string while ++ continue return str double -- ( int true var 
if_exp :
if 
type_exp :
char bool double string int var 
sg_stmt :
char bool - break number ! false chr string ++ continue return str double -- ( int true var 
if_stmt :
if 
arg_list :
- , number ! false chr ++ str e -- ( true var 
stmt :
char bool - break if number ! false chr string while ++ continue return str double -- ( int true var 
str_exp :
- ++ number str -- chr ( var 
calc_exp :
- ++ number str ! false -- chr ( true var 
control_flow :
break continue return 
cmp_exp :
- ++ number false -- ( true var 
type_def :

apply_exp :
var 
var_assign :
char bool double string int var 
bool_exp :
- ++ number ! false -- ( true var 
else_stmt :
char bool - break if number ! false chr string ++ { continue return str double -- ( int true var 
pri_exp :
number ( var 
func_def :
var 
while_exp :
while 
var_def :
char bool double string int var 
stmt_list :
char bool - break if number ! false chr string while ++ continue return str double -- ( int true var 
add_exp :
- ++ number -- ( var 
par_list :
char bool , e double string int var 
mul_exp :
number ( var 

//all CCs

0 : 
Goal -> stmt_list 0 look_ahead: eof 
stmt_list -> stmt_list stmt 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt_list -> stmt 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

1 : reduce 0
Goal -> stmt_list 1 look_ahead: eof 
stmt_list -> stmt_list stmt 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

2 : reduce 2
stmt_list -> stmt 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

3 : 
stmt -> var_def ; 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
var_def -> var_def , var 1 look_ahead: , ; 

4 : reduce 4
stmt -> func_def 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

5 : reduce 5
stmt -> if_exp 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

6 : reduce 6
stmt -> while_exp 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

7 : 
stmt -> sg_stmt ; 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

8 : 
var_def -> type_exp var 1 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 1 look_ahead: , ; 

9 : reduce 78
func_def -> var ( par_list ) { stmt_list } 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
type_exp -> var 1 look_ahead: var 
var_assign -> var = calc_exp 1 look_ahead: , ; 
var_assign -> var += calc_exp 1 look_ahead: , ; 
var_assign -> var -= calc_exp 1 look_ahead: , ; 
var_assign -> var *= calc_exp 1 look_ahead: , ; 
var_assign -> var /= calc_exp 1 look_ahead: , ; 
add_exp -> var ++ 1 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 1 look_ahead: <= - != + == ; < > >= 
apply_exp -> var ( arg_list ) 1 look_ahead: - + . ; * / 
apply_exp -> var 1 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 1 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var 1 look_ahead: <= - != + == . ; < > >= * / 
add_exp -> var ++ 1 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 1 look_ahead: <= - , != + == < > >= ) 
apply_exp -> var ( arg_list ) 1 look_ahead: - , + . ) * / 
apply_exp -> var 1 look_ahead: - , + . ) * / 

10 : reduce 33
if_exp -> if_stmt 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_exp -> if_stmt else else_stmt 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

11 : 
while_exp -> while ( bool_exp ) { stmt_list } 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

12 : reduce 8
sg_stmt -> var_assign 1 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 1 look_ahead: , ; 

13 : reduce 9
sg_stmt -> calc_exp 1 look_ahead: ; 

14 : reduce 10
sg_stmt -> control_flow 1 look_ahead: ; 

15 : reduce 23
type_exp -> int 1 look_ahead: var 

16 : reduce 24
type_exp -> double 1 look_ahead: var 

17 : reduce 25
type_exp -> bool 1 look_ahead: var 

18 : reduce 26
type_exp -> string 1 look_ahead: var 

19 : reduce 27
type_exp -> char 1 look_ahead: var 

20 : 
if_stmt -> if ( bool_exp ) { stmt_list } 1 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 1 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 

21 : reduce 41
calc_exp -> add_exp 1 look_ahead: ; 
add_exp -> add_exp + mul_exp 1 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 1 look_ahead: <= - != + == ; < > >= 
str_exp -> add_exp + str_exp 1 look_ahead: + ; 
cmp_exp -> add_exp > add_exp 1 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 1 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 1 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 1 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 1 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 1 look_ahead: && || ; 

22 : reduce 42
calc_exp -> bool_exp 1 look_ahead: ; 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || ; 

23 : reduce 43
calc_exp -> str_exp 1 look_ahead: ; 
str_exp -> str_exp + add_exp 1 look_ahead: + ; 

24 : 
control_flow -> return calc_exp 1 look_ahead: ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var 0 look_ahead: <= - != + == . ; < > >= * / 

25 : reduce 12
control_flow -> continue 1 look_ahead: ; 

26 : reduce 13
control_flow -> break 1 look_ahead: ; 

27 : 
add_exp -> - mul_exp 1 look_ahead: <= - != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> number 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var 0 look_ahead: <= - != + == . ; < > >= * / 

28 : reduce 64
add_exp -> mul_exp 1 look_ahead: <= - != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 1 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: - + ; * / 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - != + == ; < > >= * / 

29 : 
add_exp -> ++ var 1 look_ahead: <= - != + == ; < > >= 

30 : 
add_exp -> -- var 1 look_ahead: <= - != + == ; < > >= 

31 : 
bool_exp -> ! cmp_exp 1 look_ahead: && || ; 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

32 : reduce 51
bool_exp -> cmp_exp 1 look_ahead: && || ; 

33 : reduce 46
str_exp -> str 1 look_ahead: + ; 

34 : reduce 47
str_exp -> chr 1 look_ahead: + ; 

35 : reduce 71
mul_exp -> pri_exp 1 look_ahead: - + ; * / 

36 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: && || ; 
pri_exp -> ( add_exp ) 1 look_ahead: - + ; * / 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || ) 
bool_exp -> cmp_exp 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - != + == < > >= ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var 0 look_ahead: <= - != + == . < > >= ) * / 
pri_exp -> ( add_exp ) 1 look_ahead: <= - != + == ; < > >= * / 

37 : reduce 59
cmp_exp -> true 1 look_ahead: && || ; 

38 : reduce 60
cmp_exp -> false 1 look_ahead: && || ; 

39 : reduce 72
pri_exp -> number 1 look_ahead: - + ; * / 

40 : reduce 74
pri_exp -> apply_exp 1 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 1 look_ahead: - + . ; * / 

41 : reduce 1
stmt_list -> stmt_list stmt 2 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

42 : reduce 3
stmt -> var_def ; 2 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

43 : 
var_def -> var_def , var 2 look_ahead: , ; 

44 : reduce 7
stmt -> sg_stmt ; 2 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

45 : reduce 15
var_def -> type_exp var 2 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 2 look_ahead: , ; 

46 : 
func_def -> var ( par_list ) { stmt_list } 2 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
apply_exp -> var ( arg_list ) 2 look_ahead: - + . ; * / 
par_list -> par_list , type_exp var 0 look_ahead: , ) 
par_list -> type_exp var 0 look_ahead: , ) 
par_list -> e 0 look_ahead: , ) 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

47 : 
var_assign -> var = calc_exp 2 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: , ; 
calc_exp -> bool_exp 0 look_ahead: , ; 
calc_exp -> str_exp 0 look_ahead: , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - , != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ; 
bool_exp -> cmp_exp 0 look_ahead: && || , ; 
str_exp -> str_exp + add_exp 0 look_ahead: , + ; 
str_exp -> add_exp + str_exp 0 look_ahead: , + ; 
str_exp -> str 0 look_ahead: , + ; 
str_exp -> chr 0 look_ahead: , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ; 
cmp_exp -> true 0 look_ahead: && || , ; 
cmp_exp -> false 0 look_ahead: && || , ; 
pri_exp -> number 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 0 look_ahead: <= - , != + == . / ; < > >= * 

48 : 
var_assign -> var += calc_exp 2 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: , ; 
calc_exp -> bool_exp 0 look_ahead: , ; 
calc_exp -> str_exp 0 look_ahead: , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - , != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ; 
bool_exp -> cmp_exp 0 look_ahead: && || , ; 
str_exp -> str_exp + add_exp 0 look_ahead: , + ; 
str_exp -> add_exp + str_exp 0 look_ahead: , + ; 
str_exp -> str 0 look_ahead: , + ; 
str_exp -> chr 0 look_ahead: , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ; 
cmp_exp -> true 0 look_ahead: && || , ; 
cmp_exp -> false 0 look_ahead: && || , ; 
pri_exp -> number 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 0 look_ahead: <= - , != + == . / ; < > >= * 

49 : 
var_assign -> var -= calc_exp 2 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: , ; 
calc_exp -> bool_exp 0 look_ahead: , ; 
calc_exp -> str_exp 0 look_ahead: , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - , != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ; 
bool_exp -> cmp_exp 0 look_ahead: && || , ; 
str_exp -> str_exp + add_exp 0 look_ahead: , + ; 
str_exp -> add_exp + str_exp 0 look_ahead: , + ; 
str_exp -> str 0 look_ahead: , + ; 
str_exp -> chr 0 look_ahead: , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ; 
cmp_exp -> true 0 look_ahead: && || , ; 
cmp_exp -> false 0 look_ahead: && || , ; 
pri_exp -> number 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 0 look_ahead: <= - , != + == . / ; < > >= * 

50 : 
var_assign -> var *= calc_exp 2 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: , ; 
calc_exp -> bool_exp 0 look_ahead: , ; 
calc_exp -> str_exp 0 look_ahead: , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - , != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ; 
bool_exp -> cmp_exp 0 look_ahead: && || , ; 
str_exp -> str_exp + add_exp 0 look_ahead: , + ; 
str_exp -> add_exp + str_exp 0 look_ahead: , + ; 
str_exp -> str 0 look_ahead: , + ; 
str_exp -> chr 0 look_ahead: , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ; 
cmp_exp -> true 0 look_ahead: && || , ; 
cmp_exp -> false 0 look_ahead: && || , ; 
pri_exp -> number 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 0 look_ahead: <= - , != + == . / ; < > >= * 

51 : 
var_assign -> var /= calc_exp 2 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: , ; 
calc_exp -> bool_exp 0 look_ahead: , ; 
calc_exp -> str_exp 0 look_ahead: , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - , != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ; 
bool_exp -> cmp_exp 0 look_ahead: && || , ; 
str_exp -> str_exp + add_exp 0 look_ahead: , + ; 
str_exp -> add_exp + str_exp 0 look_ahead: , + ; 
str_exp -> str 0 look_ahead: , + ; 
str_exp -> chr 0 look_ahead: , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ; 
cmp_exp -> true 0 look_ahead: && || , ; 
cmp_exp -> false 0 look_ahead: && || , ; 
pri_exp -> number 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 0 look_ahead: <= - , != + == . / ; < > >= * 

52 : reduce 67
add_exp -> var ++ 2 look_ahead: <= - != + == ; < > >= 

53 : reduce 68
add_exp -> var -- 2 look_ahead: <= - != + == ; < > >= 

54 : 
if_exp -> if_stmt else else_stmt 2 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
else_stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
else_stmt -> { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
else_stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

55 : 
while_exp -> while ( bool_exp ) { stmt_list } 2 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || ) 
bool_exp -> cmp_exp 0 look_ahead: && || ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

56 : 
var_assign -> var_assign , var = calc_exp 2 look_ahead: , ; 

57 : 
if_stmt -> if ( bool_exp ) { stmt_list } 2 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 2 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || ) 
bool_exp -> cmp_exp 0 look_ahead: && || ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

58 : 
add_exp -> add_exp + mul_exp 2 look_ahead: <= - != + == ; < > >= 
str_exp -> add_exp + str_exp 2 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
pri_exp -> number 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == ; < > >= * / 
add_exp -> add_exp + mul_exp 0 look_ahead: - + 
add_exp -> add_exp - mul_exp 0 look_ahead: - + 
add_exp -> - mul_exp 0 look_ahead: - + 
add_exp -> mul_exp 0 look_ahead: - + 
add_exp -> ++ var 0 look_ahead: - + 
add_exp -> -- var 0 look_ahead: - + 
add_exp -> var ++ 0 look_ahead: - + 
add_exp -> var -- 0 look_ahead: - + 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var 0 look_ahead: <= - != + == . ; < > >= * / 

59 : 
add_exp -> add_exp - mul_exp 2 look_ahead: <= - != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> number 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var 0 look_ahead: <= - != + == . ; < > >= * / 

60 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ; 
add_exp -> - mul_exp 0 look_ahead: && || - + ; 
add_exp -> mul_exp 0 look_ahead: && || - + ; 
add_exp -> ++ var 0 look_ahead: && || - + ; 
add_exp -> -- var 0 look_ahead: && || - + ; 
add_exp -> var ++ 0 look_ahead: && || - + ; 
add_exp -> var -- 0 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

61 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ; 
add_exp -> - mul_exp 0 look_ahead: && || - + ; 
add_exp -> mul_exp 0 look_ahead: && || - + ; 
add_exp -> ++ var 0 look_ahead: && || - + ; 
add_exp -> -- var 0 look_ahead: && || - + ; 
add_exp -> var ++ 0 look_ahead: && || - + ; 
add_exp -> var -- 0 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

62 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ; 
add_exp -> - mul_exp 0 look_ahead: && || - + ; 
add_exp -> mul_exp 0 look_ahead: && || - + ; 
add_exp -> ++ var 0 look_ahead: && || - + ; 
add_exp -> -- var 0 look_ahead: && || - + ; 
add_exp -> var ++ 0 look_ahead: && || - + ; 
add_exp -> var -- 0 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

63 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ; 
add_exp -> - mul_exp 0 look_ahead: && || - + ; 
add_exp -> mul_exp 0 look_ahead: && || - + ; 
add_exp -> ++ var 0 look_ahead: && || - + ; 
add_exp -> -- var 0 look_ahead: && || - + ; 
add_exp -> var ++ 0 look_ahead: && || - + ; 
add_exp -> var -- 0 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

64 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ; 
add_exp -> - mul_exp 0 look_ahead: && || - + ; 
add_exp -> mul_exp 0 look_ahead: && || - + ; 
add_exp -> ++ var 0 look_ahead: && || - + ; 
add_exp -> -- var 0 look_ahead: && || - + ; 
add_exp -> var ++ 0 look_ahead: && || - + ; 
add_exp -> var -- 0 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

65 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ; 
add_exp -> - mul_exp 0 look_ahead: && || - + ; 
add_exp -> mul_exp 0 look_ahead: && || - + ; 
add_exp -> ++ var 0 look_ahead: && || - + ; 
add_exp -> -- var 0 look_ahead: && || - + ; 
add_exp -> var ++ 0 look_ahead: && || - + ; 
add_exp -> var -- 0 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

66 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: && || ; 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

67 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: && || ; 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

68 : 
str_exp -> str_exp + add_exp 2 look_ahead: + ; 
add_exp -> add_exp + mul_exp 0 look_ahead: - + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: - + ; 
add_exp -> - mul_exp 0 look_ahead: - + ; 
add_exp -> mul_exp 0 look_ahead: - + ; 
add_exp -> ++ var 0 look_ahead: - + ; 
add_exp -> -- var 0 look_ahead: - + ; 
add_exp -> var ++ 0 look_ahead: - + ; 
add_exp -> var -- 0 look_ahead: - + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

69 : reduce 11
control_flow -> return calc_exp 2 look_ahead: ; 

70 : reduce 71
mul_exp -> pri_exp 1 look_ahead: <= - != + == ; < > >= * / 

71 : reduce 72
pri_exp -> number 1 look_ahead: <= - != + == ; < > >= * / 

72 : reduce 74
pri_exp -> apply_exp 1 look_ahead: <= - != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> apply_exp . var 1 look_ahead: <= - != + == . ; < > >= * / 

73 : reduce 63
add_exp -> - mul_exp 2 look_ahead: <= - != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - != + == ; < > >= * / 

74 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: - + ; * / 
mul_exp -> mul_exp * pri_exp 2 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> number 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var 0 look_ahead: <= - != + == . ; < > >= * / 

75 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 2 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> number 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var 0 look_ahead: <= - != + == . ; < > >= * / 

76 : reduce 65
add_exp -> ++ var 2 look_ahead: <= - != + == ; < > >= 

77 : reduce 66
add_exp -> -- var 2 look_ahead: <= - != + == ; < > >= 

78 : reduce 50
bool_exp -> ! cmp_exp 2 look_ahead: && || ; 

79 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: && || ; 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || ) 

80 : 
pri_exp -> ( add_exp ) 2 look_ahead: - + ; * / 
add_exp -> add_exp + mul_exp 1 look_ahead: <= - != + == < > >= ) 
add_exp -> add_exp - mul_exp 1 look_ahead: <= - != + == < > >= ) 
cmp_exp -> add_exp > add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: && || ) 
pri_exp -> ( add_exp ) 2 look_ahead: <= - != + == ; < > >= * / 

81 : 
bool_exp -> ! cmp_exp 1 look_ahead: && || ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

82 : reduce 51
bool_exp -> cmp_exp 1 look_ahead: && || ) 

83 : 
add_exp -> - mul_exp 1 look_ahead: <= - != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var 0 look_ahead: <= - != + == . < > >= ) * / 

84 : reduce 64
add_exp -> mul_exp 1 look_ahead: <= - != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - != + == < > >= ) * / 

85 : 
add_exp -> ++ var 1 look_ahead: <= - != + == < > >= ) 

86 : 
add_exp -> -- var 1 look_ahead: <= - != + == < > >= ) 

87 : reduce 78
add_exp -> var ++ 1 look_ahead: <= - != + == < > >= ) 
add_exp -> var -- 1 look_ahead: <= - != + == < > >= ) 
apply_exp -> var ( arg_list ) 1 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var 1 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 1 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var 1 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> var ( arg_list ) 1 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var 1 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var ( arg_list ) 1 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 1 look_ahead: <= - , != + == . / ; < > >= * 

88 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: && || ) 
pri_exp -> ( add_exp ) 1 look_ahead: <= - != + == < > >= ) * / 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || ) 
bool_exp -> cmp_exp 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - != + == < > >= ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var 0 look_ahead: <= - != + == . < > >= ) * / 

89 : reduce 59
cmp_exp -> true 1 look_ahead: && || ) 

90 : reduce 60
cmp_exp -> false 1 look_ahead: && || ) 

91 : reduce 71
mul_exp -> pri_exp 1 look_ahead: <= - != + == < > >= ) * / 

92 : reduce 72
pri_exp -> number 1 look_ahead: <= - != + == < > >= ) * / 

93 : reduce 74
pri_exp -> apply_exp 1 look_ahead: <= - != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 1 look_ahead: <= - != + == . < > >= ) * / 

94 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 2 look_ahead: - + . ; * / 

95 : reduce 14
var_def -> var_def , var 3 look_ahead: , ; 

96 : 
var_assign -> type_exp var = calc_exp 3 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: , ; 
calc_exp -> bool_exp 0 look_ahead: , ; 
calc_exp -> str_exp 0 look_ahead: , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - , != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ; 
bool_exp -> cmp_exp 0 look_ahead: && || , ; 
str_exp -> str_exp + add_exp 0 look_ahead: , + ; 
str_exp -> add_exp + str_exp 0 look_ahead: , + ; 
str_exp -> str 0 look_ahead: , + ; 
str_exp -> chr 0 look_ahead: , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: - , + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ; 
cmp_exp -> true 0 look_ahead: && || , ; 
cmp_exp -> false 0 look_ahead: && || , ; 
pri_exp -> number 0 look_ahead: - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ; * / 
apply_exp -> var 0 look_ahead: - , + . ; * / 

97 : 
func_def -> var ( par_list ) { stmt_list } 3 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
par_list -> par_list , type_exp var 1 look_ahead: , ) 

98 : 
apply_exp -> var ( arg_list ) 3 look_ahead: - + . ; * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

99 : 
par_list -> type_exp var 1 look_ahead: , ) 

100 : reduce 81
par_list -> e 1 look_ahead: , ) 
arg_list -> e 1 look_ahead: , ) 

101 : reduce 80
arg_list -> calc_exp 1 look_ahead: , ) 

102 : reduce 41
calc_exp -> add_exp 1 look_ahead: , ) 
add_exp -> add_exp + mul_exp 1 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 1 look_ahead: <= - , != + == < > >= ) 
str_exp -> add_exp + str_exp 1 look_ahead: , + ) 
cmp_exp -> add_exp > add_exp 1 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: && || , ) 

103 : reduce 42
calc_exp -> bool_exp 1 look_ahead: , ) 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || , ) 

104 : reduce 43
calc_exp -> str_exp 1 look_ahead: , ) 
str_exp -> str_exp + add_exp 1 look_ahead: , + ) 

105 : 
add_exp -> - mul_exp 1 look_ahead: <= - , != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var 0 look_ahead: <= - , != + == . / < > >= ) * 

106 : reduce 64
add_exp -> mul_exp 1 look_ahead: <= - , != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: - , + ) * / 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - != == + < > >= * / 

107 : 
add_exp -> ++ var 1 look_ahead: <= - , != + == < > >= ) 

108 : 
add_exp -> -- var 1 look_ahead: <= - , != + == < > >= ) 

109 : 
bool_exp -> ! cmp_exp 1 look_ahead: && || , ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

110 : reduce 51
bool_exp -> cmp_exp 1 look_ahead: && || , ) 

111 : reduce 46
str_exp -> str 1 look_ahead: , + ) 

112 : reduce 47
str_exp -> chr 1 look_ahead: , + ) 

113 : reduce 71
mul_exp -> pri_exp 1 look_ahead: - , + ) * / 

114 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: && || , ) 
pri_exp -> ( add_exp ) 1 look_ahead: - , + ) * / 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || ) 
bool_exp -> cmp_exp 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - != + == < > >= ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var 0 look_ahead: <= - != + == . < > >= ) * / 
pri_exp -> ( add_exp ) 1 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 1 look_ahead: <= - != + == < > >= ) * / 

115 : reduce 59
cmp_exp -> true 1 look_ahead: && || , ) 

116 : reduce 60
cmp_exp -> false 1 look_ahead: && || , ) 

117 : reduce 72
pri_exp -> number 1 look_ahead: - , + ) * / 

118 : reduce 74
pri_exp -> apply_exp 1 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 1 look_ahead: - , + . ) * / 

119 : reduce 18
var_assign -> var = calc_exp 3 look_ahead: , ; 

120 : reduce 41
calc_exp -> add_exp 1 look_ahead: , ; 
add_exp -> add_exp + mul_exp 1 look_ahead: <= - , != + == ; < > >= 
add_exp -> add_exp - mul_exp 1 look_ahead: <= - , != + == ; < > >= 
str_exp -> add_exp + str_exp 1 look_ahead: , + ; 
cmp_exp -> add_exp > add_exp 1 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 1 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 1 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 1 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 1 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 1 look_ahead: && || , ; 

121 : reduce 42
calc_exp -> bool_exp 1 look_ahead: , ; 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || , ; 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || , ; 

122 : reduce 43
calc_exp -> str_exp 1 look_ahead: , ; 
str_exp -> str_exp + add_exp 1 look_ahead: , + ; 

123 : 
add_exp -> - mul_exp 1 look_ahead: <= - , != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> number 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 0 look_ahead: <= - , != + == . / ; < > >= * 

124 : reduce 64
add_exp -> mul_exp 1 look_ahead: <= - , != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 1 look_ahead: - , + ; * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: - , + ; * / 

125 : 
add_exp -> ++ var 1 look_ahead: <= - , != + == ; < > >= 

126 : 
add_exp -> -- var 1 look_ahead: <= - , != + == ; < > >= 

127 : reduce 78
add_exp -> var ++ 1 look_ahead: <= - , != + == ; < > >= 
add_exp -> var -- 1 look_ahead: <= - , != + == ; < > >= 
apply_exp -> var ( arg_list ) 1 look_ahead: - , + . ; * / 
apply_exp -> var 1 look_ahead: - , + . ; * / 

128 : 
bool_exp -> ! cmp_exp 1 look_ahead: && || , ; 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ; 
cmp_exp -> true 0 look_ahead: && || , ; 
cmp_exp -> false 0 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

129 : reduce 51
bool_exp -> cmp_exp 1 look_ahead: && || , ; 

130 : reduce 46
str_exp -> str 1 look_ahead: , + ; 

131 : reduce 47
str_exp -> chr 1 look_ahead: , + ; 

132 : reduce 71
mul_exp -> pri_exp 1 look_ahead: - , + ; * / 

133 : 
cmp_exp -> ( bool_exp ) 1 look_ahead: && || , ; 
pri_exp -> ( add_exp ) 1 look_ahead: - , + ; * / 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || ) 
bool_exp -> cmp_exp 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - != + == < > >= ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var 0 look_ahead: <= - != + == . < > >= ) * / 
pri_exp -> ( add_exp ) 1 look_ahead: <= - != == + < > >= * / 

134 : reduce 59
cmp_exp -> true 1 look_ahead: && || , ; 

135 : reduce 60
cmp_exp -> false 1 look_ahead: && || , ; 

136 : reduce 72
pri_exp -> number 1 look_ahead: - , + ; * / 

137 : reduce 74
pri_exp -> apply_exp 1 look_ahead: - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: - , + . ; * / 
apply_exp -> apply_exp . var 1 look_ahead: - , + . ; * / 

138 : reduce 19
var_assign -> var += calc_exp 3 look_ahead: , ; 

139 : reduce 20
var_assign -> var -= calc_exp 3 look_ahead: , ; 

140 : reduce 21
var_assign -> var *= calc_exp 3 look_ahead: , ; 

141 : reduce 22
var_assign -> var /= calc_exp 3 look_ahead: , ; 

142 : reduce 34
if_exp -> if_stmt else else_stmt 3 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

143 : reduce 37
else_stmt -> if_exp 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

144 : 
else_stmt -> { stmt_list } 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt_list -> stmt_list stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

145 : 
else_stmt -> sg_stmt ; 1 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

146 : 
while_exp -> while ( bool_exp ) { stmt_list } 3 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || ) 

147 : 
var_assign -> var_assign , var = calc_exp 3 look_ahead: , ; 

148 : 
if_stmt -> if ( bool_exp ) { stmt_list } 3 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 3 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || ) 

149 : reduce 64
add_exp -> add_exp + mul_exp 3 look_ahead: <= - != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - != + == ; < > >= * / 
add_exp -> mul_exp 1 look_ahead: - + 

150 : reduce 45
str_exp -> add_exp + str_exp 3 look_ahead: + ; 
str_exp -> str_exp + add_exp 1 look_ahead: + ; 

151 : reduce 62
add_exp -> add_exp - mul_exp 3 look_ahead: <= - != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - != + == ; < > >= * / 

152 : reduce 53
cmp_exp -> add_exp > add_exp 3 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ; 

153 : 
add_exp -> - mul_exp 1 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

154 : reduce 64
add_exp -> mul_exp 1 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - + ; * / 

155 : 
add_exp -> ++ var 1 look_ahead: && || - + ; 

156 : 
add_exp -> -- var 1 look_ahead: && || - + ; 

157 : reduce 78
add_exp -> var ++ 1 look_ahead: && || - + ; 
add_exp -> var -- 1 look_ahead: && || - + ; 
apply_exp -> var ( arg_list ) 1 look_ahead: && || - + . ; * / 
apply_exp -> var 1 look_ahead: && || - + . ; * / 

158 : reduce 71
mul_exp -> pri_exp 1 look_ahead: && || - + ; * / 

159 : reduce 72
pri_exp -> number 1 look_ahead: && || - + ; * / 

160 : 
pri_exp -> ( add_exp ) 1 look_ahead: && || - + ; * / 
add_exp -> add_exp + mul_exp 0 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: - + ) 
add_exp -> - mul_exp 0 look_ahead: - + ) 
add_exp -> mul_exp 0 look_ahead: - + ) 
add_exp -> ++ var 0 look_ahead: - + ) 
add_exp -> -- var 0 look_ahead: - + ) 
add_exp -> var ++ 0 look_ahead: - + ) 
add_exp -> var -- 0 look_ahead: - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ) * / 
mul_exp -> pri_exp 0 look_ahead: - + ) * / 
pri_exp -> number 0 look_ahead: - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ) * / 
pri_exp -> apply_exp 0 look_ahead: - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> var 0 look_ahead: - + . ) * / 

161 : reduce 74
pri_exp -> apply_exp 1 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 1 look_ahead: && || - + . ; * / 

162 : reduce 54
cmp_exp -> add_exp >= add_exp 3 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ; 

163 : reduce 55
cmp_exp -> add_exp < add_exp 3 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ; 

164 : reduce 56
cmp_exp -> add_exp <= add_exp 3 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ; 

165 : reduce 57
cmp_exp -> add_exp == add_exp 3 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ; 

166 : reduce 58
cmp_exp -> add_exp != add_exp 3 look_ahead: && || ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ; 

167 : reduce 48
bool_exp -> bool_exp && cmp_exp 3 look_ahead: && || ; 

168 : reduce 49
bool_exp -> bool_exp || cmp_exp 3 look_ahead: && || ; 

169 : reduce 44
str_exp -> str_exp + add_exp 3 look_ahead: + ; 
add_exp -> add_exp + mul_exp 1 look_ahead: - + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: - + ; 

170 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> apply_exp . var 2 look_ahead: <= - != + == . ; < > >= * / 

171 : reduce 69
mul_exp -> mul_exp * pri_exp 3 look_ahead: - + ; * / 
mul_exp -> mul_exp * pri_exp 3 look_ahead: <= - != + == ; < > >= * / 

172 : reduce 70
mul_exp -> mul_exp / pri_exp 3 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 3 look_ahead: <= - != + == ; < > >= * / 

173 : reduce 52
cmp_exp -> ( bool_exp ) 3 look_ahead: && || ; 

174 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: && || ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

175 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: && || ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

176 : reduce 73
pri_exp -> ( add_exp ) 3 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 3 look_ahead: <= - != + == ; < > >= * / 

177 : 
add_exp -> add_exp + mul_exp 2 look_ahead: <= - != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var 0 look_ahead: <= - != + == . < > >= ) * / 

178 : 
add_exp -> add_exp - mul_exp 2 look_ahead: <= - != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var 0 look_ahead: <= - != + == . < > >= ) * / 

179 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ) 
add_exp -> - mul_exp 0 look_ahead: && || - + ) 
add_exp -> mul_exp 0 look_ahead: && || - + ) 
add_exp -> ++ var 0 look_ahead: && || - + ) 
add_exp -> -- var 0 look_ahead: && || - + ) 
add_exp -> var ++ 0 look_ahead: && || - + ) 
add_exp -> var -- 0 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

180 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ) 
add_exp -> - mul_exp 0 look_ahead: && || - + ) 
add_exp -> mul_exp 0 look_ahead: && || - + ) 
add_exp -> ++ var 0 look_ahead: && || - + ) 
add_exp -> -- var 0 look_ahead: && || - + ) 
add_exp -> var ++ 0 look_ahead: && || - + ) 
add_exp -> var -- 0 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

181 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ) 
add_exp -> - mul_exp 0 look_ahead: && || - + ) 
add_exp -> mul_exp 0 look_ahead: && || - + ) 
add_exp -> ++ var 0 look_ahead: && || - + ) 
add_exp -> -- var 0 look_ahead: && || - + ) 
add_exp -> var ++ 0 look_ahead: && || - + ) 
add_exp -> var -- 0 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

182 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ) 
add_exp -> - mul_exp 0 look_ahead: && || - + ) 
add_exp -> mul_exp 0 look_ahead: && || - + ) 
add_exp -> ++ var 0 look_ahead: && || - + ) 
add_exp -> -- var 0 look_ahead: && || - + ) 
add_exp -> var ++ 0 look_ahead: && || - + ) 
add_exp -> var -- 0 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

183 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ) 
add_exp -> - mul_exp 0 look_ahead: && || - + ) 
add_exp -> mul_exp 0 look_ahead: && || - + ) 
add_exp -> ++ var 0 look_ahead: && || - + ) 
add_exp -> -- var 0 look_ahead: && || - + ) 
add_exp -> var ++ 0 look_ahead: && || - + ) 
add_exp -> var -- 0 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

184 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - + ) 
add_exp -> - mul_exp 0 look_ahead: && || - + ) 
add_exp -> mul_exp 0 look_ahead: && || - + ) 
add_exp -> ++ var 0 look_ahead: && || - + ) 
add_exp -> -- var 0 look_ahead: && || - + ) 
add_exp -> var ++ 0 look_ahead: && || - + ) 
add_exp -> var -- 0 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

185 : reduce 50
bool_exp -> ! cmp_exp 2 look_ahead: && || ) 

186 : reduce 63
add_exp -> - mul_exp 2 look_ahead: <= - != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - != + == < > >= ) * / 

187 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var 0 look_ahead: <= - != + == . < > >= ) * / 

188 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var 0 look_ahead: <= - != + == . < > >= ) * / 

189 : reduce 65
add_exp -> ++ var 2 look_ahead: <= - != + == < > >= ) 

190 : reduce 66
add_exp -> -- var 2 look_ahead: <= - != + == < > >= ) 

191 : reduce 67
add_exp -> var ++ 2 look_ahead: <= - != + == < > >= ) 

192 : reduce 68
add_exp -> var -- 2 look_ahead: <= - != + == < > >= ) 

193 : 
apply_exp -> var ( arg_list ) 2 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 2 look_ahead: <= - != + == . ; < > >= * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

194 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: && || ) 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || ) 

195 : 
pri_exp -> ( add_exp ) 2 look_ahead: <= - != + == < > >= ) * / 
add_exp -> add_exp + mul_exp 1 look_ahead: <= - != + == < > >= ) 
add_exp -> add_exp - mul_exp 1 look_ahead: <= - != + == < > >= ) 
cmp_exp -> add_exp > add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: && || ) 

196 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 2 look_ahead: <= - != + == . < > >= ) * / 

197 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 3 look_ahead: - + . ; * / 

198 : reduce 17
var_assign -> type_exp var = calc_exp 4 look_ahead: , ; 

199 : 
func_def -> var ( par_list ) { stmt_list } 4 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

200 : 
par_list -> par_list , type_exp var 2 look_ahead: , ) 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 

201 : reduce 77
apply_exp -> var ( arg_list ) 4 look_ahead: - + . ; * / 

202 : 
arg_list -> arg_list , calc_exp 2 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var 0 look_ahead: <= - , != + == . / < > >= ) * 

203 : reduce 31
par_list -> type_exp var 2 look_ahead: , ) 

204 : 
add_exp -> add_exp + mul_exp 2 look_ahead: <= - , != + == < > >= ) 
str_exp -> add_exp + str_exp 2 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
pri_exp -> number 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == < > >= ) * / 
add_exp -> add_exp + mul_exp 0 look_ahead: - + 
add_exp -> add_exp - mul_exp 0 look_ahead: - + 
add_exp -> - mul_exp 0 look_ahead: - + 
add_exp -> mul_exp 0 look_ahead: - + 
add_exp -> ++ var 0 look_ahead: - + 
add_exp -> -- var 0 look_ahead: - + 
add_exp -> var ++ 0 look_ahead: - + 
add_exp -> var -- 0 look_ahead: - + 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var 0 look_ahead: <= - , != + == . / < > >= ) * 

205 : 
add_exp -> add_exp - mul_exp 2 look_ahead: <= - , != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var 0 look_ahead: <= - , != + == . / < > >= ) * 

206 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> mul_exp 0 look_ahead: && || - , + ) 
add_exp -> ++ var 0 look_ahead: && || - , + ) 
add_exp -> -- var 0 look_ahead: && || - , + ) 
add_exp -> var ++ 0 look_ahead: && || - , + ) 
add_exp -> var -- 0 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

207 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> mul_exp 0 look_ahead: && || - , + ) 
add_exp -> ++ var 0 look_ahead: && || - , + ) 
add_exp -> -- var 0 look_ahead: && || - , + ) 
add_exp -> var ++ 0 look_ahead: && || - , + ) 
add_exp -> var -- 0 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

208 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> mul_exp 0 look_ahead: && || - , + ) 
add_exp -> ++ var 0 look_ahead: && || - , + ) 
add_exp -> -- var 0 look_ahead: && || - , + ) 
add_exp -> var ++ 0 look_ahead: && || - , + ) 
add_exp -> var -- 0 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

209 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> mul_exp 0 look_ahead: && || - , + ) 
add_exp -> ++ var 0 look_ahead: && || - , + ) 
add_exp -> -- var 0 look_ahead: && || - , + ) 
add_exp -> var ++ 0 look_ahead: && || - , + ) 
add_exp -> var -- 0 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

210 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> mul_exp 0 look_ahead: && || - , + ) 
add_exp -> ++ var 0 look_ahead: && || - , + ) 
add_exp -> -- var 0 look_ahead: && || - , + ) 
add_exp -> var ++ 0 look_ahead: && || - , + ) 
add_exp -> var -- 0 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

211 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> - mul_exp 0 look_ahead: && || - , + ) 
add_exp -> mul_exp 0 look_ahead: && || - , + ) 
add_exp -> ++ var 0 look_ahead: && || - , + ) 
add_exp -> -- var 0 look_ahead: && || - , + ) 
add_exp -> var ++ 0 look_ahead: && || - , + ) 
add_exp -> var -- 0 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

212 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: && || , ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

213 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: && || , ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

214 : 
str_exp -> str_exp + add_exp 2 look_ahead: , + ) 
add_exp -> add_exp + mul_exp 0 look_ahead: - , + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: - , + ) 
add_exp -> - mul_exp 0 look_ahead: - , + ) 
add_exp -> mul_exp 0 look_ahead: - , + ) 
add_exp -> ++ var 0 look_ahead: - , + ) 
add_exp -> -- var 0 look_ahead: - , + ) 
add_exp -> var ++ 0 look_ahead: - , + ) 
add_exp -> var -- 0 look_ahead: - , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

215 : reduce 63
add_exp -> - mul_exp 2 look_ahead: <= - , != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - , != + == < > >= ) * / 

216 : reduce 71
mul_exp -> pri_exp 1 look_ahead: <= - , != + == < > >= ) * / 

217 : reduce 72
pri_exp -> number 1 look_ahead: <= - , != + == < > >= ) * / 

218 : 
pri_exp -> ( add_exp ) 1 look_ahead: <= - , != + == < > >= ) * / 
add_exp -> add_exp + mul_exp 0 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: - + ) 
add_exp -> - mul_exp 0 look_ahead: - + ) 
add_exp -> mul_exp 0 look_ahead: - + ) 
add_exp -> ++ var 0 look_ahead: - + ) 
add_exp -> -- var 0 look_ahead: - + ) 
add_exp -> var ++ 0 look_ahead: - + ) 
add_exp -> var -- 0 look_ahead: - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ) * / 
mul_exp -> pri_exp 0 look_ahead: - + ) * / 
pri_exp -> number 0 look_ahead: - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ) * / 
pri_exp -> apply_exp 0 look_ahead: - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> var 0 look_ahead: - + . ) * / 

219 : reduce 74
pri_exp -> apply_exp 1 look_ahead: <= - , != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 1 look_ahead: <= - , != + == . / < > >= ) * 

220 : reduce 78
apply_exp -> var ( arg_list ) 1 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var 1 look_ahead: <= - , != + == . / < > >= ) * 

221 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: - , + ) * / 
mul_exp -> mul_exp * pri_exp 2 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var 0 look_ahead: <= - , != + == . / < > >= ) * 

222 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 2 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var 0 look_ahead: <= - , != + == . / < > >= ) * 

223 : reduce 65
add_exp -> ++ var 2 look_ahead: <= - , != + == < > >= ) 

224 : reduce 66
add_exp -> -- var 2 look_ahead: <= - , != + == < > >= ) 

225 : reduce 50
bool_exp -> ! cmp_exp 2 look_ahead: && || , ) 

226 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: && || , ) 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || ) 

227 : 
pri_exp -> ( add_exp ) 2 look_ahead: - , + ) * / 
add_exp -> add_exp + mul_exp 1 look_ahead: <= - != + == < > >= ) 
add_exp -> add_exp - mul_exp 1 look_ahead: <= - != + == < > >= ) 
cmp_exp -> add_exp > add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: && || ) 
pri_exp -> ( add_exp ) 2 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 2 look_ahead: <= - != + == < > >= ) * / 

228 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 2 look_ahead: - , + . ) * / 

229 : 
add_exp -> add_exp + mul_exp 2 look_ahead: <= - , != + == ; < > >= 
str_exp -> add_exp + str_exp 2 look_ahead: , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
str_exp -> str_exp + add_exp 0 look_ahead: , + ; 
str_exp -> add_exp + str_exp 0 look_ahead: , + ; 
str_exp -> str 0 look_ahead: , + ; 
str_exp -> chr 0 look_ahead: , + ; 
pri_exp -> number 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == ; < > >= * / 
add_exp -> add_exp + mul_exp 0 look_ahead: - + 
add_exp -> add_exp - mul_exp 0 look_ahead: - + 
add_exp -> - mul_exp 0 look_ahead: - + 
add_exp -> mul_exp 0 look_ahead: - + 
add_exp -> ++ var 0 look_ahead: - + 
add_exp -> -- var 0 look_ahead: - + 
add_exp -> var ++ 0 look_ahead: - + 
add_exp -> var -- 0 look_ahead: - + 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 0 look_ahead: <= - , != + == . / ; < > >= * 

230 : 
add_exp -> add_exp - mul_exp 2 look_ahead: <= - , != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> number 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 0 look_ahead: <= - , != + == . / ; < > >= * 

231 : 
cmp_exp -> add_exp > add_exp 2 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> mul_exp 0 look_ahead: && || - , + ; 
add_exp -> ++ var 0 look_ahead: && || - , + ; 
add_exp -> -- var 0 look_ahead: && || - , + ; 
add_exp -> var ++ 0 look_ahead: && || - , + ; 
add_exp -> var -- 0 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

232 : 
cmp_exp -> add_exp >= add_exp 2 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> mul_exp 0 look_ahead: && || - , + ; 
add_exp -> ++ var 0 look_ahead: && || - , + ; 
add_exp -> -- var 0 look_ahead: && || - , + ; 
add_exp -> var ++ 0 look_ahead: && || - , + ; 
add_exp -> var -- 0 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

233 : 
cmp_exp -> add_exp < add_exp 2 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> mul_exp 0 look_ahead: && || - , + ; 
add_exp -> ++ var 0 look_ahead: && || - , + ; 
add_exp -> -- var 0 look_ahead: && || - , + ; 
add_exp -> var ++ 0 look_ahead: && || - , + ; 
add_exp -> var -- 0 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

234 : 
cmp_exp -> add_exp <= add_exp 2 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> mul_exp 0 look_ahead: && || - , + ; 
add_exp -> ++ var 0 look_ahead: && || - , + ; 
add_exp -> -- var 0 look_ahead: && || - , + ; 
add_exp -> var ++ 0 look_ahead: && || - , + ; 
add_exp -> var -- 0 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

235 : 
cmp_exp -> add_exp == add_exp 2 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> mul_exp 0 look_ahead: && || - , + ; 
add_exp -> ++ var 0 look_ahead: && || - , + ; 
add_exp -> -- var 0 look_ahead: && || - , + ; 
add_exp -> var ++ 0 look_ahead: && || - , + ; 
add_exp -> var -- 0 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

236 : 
cmp_exp -> add_exp != add_exp 2 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> - mul_exp 0 look_ahead: && || - , + ; 
add_exp -> mul_exp 0 look_ahead: && || - , + ; 
add_exp -> ++ var 0 look_ahead: && || - , + ; 
add_exp -> -- var 0 look_ahead: && || - , + ; 
add_exp -> var ++ 0 look_ahead: && || - , + ; 
add_exp -> var -- 0 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

237 : 
bool_exp -> bool_exp && cmp_exp 2 look_ahead: && || , ; 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ; 
cmp_exp -> true 0 look_ahead: && || , ; 
cmp_exp -> false 0 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

238 : 
bool_exp -> bool_exp || cmp_exp 2 look_ahead: && || , ; 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ; 
cmp_exp -> true 0 look_ahead: && || , ; 
cmp_exp -> false 0 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

239 : 
str_exp -> str_exp + add_exp 2 look_ahead: , + ; 
add_exp -> add_exp + mul_exp 0 look_ahead: - , + ; 
add_exp -> add_exp - mul_exp 0 look_ahead: - , + ; 
add_exp -> - mul_exp 0 look_ahead: - , + ; 
add_exp -> mul_exp 0 look_ahead: - , + ; 
add_exp -> ++ var 0 look_ahead: - , + ; 
add_exp -> -- var 0 look_ahead: - , + ; 
add_exp -> var ++ 0 look_ahead: - , + ; 
add_exp -> var -- 0 look_ahead: - , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: - , + ; * / 
pri_exp -> number 0 look_ahead: - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ; * / 
apply_exp -> var 0 look_ahead: - , + . ; * / 

240 : reduce 63
add_exp -> - mul_exp 2 look_ahead: <= - , != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - , != + == ; < > >= * / 

241 : reduce 71
mul_exp -> pri_exp 1 look_ahead: <= - , != + == ; < > >= * / 

242 : reduce 72
pri_exp -> number 1 look_ahead: <= - , != + == ; < > >= * / 

243 : 
pri_exp -> ( add_exp ) 1 look_ahead: <= - , != + == ; < > >= * / 
add_exp -> add_exp + mul_exp 0 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: - + ) 
add_exp -> - mul_exp 0 look_ahead: - + ) 
add_exp -> mul_exp 0 look_ahead: - + ) 
add_exp -> ++ var 0 look_ahead: - + ) 
add_exp -> -- var 0 look_ahead: - + ) 
add_exp -> var ++ 0 look_ahead: - + ) 
add_exp -> var -- 0 look_ahead: - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ) * / 
mul_exp -> pri_exp 0 look_ahead: - + ) * / 
pri_exp -> number 0 look_ahead: - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ) * / 
pri_exp -> apply_exp 0 look_ahead: - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> var 0 look_ahead: - + . ) * / 

244 : reduce 74
pri_exp -> apply_exp 1 look_ahead: <= - , != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 1 look_ahead: <= - , != + == . / ; < > >= * 

245 : reduce 78
apply_exp -> var ( arg_list ) 1 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 1 look_ahead: <= - , != + == . / ; < > >= * 

246 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: - , + ; * / 
pri_exp -> number 0 look_ahead: - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ; * / 
apply_exp -> var 0 look_ahead: - , + . ; * / 

247 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: - , + ; * / 
pri_exp -> number 0 look_ahead: - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ; * / 
apply_exp -> var 0 look_ahead: - , + . ; * / 

248 : reduce 65
add_exp -> ++ var 2 look_ahead: <= - , != + == ; < > >= 

249 : reduce 66
add_exp -> -- var 2 look_ahead: <= - , != + == ; < > >= 

250 : reduce 67
add_exp -> var ++ 2 look_ahead: <= - , != + == ; < > >= 

251 : reduce 68
add_exp -> var -- 2 look_ahead: <= - , != + == ; < > >= 

252 : 
apply_exp -> var ( arg_list ) 2 look_ahead: - , + . ; * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

253 : reduce 50
bool_exp -> ! cmp_exp 2 look_ahead: && || , ; 

254 : 
cmp_exp -> ( bool_exp ) 2 look_ahead: && || , ; 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || ) 

255 : 
pri_exp -> ( add_exp ) 2 look_ahead: - , + ; * / 
add_exp -> add_exp + mul_exp 1 look_ahead: <= - != + == < > >= ) 
add_exp -> add_exp - mul_exp 1 look_ahead: <= - != + == < > >= ) 
cmp_exp -> add_exp > add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 1 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 1 look_ahead: && || ) 
pri_exp -> ( add_exp ) 2 look_ahead: <= - != == + < > >= * / 

256 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: - , + . ; * / 
apply_exp -> apply_exp . var 2 look_ahead: - , + . ; * / 

257 : 
else_stmt -> { stmt_list } 2 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt_list -> stmt_list stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

258 : reduce 2
stmt_list -> stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

259 : 
stmt -> var_def ; 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 1 look_ahead: , ; 

260 : reduce 4
stmt -> func_def 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

261 : reduce 5
stmt -> if_exp 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

262 : reduce 6
stmt -> while_exp 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

263 : 
stmt -> sg_stmt ; 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

264 : reduce 78
func_def -> var ( par_list ) { stmt_list } 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
type_exp -> var 1 look_ahead: var 
var_assign -> var = calc_exp 1 look_ahead: , ; 
var_assign -> var += calc_exp 1 look_ahead: , ; 
var_assign -> var -= calc_exp 1 look_ahead: , ; 
var_assign -> var *= calc_exp 1 look_ahead: , ; 
var_assign -> var /= calc_exp 1 look_ahead: , ; 
add_exp -> var ++ 1 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 1 look_ahead: <= - != + == ; < > >= 
apply_exp -> var ( arg_list ) 1 look_ahead: - + . ; * / 
apply_exp -> var 1 look_ahead: - + . ; * / 

265 : reduce 33
if_exp -> if_stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

266 : 
while_exp -> while ( bool_exp ) { stmt_list } 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

267 : 
if_stmt -> if ( bool_exp ) { stmt_list } 1 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 1 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 

268 : reduce 39
else_stmt -> sg_stmt ; 2 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

269 : 
while_exp -> while ( bool_exp ) { stmt_list } 4 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

270 : 
var_assign -> var_assign , var = calc_exp 4 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: , ; 
calc_exp -> bool_exp 0 look_ahead: , ; 
calc_exp -> str_exp 0 look_ahead: , ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - , != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - , != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ; 
bool_exp -> cmp_exp 0 look_ahead: && || , ; 
str_exp -> str_exp + add_exp 0 look_ahead: , + ; 
str_exp -> add_exp + str_exp 0 look_ahead: , + ; 
str_exp -> str 0 look_ahead: , + ; 
str_exp -> chr 0 look_ahead: , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: - , + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ; 
cmp_exp -> true 0 look_ahead: && || , ; 
cmp_exp -> false 0 look_ahead: && || , ; 
pri_exp -> number 0 look_ahead: - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ; * / 
apply_exp -> var 0 look_ahead: - , + . ; * / 

271 : 
if_stmt -> if ( bool_exp ) { stmt_list } 4 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 4 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

272 : 
add_exp -> add_exp + mul_exp 2 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

273 : 
add_exp -> add_exp - mul_exp 2 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

274 : reduce 63
add_exp -> - mul_exp 2 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - + ; * / 

275 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

276 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: && || - + ; * / 
pri_exp -> number 0 look_ahead: && || - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ; * / 
apply_exp -> var 0 look_ahead: && || - + . ; * / 

277 : reduce 65
add_exp -> ++ var 2 look_ahead: && || - + ; 

278 : reduce 66
add_exp -> -- var 2 look_ahead: && || - + ; 

279 : reduce 67
add_exp -> var ++ 2 look_ahead: && || - + ; 

280 : reduce 68
add_exp -> var -- 2 look_ahead: && || - + ; 

281 : 
apply_exp -> var ( arg_list ) 2 look_ahead: && || - + . ; * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

282 : 
pri_exp -> ( add_exp ) 2 look_ahead: && || - + ; * / 
add_exp -> add_exp + mul_exp 1 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: - + ) 

283 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 2 look_ahead: && || - + . ; * / 

284 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: <= - != + == . ; < > >= * / 
apply_exp -> apply_exp . var 3 look_ahead: <= - != + == . ; < > >= * / 

285 : reduce 48
bool_exp -> bool_exp && cmp_exp 3 look_ahead: && || ) 

286 : reduce 49
bool_exp -> bool_exp || cmp_exp 3 look_ahead: && || ) 

287 : reduce 61
add_exp -> add_exp + mul_exp 3 look_ahead: <= - != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - != + == < > >= ) * / 

288 : reduce 62
add_exp -> add_exp - mul_exp 3 look_ahead: <= - != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - != + == < > >= ) * / 

289 : reduce 53
cmp_exp -> add_exp > add_exp 3 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ) 

290 : 
add_exp -> - mul_exp 1 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

291 : reduce 64
add_exp -> mul_exp 1 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - + ) * / 

292 : 
add_exp -> ++ var 1 look_ahead: && || - + ) 

293 : 
add_exp -> -- var 1 look_ahead: && || - + ) 

294 : reduce 78
add_exp -> var ++ 1 look_ahead: && || - + ) 
add_exp -> var -- 1 look_ahead: && || - + ) 
apply_exp -> var ( arg_list ) 1 look_ahead: && || - + . ) * / 
apply_exp -> var 1 look_ahead: && || - + . ) * / 

295 : reduce 71
mul_exp -> pri_exp 1 look_ahead: && || - + ) * / 

296 : reduce 72
pri_exp -> number 1 look_ahead: && || - + ) * / 

297 : 
pri_exp -> ( add_exp ) 1 look_ahead: && || - + ) * / 
add_exp -> add_exp + mul_exp 0 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: - + ) 
add_exp -> - mul_exp 0 look_ahead: - + ) 
add_exp -> mul_exp 0 look_ahead: - + ) 
add_exp -> ++ var 0 look_ahead: - + ) 
add_exp -> -- var 0 look_ahead: - + ) 
add_exp -> var ++ 0 look_ahead: - + ) 
add_exp -> var -- 0 look_ahead: - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ) * / 
mul_exp -> pri_exp 0 look_ahead: - + ) * / 
pri_exp -> number 0 look_ahead: - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ) * / 
pri_exp -> apply_exp 0 look_ahead: - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> var 0 look_ahead: - + . ) * / 

298 : reduce 74
pri_exp -> apply_exp 1 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 1 look_ahead: && || - + . ) * / 

299 : reduce 54
cmp_exp -> add_exp >= add_exp 3 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ) 

300 : reduce 55
cmp_exp -> add_exp < add_exp 3 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ) 

301 : reduce 56
cmp_exp -> add_exp <= add_exp 3 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ) 

302 : reduce 57
cmp_exp -> add_exp == add_exp 3 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ) 

303 : reduce 58
cmp_exp -> add_exp != add_exp 3 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - + ) 

304 : reduce 69
mul_exp -> mul_exp * pri_exp 3 look_ahead: <= - != + == < > >= ) * / 

305 : reduce 70
mul_exp -> mul_exp / pri_exp 3 look_ahead: <= - != + == < > >= ) * / 

306 : 
apply_exp -> var ( arg_list ) 3 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 3 look_ahead: <= - != + == . ; < > >= * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

307 : reduce 52
cmp_exp -> ( bool_exp ) 3 look_ahead: && || ) 

308 : reduce 73
pri_exp -> ( add_exp ) 3 look_ahead: <= - != + == < > >= ) * / 

309 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> apply_exp . var 3 look_ahead: <= - != + == . < > >= ) * / 

310 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: - + . ; * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

311 : 
func_def -> var ( par_list ) { stmt_list } 5 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt_list -> stmt_list stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

312 : 
par_list -> par_list , type_exp var 3 look_ahead: , ) 

313 : reduce 79
arg_list -> arg_list , calc_exp 3 look_ahead: , ) 

314 : reduce 64
add_exp -> add_exp + mul_exp 3 look_ahead: <= - , != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - , != + == < > >= ) * / 
add_exp -> mul_exp 1 look_ahead: - + 

315 : reduce 45
str_exp -> add_exp + str_exp 3 look_ahead: , + ) 
str_exp -> str_exp + add_exp 1 look_ahead: , + ) 

316 : reduce 62
add_exp -> add_exp - mul_exp 3 look_ahead: <= - , != + == < > >= ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - , != + == < > >= ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - , != + == < > >= ) * / 

317 : reduce 53
cmp_exp -> add_exp > add_exp 3 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ) 

318 : 
add_exp -> - mul_exp 1 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

319 : reduce 64
add_exp -> mul_exp 1 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - , + ) * / 

320 : 
add_exp -> ++ var 1 look_ahead: && || - , + ) 

321 : 
add_exp -> -- var 1 look_ahead: && || - , + ) 

322 : reduce 78
add_exp -> var ++ 1 look_ahead: && || - , + ) 
add_exp -> var -- 1 look_ahead: && || - , + ) 
apply_exp -> var ( arg_list ) 1 look_ahead: && || - , + . ) * / 
apply_exp -> var 1 look_ahead: && || - , + . ) * / 

323 : reduce 71
mul_exp -> pri_exp 1 look_ahead: && || - , + ) * / 

324 : reduce 72
pri_exp -> number 1 look_ahead: && || - , + ) * / 

325 : 
pri_exp -> ( add_exp ) 1 look_ahead: && || - , + ) * / 
add_exp -> add_exp + mul_exp 0 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: - + ) 
add_exp -> - mul_exp 0 look_ahead: - + ) 
add_exp -> mul_exp 0 look_ahead: - + ) 
add_exp -> ++ var 0 look_ahead: - + ) 
add_exp -> -- var 0 look_ahead: - + ) 
add_exp -> var ++ 0 look_ahead: - + ) 
add_exp -> var -- 0 look_ahead: - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ) * / 
mul_exp -> pri_exp 0 look_ahead: - + ) * / 
pri_exp -> number 0 look_ahead: - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ) * / 
pri_exp -> apply_exp 0 look_ahead: - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> var 0 look_ahead: - + . ) * / 

326 : reduce 74
pri_exp -> apply_exp 1 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 1 look_ahead: && || - , + . ) * / 

327 : reduce 54
cmp_exp -> add_exp >= add_exp 3 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ) 

328 : reduce 55
cmp_exp -> add_exp < add_exp 3 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ) 

329 : reduce 56
cmp_exp -> add_exp <= add_exp 3 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ) 

330 : reduce 57
cmp_exp -> add_exp == add_exp 3 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ) 

331 : reduce 58
cmp_exp -> add_exp != add_exp 3 look_ahead: && || , ) 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ) 

332 : reduce 48
bool_exp -> bool_exp && cmp_exp 3 look_ahead: && || , ) 

333 : reduce 49
bool_exp -> bool_exp || cmp_exp 3 look_ahead: && || , ) 

334 : reduce 44
str_exp -> str_exp + add_exp 3 look_ahead: , + ) 
add_exp -> add_exp + mul_exp 1 look_ahead: - , + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: - , + ) 

335 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var 0 look_ahead: <= - , != + == . / < > >= ) * 

336 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> number 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == < > >= ) * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == < > >= ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> var 0 look_ahead: <= - , != + == . / < > >= ) * 

337 : 
pri_exp -> ( add_exp ) 2 look_ahead: <= - , != + == < > >= ) * / 
add_exp -> add_exp + mul_exp 1 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: - + ) 

338 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 2 look_ahead: <= - , != + == . / < > >= ) * 

339 : 
apply_exp -> var ( arg_list ) 2 look_ahead: <= - , != + == . / < > >= ) * 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

340 : reduce 69
mul_exp -> mul_exp * pri_exp 3 look_ahead: - , + ) * / 
mul_exp -> mul_exp * pri_exp 3 look_ahead: <= - != == + < > >= * / 

341 : reduce 70
mul_exp -> mul_exp / pri_exp 3 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 3 look_ahead: <= - != == + < > >= * / 

342 : reduce 52
cmp_exp -> ( bool_exp ) 3 look_ahead: && || , ) 

343 : reduce 73
pri_exp -> ( add_exp ) 3 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 3 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 3 look_ahead: <= - != + == < > >= ) * / 

344 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 3 look_ahead: - , + . ) * / 

345 : reduce 64
add_exp -> add_exp + mul_exp 3 look_ahead: <= - , != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - , != + == ; < > >= * / 
add_exp -> mul_exp 1 look_ahead: - + 

346 : reduce 45
str_exp -> add_exp + str_exp 3 look_ahead: , + ; 
str_exp -> str_exp + add_exp 1 look_ahead: , + ; 

347 : reduce 62
add_exp -> add_exp - mul_exp 3 look_ahead: <= - , != + == ; < > >= 
mul_exp -> mul_exp * pri_exp 1 look_ahead: <= - , != + == ; < > >= * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: <= - , != + == ; < > >= * / 

348 : reduce 53
cmp_exp -> add_exp > add_exp 3 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ; 

349 : 
add_exp -> - mul_exp 1 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

350 : reduce 64
add_exp -> mul_exp 1 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - , + ; * / 

351 : 
add_exp -> ++ var 1 look_ahead: && || - , + ; 

352 : 
add_exp -> -- var 1 look_ahead: && || - , + ; 

353 : reduce 78
add_exp -> var ++ 1 look_ahead: && || - , + ; 
add_exp -> var -- 1 look_ahead: && || - , + ; 
apply_exp -> var ( arg_list ) 1 look_ahead: && || - , + . ; * / 
apply_exp -> var 1 look_ahead: && || - , + . ; * / 

354 : reduce 71
mul_exp -> pri_exp 1 look_ahead: && || - , + ; * / 

355 : reduce 72
pri_exp -> number 1 look_ahead: && || - , + ; * / 

356 : 
pri_exp -> ( add_exp ) 1 look_ahead: && || - , + ; * / 
add_exp -> add_exp + mul_exp 0 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 0 look_ahead: - + ) 
add_exp -> - mul_exp 0 look_ahead: - + ) 
add_exp -> mul_exp 0 look_ahead: - + ) 
add_exp -> ++ var 0 look_ahead: - + ) 
add_exp -> -- var 0 look_ahead: - + ) 
add_exp -> var ++ 0 look_ahead: - + ) 
add_exp -> var -- 0 look_ahead: - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ) * / 
mul_exp -> pri_exp 0 look_ahead: - + ) * / 
pri_exp -> number 0 look_ahead: - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ) * / 
pri_exp -> apply_exp 0 look_ahead: - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ) * / 
apply_exp -> var 0 look_ahead: - + . ) * / 

357 : reduce 74
pri_exp -> apply_exp 1 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 1 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 1 look_ahead: && || - , + . ; * / 

358 : reduce 54
cmp_exp -> add_exp >= add_exp 3 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ; 

359 : reduce 55
cmp_exp -> add_exp < add_exp 3 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ; 

360 : reduce 56
cmp_exp -> add_exp <= add_exp 3 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ; 

361 : reduce 57
cmp_exp -> add_exp == add_exp 3 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ; 

362 : reduce 58
cmp_exp -> add_exp != add_exp 3 look_ahead: && || , ; 
add_exp -> add_exp + mul_exp 1 look_ahead: && || - , + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: && || - , + ; 

363 : reduce 48
bool_exp -> bool_exp && cmp_exp 3 look_ahead: && || , ; 

364 : reduce 49
bool_exp -> bool_exp || cmp_exp 3 look_ahead: && || , ; 

365 : reduce 44
str_exp -> str_exp + add_exp 3 look_ahead: , + ; 
add_exp -> add_exp + mul_exp 1 look_ahead: - , + ; 
add_exp -> add_exp - mul_exp 1 look_ahead: - , + ; 

366 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> number 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 0 look_ahead: <= - , != + == . / ; < > >= * 

367 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> number 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - , != + == ; < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - , != + == ; < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> var 0 look_ahead: <= - , != + == . / ; < > >= * 

368 : 
pri_exp -> ( add_exp ) 2 look_ahead: <= - , != + == ; < > >= * / 
add_exp -> add_exp + mul_exp 1 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: - + ) 

369 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 2 look_ahead: <= - , != + == . / ; < > >= * 

370 : 
apply_exp -> var ( arg_list ) 2 look_ahead: <= - , != + == . / ; < > >= * 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

371 : reduce 69
mul_exp -> mul_exp * pri_exp 3 look_ahead: - , + ; * / 

372 : reduce 70
mul_exp -> mul_exp / pri_exp 3 look_ahead: - , + ; * / 

373 : 
apply_exp -> var ( arg_list ) 3 look_ahead: - , + . ; * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

374 : reduce 52
cmp_exp -> ( bool_exp ) 3 look_ahead: && || , ; 

375 : reduce 73
pri_exp -> ( add_exp ) 3 look_ahead: - , + ; * / 
pri_exp -> ( add_exp ) 3 look_ahead: <= - != == + < > >= * / 

376 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: - , + . ; * / 
apply_exp -> apply_exp . var 3 look_ahead: - , + . ; * / 

377 : reduce 38
else_stmt -> { stmt_list } 3 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

378 : reduce 1
stmt_list -> stmt_list stmt 2 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

379 : reduce 3
stmt -> var_def ; 2 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

380 : reduce 7
stmt -> sg_stmt ; 2 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

381 : 
func_def -> var ( par_list ) { stmt_list } 2 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
apply_exp -> var ( arg_list ) 2 look_ahead: - + . ; * / 
par_list -> par_list , type_exp var 0 look_ahead: , ) 
par_list -> type_exp var 0 look_ahead: , ) 
par_list -> e 0 look_ahead: , ) 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

382 : 
if_exp -> if_stmt else else_stmt 2 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
else_stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
else_stmt -> { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
else_stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

383 : 
while_exp -> while ( bool_exp ) { stmt_list } 2 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || ) 
bool_exp -> cmp_exp 0 look_ahead: && || ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

384 : 
if_stmt -> if ( bool_exp ) { stmt_list } 2 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 2 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || ) 
bool_exp -> cmp_exp 0 look_ahead: && || ) 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ) 
cmp_exp -> true 0 look_ahead: && || ) 
cmp_exp -> false 0 look_ahead: && || ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != == + < > >= 
add_exp -> ++ var 0 look_ahead: <= - != == + < > >= 
add_exp -> -- var 0 look_ahead: <= - != == + < > >= 
add_exp -> var ++ 0 look_ahead: <= - != == + < > >= 
add_exp -> var -- 0 look_ahead: <= - != == + < > >= 
mul_exp -> mul_exp * pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: <= - != == + < > >= * / 
mul_exp -> pri_exp 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> number 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> ( add_exp ) 0 look_ahead: <= - != == + < > >= * / 
pri_exp -> apply_exp 0 look_ahead: <= - != == + < > >= * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> apply_exp . var 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var ( arg_list ) 0 look_ahead: <= - != == + . < > >= * / 
apply_exp -> var 0 look_ahead: <= - != == + . < > >= * / 

385 : 
while_exp -> while ( bool_exp ) { stmt_list } 5 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt_list -> stmt_list stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

386 : reduce 16
var_assign -> var_assign , var = calc_exp 5 look_ahead: , ; 

387 : 
if_stmt -> if ( bool_exp ) { stmt_list } 5 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt_list -> stmt_list stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

388 : 
if_stmt -> if ( bool_exp ) sg_stmt ; 5 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 

389 : reduce 61
add_exp -> add_exp + mul_exp 3 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - + ; * / 

390 : reduce 62
add_exp -> add_exp - mul_exp 3 look_ahead: && || - + ; 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - + ; * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - + ; * / 

391 : reduce 69
mul_exp -> mul_exp * pri_exp 3 look_ahead: && || - + ; * / 

392 : reduce 70
mul_exp -> mul_exp / pri_exp 3 look_ahead: && || - + ; * / 

393 : 
apply_exp -> var ( arg_list ) 3 look_ahead: && || - + . ; * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

394 : reduce 73
pri_exp -> ( add_exp ) 3 look_ahead: && || - + ; * / 

395 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: && || - + . ; * / 
apply_exp -> apply_exp . var 3 look_ahead: && || - + . ; * / 

396 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: <= - != + == . ; < > >= * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

397 : 
add_exp -> add_exp + mul_exp 2 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

398 : 
add_exp -> add_exp - mul_exp 2 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

399 : reduce 63
add_exp -> - mul_exp 2 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - + ) * / 

400 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

401 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: && || - + ) * / 
pri_exp -> number 0 look_ahead: && || - + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - + . ) * / 
apply_exp -> var 0 look_ahead: && || - + . ) * / 

402 : reduce 65
add_exp -> ++ var 2 look_ahead: && || - + ) 

403 : reduce 66
add_exp -> -- var 2 look_ahead: && || - + ) 

404 : reduce 67
add_exp -> var ++ 2 look_ahead: && || - + ) 

405 : reduce 68
add_exp -> var -- 2 look_ahead: && || - + ) 

406 : 
apply_exp -> var ( arg_list ) 2 look_ahead: && || - + . ) * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

407 : 
pri_exp -> ( add_exp ) 2 look_ahead: && || - + ) * / 
add_exp -> add_exp + mul_exp 1 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: - + ) 

408 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 2 look_ahead: && || - + . ) * / 

409 : reduce 77
apply_exp -> var ( arg_list ) 4 look_ahead: <= - != + == . < > >= ) * / 
apply_exp -> var ( arg_list ) 4 look_ahead: <= - != + == . ; < > >= * / 

410 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: <= - != + == . < > >= ) * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

411 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: - + . ; * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

412 : 
func_def -> var ( par_list ) { stmt_list } 6 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt_list -> stmt_list stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

413 : reduce 30
par_list -> par_list , type_exp var 4 look_ahead: , ) 

414 : 
add_exp -> add_exp + mul_exp 2 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

415 : 
add_exp -> add_exp - mul_exp 2 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

416 : reduce 63
add_exp -> - mul_exp 2 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - , + ) * / 

417 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

418 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: && || - , + ) * / 
pri_exp -> number 0 look_ahead: && || - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ) * / 
apply_exp -> var 0 look_ahead: && || - , + . ) * / 

419 : reduce 65
add_exp -> ++ var 2 look_ahead: && || - , + ) 

420 : reduce 66
add_exp -> -- var 2 look_ahead: && || - , + ) 

421 : reduce 67
add_exp -> var ++ 2 look_ahead: && || - , + ) 

422 : reduce 68
add_exp -> var -- 2 look_ahead: && || - , + ) 

423 : 
apply_exp -> var ( arg_list ) 2 look_ahead: && || - , + . ) * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

424 : 
pri_exp -> ( add_exp ) 2 look_ahead: && || - , + ) * / 
add_exp -> add_exp + mul_exp 1 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: - + ) 

425 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 2 look_ahead: && || - , + . ) * / 

426 : reduce 69
mul_exp -> mul_exp * pri_exp 3 look_ahead: <= - , != + == < > >= ) * / 

427 : reduce 70
mul_exp -> mul_exp / pri_exp 3 look_ahead: <= - , != + == < > >= ) * / 

428 : reduce 73
pri_exp -> ( add_exp ) 3 look_ahead: <= - , != + == < > >= ) * / 

429 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: <= - , != + == . / < > >= ) * 
apply_exp -> apply_exp . var 3 look_ahead: <= - , != + == . / < > >= ) * 

430 : 
apply_exp -> var ( arg_list ) 3 look_ahead: <= - , != + == . / < > >= ) * 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

431 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: - , + . ) * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

432 : 
add_exp -> add_exp + mul_exp 2 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

433 : 
add_exp -> add_exp - mul_exp 2 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: && || - , + ; * / 
mul_exp -> pri_exp 0 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

434 : reduce 63
add_exp -> - mul_exp 2 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - , + ; * / 

435 : 
mul_exp -> mul_exp * pri_exp 2 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

436 : 
mul_exp -> mul_exp / pri_exp 2 look_ahead: && || - , + ; * / 
pri_exp -> number 0 look_ahead: && || - , + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: && || - , + ; * / 
pri_exp -> apply_exp 0 look_ahead: && || - , + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: && || - , + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: && || - , + . ; * / 
apply_exp -> var 0 look_ahead: && || - , + . ; * / 

437 : reduce 65
add_exp -> ++ var 2 look_ahead: && || - , + ; 

438 : reduce 66
add_exp -> -- var 2 look_ahead: && || - , + ; 

439 : reduce 67
add_exp -> var ++ 2 look_ahead: && || - , + ; 

440 : reduce 68
add_exp -> var -- 2 look_ahead: && || - , + ; 

441 : 
apply_exp -> var ( arg_list ) 2 look_ahead: && || - , + . ; * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

442 : 
pri_exp -> ( add_exp ) 2 look_ahead: && || - , + ; * / 
add_exp -> add_exp + mul_exp 1 look_ahead: - + ) 
add_exp -> add_exp - mul_exp 1 look_ahead: - + ) 

443 : 
apply_exp -> apply_exp . var ( arg_list ) 2 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 2 look_ahead: && || - , + . ; * / 

444 : reduce 69
mul_exp -> mul_exp * pri_exp 3 look_ahead: <= - , != + == ; < > >= * / 

445 : reduce 70
mul_exp -> mul_exp / pri_exp 3 look_ahead: <= - , != + == ; < > >= * / 

446 : reduce 73
pri_exp -> ( add_exp ) 3 look_ahead: <= - , != + == ; < > >= * / 

447 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: <= - , != + == . / ; < > >= * 
apply_exp -> apply_exp . var 3 look_ahead: <= - , != + == . / ; < > >= * 

448 : 
apply_exp -> var ( arg_list ) 3 look_ahead: <= - , != + == . / ; < > >= * 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

449 : reduce 77
apply_exp -> var ( arg_list ) 4 look_ahead: - , + . ; * / 

450 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: - , + . ; * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

451 : 
func_def -> var ( par_list ) { stmt_list } 3 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
par_list -> par_list , type_exp var 1 look_ahead: , ) 

452 : reduce 34
if_exp -> if_stmt else else_stmt 3 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

453 : reduce 37
else_stmt -> if_exp 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

454 : 
else_stmt -> { stmt_list } 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt_list stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

455 : 
else_stmt -> sg_stmt ; 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

456 : 
while_exp -> while ( bool_exp ) { stmt_list } 3 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || ) 

457 : 
if_stmt -> if ( bool_exp ) { stmt_list } 3 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 3 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
bool_exp -> bool_exp && cmp_exp 1 look_ahead: && || ) 
bool_exp -> bool_exp || cmp_exp 1 look_ahead: && || ) 

458 : 
while_exp -> while ( bool_exp ) { stmt_list } 6 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt_list -> stmt_list stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

459 : 
if_stmt -> if ( bool_exp ) { stmt_list } 6 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 
stmt_list -> stmt_list stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

460 : reduce 36
if_stmt -> if ( bool_exp ) sg_stmt ; 6 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 

461 : reduce 77
apply_exp -> var ( arg_list ) 4 look_ahead: && || - + . ; * / 

462 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: && || - + . ; * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

463 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: <= - != + == . ; < > >= * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

464 : reduce 61
add_exp -> add_exp + mul_exp 3 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - + ) * / 

465 : reduce 62
add_exp -> add_exp - mul_exp 3 look_ahead: && || - + ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - + ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - + ) * / 

466 : reduce 69
mul_exp -> mul_exp * pri_exp 3 look_ahead: && || - + ) * / 

467 : reduce 70
mul_exp -> mul_exp / pri_exp 3 look_ahead: && || - + ) * / 

468 : 
apply_exp -> var ( arg_list ) 3 look_ahead: && || - + . ) * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

469 : reduce 73
pri_exp -> ( add_exp ) 3 look_ahead: && || - + ) * / 

470 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: && || - + . ) * / 
apply_exp -> apply_exp . var 3 look_ahead: && || - + . ) * / 

471 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: <= - != + == . < > >= ) * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

472 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: - + . ; * / 

473 : reduce 29
func_def -> var ( par_list ) { stmt_list } 7 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

474 : reduce 61
add_exp -> add_exp + mul_exp 3 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - , + ) * / 

475 : reduce 62
add_exp -> add_exp - mul_exp 3 look_ahead: && || - , + ) 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - , + ) * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - , + ) * / 

476 : reduce 69
mul_exp -> mul_exp * pri_exp 3 look_ahead: && || - , + ) * / 

477 : reduce 70
mul_exp -> mul_exp / pri_exp 3 look_ahead: && || - , + ) * / 

478 : 
apply_exp -> var ( arg_list ) 3 look_ahead: && || - , + . ) * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

479 : reduce 73
pri_exp -> ( add_exp ) 3 look_ahead: && || - , + ) * / 

480 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: && || - , + . ) * / 
apply_exp -> apply_exp . var 3 look_ahead: && || - , + . ) * / 

481 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: <= - , != + == . / < > >= ) * 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

482 : reduce 77
apply_exp -> var ( arg_list ) 4 look_ahead: <= - , != + == . / < > >= ) * 

483 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: - , + . ) * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

484 : reduce 61
add_exp -> add_exp + mul_exp 3 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - , + ; * / 

485 : reduce 62
add_exp -> add_exp - mul_exp 3 look_ahead: && || - , + ; 
mul_exp -> mul_exp * pri_exp 1 look_ahead: && || - , + ; * / 
mul_exp -> mul_exp / pri_exp 1 look_ahead: && || - , + ; * / 

486 : reduce 69
mul_exp -> mul_exp * pri_exp 3 look_ahead: && || - , + ; * / 

487 : reduce 70
mul_exp -> mul_exp / pri_exp 3 look_ahead: && || - , + ; * / 

488 : 
apply_exp -> var ( arg_list ) 3 look_ahead: && || - , + . ; * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

489 : reduce 73
pri_exp -> ( add_exp ) 3 look_ahead: && || - , + ; * / 

490 : reduce 76
apply_exp -> apply_exp . var ( arg_list ) 3 look_ahead: && || - , + . ; * / 
apply_exp -> apply_exp . var 3 look_ahead: && || - , + . ; * / 

491 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: <= - , != + == . / ; < > >= * 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

492 : reduce 77
apply_exp -> var ( arg_list ) 4 look_ahead: <= - , != + == . / ; < > >= * 

493 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: - , + . ; * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

494 : 
func_def -> var ( par_list ) { stmt_list } 4 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

495 : 
else_stmt -> { stmt_list } 2 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt_list stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

496 : reduce 39
else_stmt -> sg_stmt ; 2 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

497 : 
while_exp -> while ( bool_exp ) { stmt_list } 4 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

498 : 
if_stmt -> if ( bool_exp ) { stmt_list } 4 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 4 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

499 : reduce 40
while_exp -> while ( bool_exp ) { stmt_list } 7 look_ahead: char bool - break if number ! false chr string while eof ++ continue return str double -- ( int true var 

500 : reduce 35
if_stmt -> if ( bool_exp ) { stmt_list } 7 look_ahead: char bool - break else if number ! false chr string while eof ++ continue return str double -- ( int true var 

501 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: && || - + . ; * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

502 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: <= - != + == . ; < > >= * / 

503 : reduce 77
apply_exp -> var ( arg_list ) 4 look_ahead: && || - + . ) * / 

504 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: && || - + . ) * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

505 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: <= - != + == . < > >= ) * / 

506 : reduce 77
apply_exp -> var ( arg_list ) 4 look_ahead: && || - , + . ) * / 

507 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: && || - , + . ) * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

508 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: <= - , != + == . / < > >= ) * 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

509 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: - , + . ) * / 

510 : reduce 77
apply_exp -> var ( arg_list ) 4 look_ahead: && || - , + . ; * / 

511 : 
apply_exp -> apply_exp . var ( arg_list ) 4 look_ahead: && || - , + . ; * / 
arg_list -> arg_list , calc_exp 0 look_ahead: , ) 
arg_list -> calc_exp 0 look_ahead: , ) 
arg_list -> e 0 look_ahead: , ) 
calc_exp -> add_exp 0 look_ahead: , ) 
calc_exp -> bool_exp 0 look_ahead: , ) 
calc_exp -> str_exp 0 look_ahead: , ) 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> - mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> mul_exp 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> ++ var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> -- var 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var ++ 0 look_ahead: <= - , != + == < > >= ) 
add_exp -> var -- 0 look_ahead: <= - , != + == < > >= ) 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || , ) 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || , ) 
bool_exp -> ! cmp_exp 0 look_ahead: && || , ) 
bool_exp -> cmp_exp 0 look_ahead: && || , ) 
str_exp -> str_exp + add_exp 0 look_ahead: , + ) 
str_exp -> add_exp + str_exp 0 look_ahead: , + ) 
str_exp -> str 0 look_ahead: , + ) 
str_exp -> chr 0 look_ahead: , + ) 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - , + ) * / 
mul_exp -> pri_exp 0 look_ahead: - , + ) * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || , ) 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || , ) 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || , ) 
cmp_exp -> true 0 look_ahead: && || , ) 
cmp_exp -> false 0 look_ahead: && || , ) 
pri_exp -> number 0 look_ahead: - , + ) * / 
pri_exp -> ( add_exp ) 0 look_ahead: - , + ) * / 
pri_exp -> apply_exp 0 look_ahead: - , + ) * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> apply_exp . var 0 look_ahead: - , + . ) * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - , + . ) * / 
apply_exp -> var 0 look_ahead: - , + . ) * / 

512 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: <= - , != + == . / ; < > >= * 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

513 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: - , + . ; * / 

514 : 
func_def -> var ( par_list ) { stmt_list } 5 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt_list stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

515 : reduce 38
else_stmt -> { stmt_list } 3 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

516 : 
while_exp -> while ( bool_exp ) { stmt_list } 5 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt_list stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

517 : 
if_stmt -> if ( bool_exp ) { stmt_list } 5 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt_list stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

518 : 
if_stmt -> if ( bool_exp ) sg_stmt ; 5 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 

519 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: && || - + . ; * / 

520 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: && || - + . ) * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

521 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: && || - , + . ) * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

522 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: <= - , != + == . / < > >= ) * 

523 : 
apply_exp -> apply_exp . var ( arg_list ) 5 look_ahead: && || - , + . ; * / 
arg_list -> arg_list , calc_exp 1 look_ahead: , ) 

524 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: <= - , != + == . / ; < > >= * 

525 : 
func_def -> var ( par_list ) { stmt_list } 6 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt_list stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

526 : 
while_exp -> while ( bool_exp ) { stmt_list } 6 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt_list stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

527 : 
if_stmt -> if ( bool_exp ) { stmt_list } 6 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt_list -> stmt_list stmt 1 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> var_def ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> func_def 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> if_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> while_exp 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
stmt -> sg_stmt ; 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
var_def -> var_def , var 0 look_ahead: , ; 
var_def -> type_exp var 0 look_ahead: , ; 
func_def -> var ( par_list ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
if_exp -> if_stmt else else_stmt 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
while_exp -> while ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 
sg_stmt -> var_assign 0 look_ahead: ; 
sg_stmt -> calc_exp 0 look_ahead: ; 
sg_stmt -> control_flow 0 look_ahead: ; 
type_exp -> int 0 look_ahead: var 
type_exp -> double 0 look_ahead: var 
type_exp -> bool 0 look_ahead: var 
type_exp -> string 0 look_ahead: var 
type_exp -> char 0 look_ahead: var 
type_exp -> var 0 look_ahead: var 
if_stmt -> if ( bool_exp ) { stmt_list } 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
if_stmt -> if ( bool_exp ) sg_stmt ; 0 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 
var_assign -> var_assign , var = calc_exp 0 look_ahead: , ; 
var_assign -> type_exp var = calc_exp 0 look_ahead: , ; 
var_assign -> var = calc_exp 0 look_ahead: , ; 
var_assign -> var += calc_exp 0 look_ahead: , ; 
var_assign -> var -= calc_exp 0 look_ahead: , ; 
var_assign -> var *= calc_exp 0 look_ahead: , ; 
var_assign -> var /= calc_exp 0 look_ahead: , ; 
calc_exp -> add_exp 0 look_ahead: ; 
calc_exp -> bool_exp 0 look_ahead: ; 
calc_exp -> str_exp 0 look_ahead: ; 
control_flow -> return calc_exp 0 look_ahead: ; 
control_flow -> continue 0 look_ahead: ; 
control_flow -> break 0 look_ahead: ; 
add_exp -> add_exp + mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> add_exp - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> - mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> mul_exp 0 look_ahead: <= - != + == ; < > >= 
add_exp -> ++ var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> -- var 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var ++ 0 look_ahead: <= - != + == ; < > >= 
add_exp -> var -- 0 look_ahead: <= - != + == ; < > >= 
bool_exp -> bool_exp && cmp_exp 0 look_ahead: && || ; 
bool_exp -> bool_exp || cmp_exp 0 look_ahead: && || ; 
bool_exp -> ! cmp_exp 0 look_ahead: && || ; 
bool_exp -> cmp_exp 0 look_ahead: && || ; 
str_exp -> str_exp + add_exp 0 look_ahead: + ; 
str_exp -> add_exp + str_exp 0 look_ahead: + ; 
str_exp -> str 0 look_ahead: + ; 
str_exp -> chr 0 look_ahead: + ; 
mul_exp -> mul_exp * pri_exp 0 look_ahead: - + ; * / 
mul_exp -> mul_exp / pri_exp 0 look_ahead: - + ; * / 
mul_exp -> pri_exp 0 look_ahead: - + ; * / 
cmp_exp -> ( bool_exp ) 0 look_ahead: && || ; 
cmp_exp -> add_exp > add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp >= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp < add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp <= add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp == add_exp 0 look_ahead: && || ; 
cmp_exp -> add_exp != add_exp 0 look_ahead: && || ; 
cmp_exp -> true 0 look_ahead: && || ; 
cmp_exp -> false 0 look_ahead: && || ; 
pri_exp -> number 0 look_ahead: - + ; * / 
pri_exp -> ( add_exp ) 0 look_ahead: - + ; * / 
pri_exp -> apply_exp 0 look_ahead: - + ; * / 
apply_exp -> apply_exp . var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> apply_exp . var 0 look_ahead: - + . ; * / 
apply_exp -> var ( arg_list ) 0 look_ahead: - + . ; * / 
apply_exp -> var 0 look_ahead: - + . ; * / 

528 : reduce 36
if_stmt -> if ( bool_exp ) sg_stmt ; 6 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 

529 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: && || - + . ) * / 

530 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: && || - , + . ) * / 

531 : reduce 75
apply_exp -> apply_exp . var ( arg_list ) 6 look_ahead: && || - , + . ; * / 

532 : reduce 29
func_def -> var ( par_list ) { stmt_list } 7 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

533 : reduce 40
while_exp -> while ( bool_exp ) { stmt_list } 7 look_ahead: char bool - break if number ! false chr string while ++ continue return } str double -- ( int true var 

534 : reduce 35
if_stmt -> if ( bool_exp ) { stmt_list } 7 look_ahead: char bool - break else if number ! false chr string while ++ continue return } str double -- ( int true var 

//end
