
package yftest.test;/*
//Church number
function zero=(function f, int s)->{return f(s);};
function inc_1=(function m, function f, int s)->{return (function f, int s)->{return f(m (f, s));};};
function add_2=(function m, function n, function f, int s)->{return (function f, int s)->{return m (f (n (f (s))));};};
function f; int s;
//1=0'
function n_1=inc_1(zero, f, s);
//2=1+1=0'+0'
function n_2=add_2(n_1, n_1, f, s);
*/
class A<T1>{
T1 a;
T1 f(T1 a){this.a=a; return new T1();}
}

class B<T1> extends A{
T1 b;
<T2> T2 g(){return new T2();}
}

A<int> b=new B<int>();
int i=b.f(1);
bool j=((B<int>)b).<bool>g();

/*
int fact(int a){
	if(a==1) return 1;
	else
	return a*fact(a-1);
}
int fib(int a){
	if(a<3) return 1;
	else
	return fib(a-1)+fib(a-2);
}
int a=1;
int b=fib(a);

int[][] as=new int[10][10];
as[0][0]=6;
int b=as[1][1];

class A<T1>{
T1 a;
<T2,T3> T1 f(T2 b,T3 c){return this.a;}
}

class B<T1> extends A{
T1 b;
<T2,T3> T1 f(T2 b,T3 c){return this.b;}
}

A<bool> ga=new B<bool>();
bool t=ga.<int,int>f(1,2);

function f = ( int a ) -> {  return ()->{return 1;};  };
f(1);
*/