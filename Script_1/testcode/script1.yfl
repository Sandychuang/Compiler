/*
int fact(int a){
	if(a==1) return 1;
	else
	return a*fact(a-1);
}
int fib(int a){
	if(a<3) return 1;
	else
	return fib(a-1)+fib(a-2);
}
//int a=1;
//int b=fib(a);

int[][] as=new int[10][10];
as[0][0]=6;
int b=as[1][1];


class A{
int b;
int f(int b){this.b=b+1;return this.b;}
}
class B extends A{
int c;
int f(int b){this.b=b+2;return this.b;}
}
interface D{
int g(){return 0;}
}
class C extends B implements D{
int g(){return 1;}
}
A a=new C();
B b=new C();
D d=new C();
int c=a.b;
int f=a.f(1);
f=b.f(2);
int g=d.g();
*/

/*
class A<T1>{
<T2>T2 f(T2 t){return new T2();}
}
A<int> ga=new A<int>();
int t=ga.<double>f(2);


class B<T2>{
T2 g(){return new T2();}
}*/
//A<B<A<int>>> ga=new A<B<A<int>>>();
//int a = ga.f().g().f();

<T>int f(T t){return 0;}
//int t1=<int>f(1);