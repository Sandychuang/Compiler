//symbols
Goal stmt_list stmt 
var_def type_def func_def if_exp while_exp sg_stmt control_flow
var_assign calc_exp type_exp par_list if_stmt else_stmt bool_exp str_exp
add_exp cmp_exp mul_exp pri_exp apply_exp arg_list

//tokens
if else while return break continue int double bool true false string char number var str chr
|| && ! > >= < <= == != + - ++ -- * / += -= *= /= = 
e ( ) { } , . ; eof 

//grammars
Goal |>
   stmt_list 

stmt_list |> 
   stmt_list stmt 
>| stmt 

stmt |> 
   var_def ; 
>| func_def  
>| if_exp 
>| while_exp 
>| sg_stmt ; 

sg_stmt |>   
   var_assign 
>| calc_exp 
>| control_flow 

control_flow |> 
   return calc_exp 
>| continue 
>| break 

var_def |>
   var_def , var 
>| type_exp var 

var_assign |>
   var_assign , var = calc_exp 
>| type_exp var = calc_exp 
>| var = calc_exp 
>| var += calc_exp 
>| var -= calc_exp 
>| var *= calc_exp 
>| var /= calc_exp 

type_exp |>
   int
>| double
>| bool
>| string
>| char
>| var

func_def |>
   var ( par_list ) { stmt_list }

par_list |>
   par_list , type_exp var
>| type_exp var
>| e

if_exp |>
   if_stmt 
>| if_stmt else else_stmt

if_stmt |>
   if ( bool_exp ) { stmt_list }
>| if ( bool_exp ) sg_stmt ;

else_stmt |>
   if_exp
>| { stmt_list }
>| sg_stmt ;

while_exp |>
   while ( bool_exp ) { stmt_list }

calc_exp |> 
   bool_exp 
>| str_exp 

str_exp |> 
   str_exp + add_exp 
>| add_exp + str_exp 
>| str 
>| chr 

bool_exp |> 
   bool_exp && cmp_exp 
>| bool_exp || cmp_exp 
>| ! cmp_exp 
>| cmp_exp 

cmp_exp |> 
   ( bool_exp ) 
>| add_exp > add_exp 
>| add_exp >= add_exp 
>| add_exp < add_exp 
>| add_exp <= add_exp 
>| add_exp == add_exp 
>| add_exp != add_exp 
>| add_exp
>| true 
>| false   

add_exp |> 
   add_exp + mul_exp 
>| add_exp - mul_exp 
>| - mul_exp 
>| mul_exp 
>| ++ var 
>| -- var 
>| var ++ 
>| var -- 

mul_exp |> 
   mul_exp * pri_exp 
>| mul_exp / pri_exp 
>| pri_exp 

pri_exp |> 
   number 
>| ( add_exp ) 
>| apply_exp 

apply_exp |> 
   apply_exp . var ( arg_list ) 
>| apply_exp . var 
>| var ( arg_list ) 
>| var 

arg_list |> 
   arg_list , calc_exp 
>| calc_exp 
>| e 

//end