/*
int fact(int a){
	if(a==1) return 1;
	else
	return a*fact(a-1);
}
int fib(int a){
	if(a<3) return 1;
	else
	return fib(a-1)+fib(a-2);
}
int a=1;
int b=fib(a);

int[][] as=new int[10][10];
as[0][0]=6;
int b=as[1][1];

class A<T1>{
T1 a;
<T2,T3> T1 f(T2 b,T3 c){return this.a;}
}

class B<T1> extends A{
T1 b;
<T2,T3> T1 f(T2 b,T3 c){return this.b;}
}

A<bool> ga=new B<bool>();
bool t=ga.<int,int>f(1,2);

function f = ( int a ) -> {  return ()->{return 1;};  };
f(1);
*/

class Functor <T1>{
	T1 t;
	<T2> Functor<T2> fmap (function f, Functor<T1> wa) {
		T2 b=f(wa.t);
		Functor<T2> fb=new Functor<T2>();
		fb.t=b;
		return fb;
	}
}

Functor<int> a=new Functor<int>();
a.t=1;
Functor<bool> b=new Functor<bool>();
function f=(int i)->{if(i>0)return true; else return false;};
b=a.<bool>fmap( f , a);


class Monad <T1> extends Functor{
	Monad<T1> rt(T1 t){
		Monad <T1> ma=new Monad<T1>();
		ma.t=t;
		return ma;
	}
	<T2> Monad<T2> lk(Monad<T1> ma, function f){
		Monad<T2> mb=f(ma.t);
		return mb;
	}
}